:bbml
//│ Type: ⊤


`42
//│ Type: CodeBase[out Int, ⊥, ?]

:p
:fixme // this should created a quoted keyword
`false
//│ |`|false|
//│ Parsed:
//│ 	Quoted(Ident(false))
//│ ╔══[ERROR] Name not found: false
//│ ║  l.10: 	`false
//│ ╙──      	 ^^^^^
//│ ═══[ERROR] Cannot quote Error
//│ Type: CodeBase[⊥, ⊥, ?]

`"rua"
//│ Type: CodeBase[out Str, ⊥, ?]

`3.14
//│ Type: CodeBase[out Num, ⊥, ?]


x `=> x
//│ Type: CodeBase[out α0_3 -> α0_3, ⊥, ?]

x `=> `42
//│ Type: CodeBase[out ⊤ -> Int, ⊥, ?]

:e
x `=> 42
//│ ╔══[ERROR] Type error in unquoted term
//│ ║  l.34: 	x `=> 42
//│ ║        	      ^^
//│ ╙── because: cannot constrain  Int  <:  CodeBase[out α12_3, out α13_3, ?]
//│ Type: CodeBase[out ⊤ -> ⊥, ⊥, ?]


f `=> x `=> f`(x)
//│ Type: CodeBase[out (α25_3 -> α26_3) -> (α25_3 -> α26_3), ⊥, ?]


:fixme // FIXME[CY]
x `=> y `=> x `+ y
//│ ═══[ERROR] Cannot quote Sel(Ref(globalThis:import#bbPredef),Ident(+))
//│ Type: CodeBase[out ⊤ -> (⊤ -> ⊥), ⊥, ?]


:fixme // FIXME[CY]
(x, y) `=> x `+ y
//│ ═══[ERROR] Cannot quote Sel(Ref(globalThis:import#bbPredef),Ident(+))
//│ Type: CodeBase[out (⊤, ⊤) -> ⊥, ⊥, ?]

:fixme // FIXME[CY]
(x, y, z) `=> x `+ y `+ z
//│ ═══[ERROR] Cannot quote Sel(Ref(globalThis:import#bbPredef),Ident(+))
//│ ═══[ERROR] Cannot quote Sel(Ref(globalThis:import#bbPredef),Ident(+))
//│ Type: CodeBase[out (⊤, ⊤, ⊤) -> ⊥, ⊥, ?]

f `=> x `=> y `=> f`(x, y)
//│ Type: CodeBase[out ((α97_3, α99_3) -> α100_3) -> (α97_3 -> (α99_3 -> α100_3)), ⊥, ?]

`let x = `42 `in x
//│ Type: CodeBase[out Int, ⊥, ?]

:e
`let x = 42 `in x
//│ ╔══[ERROR] Type error in unquoted term
//│ ║  l.70: 	`let x = 42 `in x
//│ ║        	         ^^
//│ ╙── because: cannot constrain  Int  <:  CodeBase[out α122_2, out α123_2, ?]
//│ Type: CodeBase[⊥, ⊥, ?]

:e
`let x = `0 `in 1
//│ ╔══[ERROR] Type error in unquoted term
//│ ║  l.78: 	`let x = `0 `in 1
//│ ║        	                ^
//│ ╙── because: cannot constrain  Int  <:  CodeBase[out α131_3, out α132_3, ?]
//│ Type: CodeBase[⊥, ⊥, ?]


:fixme
`if `true then `true else `false
//│ /!!!\ Uncaught error: scala.MatchError: IfElse(InfixApp(Unquoted(Quoted(Ident(true))),keyword 'then',Unquoted(Quoted(Ident(true)))),Unquoted(Quoted(Ident(false)))) (of class hkmc2.syntax.Tree$IfElse)


:fixme
x `=> `if x `== `0.0 then `1.0 else x
//│ /!!!\ Uncaught error: scala.MatchError: IfElse(InfixApp(Unquoted(Quoted(App(Ident(==),Tup(List(Unquoted(Ident(x)), Unquoted(Quoted(DecLit(0.0)))))))),keyword 'then',Unquoted(Quoted(DecLit(1.0)))),Unquoted(Ident(x))) (of class hkmc2.syntax.Tree$IfElse)

run(`1)
//│ Type: ⊤

:breakme // FIXME[CY]
:e
run(1)
//│ Type: ⊤

:e
x `=> run(x)
//│ ╔══[ERROR] Type error in unquoted term
//│ ║  l.104: 	x `=> run(x)
//│ ║         	      ^^^^^^
//│ ╙── because: cannot constrain  ⊤  <:  CodeBase[out α136_3, out α137_3, ?]
//│ Type: CodeBase[out ⊤ -> ⊥, ⊥, ?]

:e
`let x = `42 `in run(x)
//│ ╔══[ERROR] Type error in unquoted term
//│ ║  l.112: 	`let x = `42 `in run(x)
//│ ║         	                 ^^^^^^
//│ ╙── because: cannot constrain  ⊤  <:  CodeBase[out α142_3, out α143_3, ?]
//│ Type: CodeBase[⊥, ⊥, ?]
