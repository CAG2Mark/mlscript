:global
:bbml


`42
//│ Type: CodeBase[out Int, ⊥, ?]

`false
//│ Type: CodeBase[out Bool, ⊥, ?]

`"rua"
//│ Type: CodeBase[out Str, ⊥, ?]

`3.14
//│ Type: CodeBase[out Num, ⊥, ?]


x `=> x
//│ Type: CodeBase[out α0_3 -> α0_3, ⊥, ?]

x `=> `42
//│ Type: CodeBase[out ⊤ -> Int, ⊥, ?]

:e
x `=> 42
//│ ╔══[ERROR] Type error in unquoted term
//│ ║  l.25: 	x `=> 42
//│ ║        	      ^^
//│ ╙── because: cannot constrain  Int  <:  CodeBase[out α12_3, out α13_3, ?]
//│ Type: CodeBase[out ⊤ -> ⊥, ⊥, ?]


f `=> x `=> f`(x)
//│ Type: CodeBase[out (α25_3 -> α26_3) -> (α25_3 -> α26_3), ⊥, ?]


x `=> y `=> x `+ y
//│ Type: CodeBase[out Int -> (Int -> Int), ⊥, ?]


(x, y) `=> x `+ y
//│ Type: CodeBase[out (Int, Int) -> Int, ⊥, ?]

(x, y, z) `=> x `+ y `+ z
//│ Type: CodeBase[out (Int, Int, Int) -> Int, ⊥, ?]

f `=> x `=> y `=> f`(x, y)
//│ Type: CodeBase[out ((α97_3, α99_3) -> α100_3) -> (α97_3 -> (α99_3 -> α100_3)), ⊥, ?]

`let x = `42 `in x
//│ Type: CodeBase[out Int, ⊥, ?]

:e
`let x = 42 `in x
//│ ╔══[ERROR] Type error in unquoted term
//│ ║  l.54: 	`let x = 42 `in x
//│ ║        	         ^^
//│ ╙── because: cannot constrain  Int  <:  CodeBase[out α122_2, out α123_2, ?]
//│ Type: CodeBase[⊥, ⊥, ?]

:e
`let x = `0 `in 1
//│ ╔══[ERROR] Type error in unquoted term
//│ ║  l.62: 	`let x = `0 `in 1
//│ ║        	                ^
//│ ╙── because: cannot constrain  Int  <:  CodeBase[out α131_3, out α132_3, ?]
//│ Type: CodeBase[⊥, ⊥, ?]


`if `true then `true else `false
//│ Type: CodeBase[out Bool, ⊥, ?]


x `=> `if x `== `0.0 then `1.0 else x
//│ Type: CodeBase[out α140_3 -> (α140_3 ∨ Num), ⊥, ?]

run(`1)
//│ Type: Int

:e
run(1)
//│ ╔══[ERROR] Type error in integer literal with expected type CodeBase[out α158_1, ⊥, ?]
//│ ║  l.81: 	run(1)
//│ ║        	    ^
//│ ╙── because: cannot constrain  Int  <:  CodeBase[out α158_1, ⊥, ?]
//│ Type: ⊥

:e
x `=> run(x)
//│ ╔══[ERROR] Type error in reference with expected type CodeBase[out α161_3, ⊥, ?]
//│ ║  l.89: 	x `=> run(x)
//│ ║        	          ^
//│ ╟── because: cannot constrain  CodeBase[α159_3, <α>160_3, ⊥]  <:  CodeBase[out α161_3, ⊥, ?]
//│ ╙── because: cannot constrain  D( <α>160_3 )  <:  ⊥
//│ Type: CodeBase[out CodeBase[out α162_3, ?, ?] -> α162_3, out α164_2, ?]

:e
`let x = `42 `in run(x)
//│ ╔══[ERROR] Type error in reference with expected type CodeBase[out α168_3, ⊥, ?]
//│ ║  l.98: 	`let x = `42 `in run(x)
//│ ║        	                     ^
//│ ╟── because: cannot constrain  CodeBase[α165_2, <α>167_3, ⊥]  <:  CodeBase[out α168_3, ⊥, ?]
//│ ╙── because: cannot constrain  D( <α>167_3 )  <:  ⊥
//│ ╔══[ERROR] Type error in unquoted term
//│ ║  l.98: 	`let x = `42 `in run(x)
//│ ║        	                 ^^^^^^
//│ ╟── because: cannot constrain  α168_3  <:  CodeBase[out α169_3, out α170_3, ?]
//│ ╟── because: cannot constrain  α168_3  <:  ¬(~{CodeBase[out α169_3, out α170_3, ?]})
//│ ╟── because: cannot constrain  α165_2  <:  ¬(~{CodeBase[out α169_3, out α170_3, ?]})
//│ ╟── because: cannot constrain  α165_2  <:  CodeBase[out α171_2, out α172_2, ?]
//│ ╙── because: cannot constrain  Int  <:  CodeBase[out α171_2, out α172_2, ?]
//│ Type: CodeBase[⊥, ⊥, ?]
