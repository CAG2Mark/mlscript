:global
:bbml


123
//│ Elab: { 123‹› }‹›
//│ Type: Int

3.14
//│ Elab: { 3.14‹› }‹›
//│ Type: Num

false
//│ Elab: { false‹› }‹›
//│ Type: Bool

"bbml"
//│ Elab: { "bbml"‹› }‹›
//│ Type: Str

()
//│ Elab: { }‹›
//│ Type: ⊤

fun id(x) = x
//│ Elab: { fun id(x@1) = x@1#0; }‹›
//│ Type: ⊤

fun inc(x) = x + 1
//│ Elab: { fun inc(x@1) = +#0(x@1#0, 1‹›)‹›‹›; }‹›
//│ Type: ⊤

fun mul(x, y) = x * y
//│ Elab: { fun mul(x@1, y@2) = *#0(x@1#0, y@2#0)‹›‹›; }‹›
//│ Type: ⊤

x => x
//│ Elab: { λx. x@1#0‹› }‹›
//│ Type: (α0) ->{⊥} α0

+
//│ Elab: { +#1 }‹›
//│ Type: (Int, Int) ->{⊥} Int

(x, y) => x + y
//│ Elab: { λx, y. +#2(x@1#0, y@2#0)‹›‹›‹› }‹›
//│ Type: (α0, α1) ->{⊥} α3
//│ Where:
//│   α0 <: ¬⊤ ∧ ¬⊥ ∨ Int
//│   α1 <: ¬⊤ ∧ ¬⊥ ∨ Int
//│   Int ∧ ¬⊥ <: α3

((x, y) => x + y)(40, 2)
//│ Elab: { λx, y. +#3(x@2#0, y@3#0)‹›‹›‹›(40‹›, 2‹›)‹›‹› }‹›
//│ Type: α5
//│ Where:
//│   ⊤ ∧ ¬⊥ ∧ α3 <: α5
//│   Int ∧ ¬⊥ <: α3

:e
114 + "514"
//│ Elab: { +#4(114‹›, "514"‹›)‹›‹› }‹›
//│ ╔══[ERROR] Can not solve Str <: ⊥
//│ ╙──
//│ Type: α1
//│ Where:
//│   Int ∧ ¬⊥ <: α1


inc(42)
//│ Elab: { inc#0(42‹›)‹›‹› }‹›
//│ Type: α1
//│ Where:
//│   ⊤ ∧ ¬⊥ ∧ α2 <: α1
//│   Int ∧ ¬⊥ <: α2

let x = 42 in x
//│ Elab: { { let x@1 = 42‹›; x@1#0 }‹› }‹›
//│ Type: Int

let x = 1 in let y = 2 in x + y
//│ Elab: { { let x@1 = 1‹›; { let y@2 = 2‹›; +#5(x@1#0, y@2#0)‹›‹› }‹› }‹› }‹›
//│ Type: α1
//│ Where:
//│   Int ∧ ¬⊥ <: α1

:e
let x = 0 in x + "1"
//│ Elab: { { let x@1 = 0‹›; +#6(x@1#0, "1"‹›)‹›‹› }‹› }‹›
//│ ╔══[ERROR] Can not solve Str <: ⊥
//│ ╙──
//│ Type: α1
//│ Where:
//│   Int ∧ ¬⊥ <: α1

class Foo(x: Int)
//│ Elab: { class Foo(x@1: class:Int#11) { }‹›; }‹›
//│ Type: ⊤

:e
new Nothingness(0)
//│ ╔══[ERROR] Class Nothingness not found.
//│ ║  l.101: 	new Nothingness(0)
//│ ╙──       	               ^^^
//│ Elab: { <error>‹› }‹›
//│ Type: ⊥

:e
new 42
//│ ╔══[ERROR] Illegal new expression.
//│ ╙──
//│ Elab: { <error>‹› }‹›
//│ Type: ⊥


new Foo(42)
//│ Elab: { new class:Foo(Lit(IntLit(42)))‹› }‹›
//│ Type: Foo


class Point(x: Num, y: Num, z: Num)
//│ Elab: { class Point(x@1: class:Num#1, y@2: class:Num#2, z@3: class:Num#3) { }‹›; }‹›
//│ Type: ⊤


new Point(0.0, 0.0, 0.0)
//│ Elab: { new class:Point(Lit(DecLit(0.0)), Lit(DecLit(0.0)), Lit(DecLit(0.0)))‹› }‹›
//│ Type: Point

:e
new Foo("1!5!")
//│ Elab: { new class:Foo(Lit(StrLit(1!5!)))‹› }‹›
//│ ╔══[ERROR] Can not solve Str <: ⊥
//│ ╙──
//│ Type: Foo


class Some[A](value: A)
//│ Elab: { class Some[out A@1](value@2: A@1#0) { }‹›; }‹›
//│ Type: ⊤

new Some(true)
//│ Elab: { new class:Some(Lit(BoolLit(true)))‹› }‹›
//│ Type: Some[α0]
//│ Where:
//│   Bool ∧ ¬⊥ <: α0

new Some(42)
//│ Elab: { new class:Some(Lit(IntLit(42)))‹› }‹›
//│ Type: Some[α0]
//│ Where:
//│   Int ∧ ¬⊥ <: α0
