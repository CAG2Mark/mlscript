

// * Note that this always associates to the left
:elt
fun f(x) =
  if x ==
    1 +
      2 then 0
      _ then 1
//│ Elaborated tree:
//│ Blk:
//│   stats = Ls of 
//│     TermDefinition:
//│       k = Fun
//│       sym = globalThis:block#0.f
//│       params = Ls of 
//│         ParamList:
//│           flags = ParamListFlags of false
//│           params = Ls of 
//│             Param:
//│               flags = ()
//│               sym = x@24
//│               sign = N
//│       sign = N
//│       body = S of If of Let:
//│         sym = $scrut@26
//│         term = App:
//│           lhs = Ref of .==
//│           rhs = Tup of Ls of 
//│             Fld:
//│               flags = ()
//│               value = Ref of x@24
//│               asc = N
//│             Fld:
//│               flags = ()
//│               value = Lit of IntLit of 1
//│               asc = N
//│         tail = Let: \
//│         sym = $scrut@28
//│         term = App:
//│           lhs = Ref of .+
//│           rhs = Tup of Ls of 
//│             Fld:
//│               flags = ()
//│               value = Ref of $scrut@26
//│               asc = N
//│             Fld:
//│               flags = ()
//│               value = Lit of IntLit of 2
//│               asc = N
//│         tail = Cons: \
//│         head = Branch:
//│           scrutinee = Ref of $scrut@28
//│           pattern = LitPat of BoolLit of true
//│           continuation = Else of Lit of IntLit of 0
//│         tail = Else of Lit of IntLit of 1
//│       resSym = ‹result of globalThis:block#0.f›@29
//│   res = Lit of UnitLit of true


