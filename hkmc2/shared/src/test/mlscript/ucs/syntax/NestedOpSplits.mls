

// * Note that this always associates to the left
:elt
fun f(x) =
  if x ==
    1 +
      2 then 0
      _ then 1
//│ Elaborated tree:
//│ Blk:
//│   stats = Ls of 
//│     TermDefinition:
//│       owner = S of globalThis:block#0
//│       k = Fun
//│       sym = member:f
//│       params = Ls of 
//│         ParamList:
//│           flags = ParamListFlags of false
//│           params = Ls of 
//│             Param:
//│               flags = ()
//│               sym = x@28
//│               sign = N
//│       sign = N
//│       body = S of IfLike:
//│         kw = keyword 'if'
//│         desugared = Let:
//│           sym = $scrut@30
//│           term = App:
//│             lhs = Sel:
//│               prefix = Ref of globalThis:import#Predef
//│               nme = Ident of "=="
//│             rhs = Tup of Ls of 
//│               Fld:
//│                 flags = ()
//│                 value = Ref of x@28
//│                 asc = N
//│               Fld:
//│                 flags = ()
//│                 value = Lit of IntLit of 1
//│                 asc = N
//│           tail = Let: \
//│           sym = $scrut@32
//│           term = App:
//│             lhs = Sel:
//│               prefix = Ref of globalThis:import#Predef
//│               nme = Ident of "+"
//│             rhs = Tup of Ls of 
//│               Fld:
//│                 flags = ()
//│                 value = Ref of $scrut@30
//│                 asc = N
//│               Fld:
//│                 flags = ()
//│                 value = Lit of IntLit of 2
//│                 asc = N
//│           tail = Cons: \
//│           head = Branch:
//│             scrutinee = Ref of $scrut@32
//│             pattern = LitPat of BoolLit of true
//│             continuation = Else of Lit of IntLit of 0
//│           tail = Else of Lit of IntLit of 1
//│       resSym = ‹result of member:f›@33
//│   res = Lit of UnitLit of true


