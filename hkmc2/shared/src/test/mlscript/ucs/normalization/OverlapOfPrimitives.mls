:ucs desugared

fun test(x, p) = if x is
  Int and p(x) then "foo"
  0 then "bar"
  else "qax"
//│ Desugared:
//│ >  if
//│ >    x@28 is Int and
//│ >      let $scrut@31 = p@29#666(x@28#666)
//│ >      $scrut@31 is true then "foo"
//│ >    x@28 is 0 then "bar"
//│ >    else "qax"

fun test(x, p) = if x is
  Str and p(x) then "foo"
  "lol" then "bar"
  else "qax"
//│ Desugared:
//│ >  if
//│ >    x@34 is Str and
//│ >      let $scrut@37 = p@35#666(x@34#666)
//│ >      $scrut@37 is true then "foo"
//│ >    x@34 is "lol" then "bar"
//│ >    else "qax"

test(0, _ => true)

:todo // handle overlapping branches
fun test(x, p) = if x is
  Num and p(x) then "great"
  2.71828 then "E"
  3.14159 then "PI"
  else "other"
//│ Desugared:
//│ >  if
//│ >    x@43 is Num and
//│ >      let $scrut@46 = p@44#666(x@43#666)
//│ >      $scrut@46 is true then "great"
//│ >    x@43 is 2.71828 then "E"
//│ >    x@43 is 3.14159 then "PI"
//│ >    else "other"

fun test(x, p) = if x is
  Bool and p(x) then "great"
  true then "false"
  false then "true"
//│ Desugared:
//│ >  if
//│ >    x@49 is Bool and
//│ >      let $scrut@52 = p@50#666(x@49#666)
//│ >      $scrut@52 is true then "great"
//│ >    x@49 is true then "false"
//│ >    x@49 is false then "true"

fun test(x, p) = if x is
  Object and p(x) then "great"
  Bool and p(x) then "great, again"
  true then "false"
  false then "true"
//│ Desugared:
//│ >  if
//│ >    x@55 is Object and
//│ >      let $scrut@60 = p@56#666(x@55#666)
//│ >      $scrut@60 is true then "great"
//│ >    x@55 is Bool and
//│ >      let $scrut@58 = p@56#666(x@55#666)
//│ >      $scrut@58 is true then "great, again"
//│ >    x@55 is true then "false"
//│ >    x@55 is false then "true"
