:ucs desugared

fun test(x, p) = if x is
  Int and p(x) then "foo"
  0 then "bar"
  else "qax"
//│ Desugared:
//│ >  if
//│ >    x@29 is Int and
//│ >      let $scrut@32 = p@30#666(x@29#666)
//│ >      $scrut@32 is true then "foo"
//│ >    x@29 is 0 then "bar"
//│ >    else "qax"

fun test(x, p) = if x is
  Str and p(x) then "foo"
  "lol" then "bar"
  else "qax"
//│ Desugared:
//│ >  if
//│ >    x@35 is Str and
//│ >      let $scrut@38 = p@36#666(x@35#666)
//│ >      $scrut@38 is true then "foo"
//│ >    x@35 is "lol" then "bar"
//│ >    else "qax"

test(0, _ => true)

:todo // handle overlapping branches
fun test(x, p) = if x is
  Num and p(x) then "great"
  2.71828 then "E"
  3.14159 then "PI"
  else "other"
//│ Desugared:
//│ >  if
//│ >    x@44 is Num and
//│ >      let $scrut@47 = p@45#666(x@44#666)
//│ >      $scrut@47 is true then "great"
//│ >    x@44 is 2.71828 then "E"
//│ >    x@44 is 3.14159 then "PI"
//│ >    else "other"

fun test(x, p) = if x is
  Bool and p(x) then "great"
  true then "false"
  false then "true"
//│ Desugared:
//│ >  if
//│ >    x@50 is Bool and
//│ >      let $scrut@53 = p@51#666(x@50#666)
//│ >      $scrut@53 is true then "great"
//│ >    x@50 is true then "false"
//│ >    x@50 is false then "true"

fun test(x, p) = if x is
  Object and p(x) then "great"
  Bool and p(x) then "great, again"
  true then "false"
  false then "true"
//│ Desugared:
//│ >  if
//│ >    x@56 is Object and
//│ >      let $scrut@61 = p@57#666(x@56#666)
//│ >      $scrut@61 is true then "great"
//│ >    x@56 is Bool and
//│ >      let $scrut@59 = p@57#666(x@56#666)
//│ >      $scrut@59 is true then "great, again"
//│ >    x@56 is true then "false"
//│ >    x@56 is false then "true"
