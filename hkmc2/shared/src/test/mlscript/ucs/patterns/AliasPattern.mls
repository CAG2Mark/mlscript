:import ../prelude/Option.mls
//│ Imported 3 member(s)

:global
:ucs desugared

fun map(f) = case
  Some(x)   then Some(f(x))
  None as n then n
//│ Desugared:
//│ >  if
//│ >    caseScrut@33 is Some($param0@35) and
//│ >      let x@36 = $param0@35#0
//│ >      else globalThis:import#Option#666.Some‹member:Some›(f@32#666(x@36#666))
//│ >    caseScrut@33 is None and
//│ >      let n@34 = caseScrut@33#1
//│ >      else n@34#666

fun map(f) = case
  Some(x as n) then Some of f(n)
  None as n then n
//│ Desugared:
//│ >  if
//│ >    caseScrut@42 is Some($param0@44) and
//│ >      let x@46 = $param0@44#0
//│ >      let n@45 = $param0@44#1
//│ >      else globalThis:import#Option#666.Some‹member:Some›(f@41#666(n@45#666))
//│ >    caseScrut@42 is None and
//│ >      let n@43 = caseScrut@42#1
//│ >      else n@43#666

fun foo = case
  Some(Some(a as b) as c) as d then [a, b, c, d]
//│ Desugared:
//│ >  if caseScrut@51 is Some($param0@53) and $param0@53 is Some($param0@55) and
//│ >    let a@57 = $param0@55#0
//│ >    let b@56 = $param0@55#1
//│ >    let c@54 = $param0@53#1
//│ >    let d@52 = caseScrut@51#1
//│ >    else [a@57#666, b@56#666, c@54#666, d@52#666]
