:import ../prelude/Option.mls
//│ Imported 3 member(s)

:global
:ucs desugared

fun map(f) = case
  Some(x)   then Some(f(x))
  None as n then n
//│ Desugared:
//│ >  if
//│ >    caseScrut@32 is Some($param0@34) and
//│ >      let x@35 = $param0@34#0
//│ >      else globalThis:import#Option#666.Some‹member:Some›(f@31#666(x@35#666))
//│ >    caseScrut@32 is None and
//│ >      let n@33 = caseScrut@32#1
//│ >      else n@33#666

fun map(f) = case
  Some(x as n) then Some of f(n)
  None as n then n
//│ Desugared:
//│ >  if
//│ >    caseScrut@41 is Some($param0@43) and
//│ >      let x@45 = $param0@43#0
//│ >      let n@44 = $param0@43#1
//│ >      else globalThis:import#Option#666.Some‹member:Some›(f@40#666(n@44#666))
//│ >    caseScrut@41 is None and
//│ >      let n@42 = caseScrut@41#1
//│ >      else n@42#666

fun foo = case
  Some(Some(a as b) as c) as d then [a, b, c, d]
//│ Desugared:
//│ >  if caseScrut@50 is Some($param0@52) and $param0@52 is Some($param0@54) and
//│ >    let a@56 = $param0@54#0
//│ >    let b@55 = $param0@54#1
//│ >    let c@53 = $param0@52#1
//│ >    let d@51 = caseScrut@50#1
//│ >    else [a@56#666, b@55#666, c@53#666, d@51#666]
