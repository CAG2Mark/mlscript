:import ../prelude/Option.mls
//│ Imported 3 member(s)

:global
:ucs desugared

fun map(f) = case
  Some(x)   then Some(f(x))
  None as n then n
//│ Desugared:
//│ >  if
//│ >    caseScrut@15 is Some($param0@17) and
//│ >      let x@18 = $param0@17#0
//│ >      else globalThis:import#Option#666.Some‹member:Some›(f@14#666(x@18#666))
//│ >    caseScrut@15 is None and
//│ >      let n@16 = caseScrut@15#1
//│ >      else n@16#666

fun map(f) = case
  Some(x as n) then Some of f(n)
  None as n then n
//│ Desugared:
//│ >  if
//│ >    caseScrut@24 is Some($param0@26) and
//│ >      let x@28 = $param0@26#0
//│ >      let n@27 = $param0@26#1
//│ >      else globalThis:import#Option#666.Some‹member:Some›(f@23#666(n@27#666))
//│ >    caseScrut@24 is None and
//│ >      let n@25 = caseScrut@24#1
//│ >      else n@25#666

fun foo = case
  Some(Some(a as b) as c) as d then [a, b, c, d]
//│ Desugared:
//│ >  if caseScrut@33 is Some($param0@35) and $param0@35 is Some($param0@37) and
//│ >    let a@39 = $param0@37#0
//│ >    let b@38 = $param0@37#1
//│ >    let c@36 = $param0@35#1
//│ >    let d@34 = caseScrut@33#1
//│ >    else [a@39#666, b@38#666, c@36#666, d@34#666]
