:js
:handler

// TODO we should probably forbid handlers in constructors


abstract class Effect with
  fun perform(arg: Str): Str


object Lol with
  handle h = Effect with
    fun perform(arg)(k) =
      print(arg)
      "b"
  print(h.perform("k"))
//│ > k

class Lol() with
  handle h = Effect with
    fun perform(arg)(k) =
      print(arg)
      "b"
  print(h.perform("k"))
  val x = 123

//  FIXME should either return 'b' or crash, not return a partially-initialized instance of Lol
:expect 'b'
let oops = Lol()
//│ > k
//│ FAILURE: Unexpected runtime error
//│ ═══[RUNTIME ERROR] Expected: 'b', got: null
//│ FAILURE: Unexpected runtime error
//│ ═══[RUNTIME ERROR] Expected: 'b', got: Lol {}
//│ oops = Lol {}

oops.x
//│ FAILURE: Unexpected runtime error
//│ ═══[RUNTIME ERROR] Error: Access to required field 'x' yielded 'undefined'
//│     at REPL9:1:77
//│     at ContextifyScript.runInThisContext (node:vm:137:12)
//│     at REPLServer.defaultEval (node:repl:598:22)
//│     at bound (node:domain:433:15)
//│     at REPLServer.runBound [as eval] (node:domain:444:12)
//│     at REPLServer.onLine (node:repl:927:10)
//│     at REPLServer.emit (node:events:518:28)
//│     at REPLServer.emit (node:domain:489:12)
//│     at [_onLine] [as _onLine] (node:internal/readline/interface:415:12)
//│     at [_normalWrite] [as _normalWrite] (node:internal/readline/interface:609:22)


