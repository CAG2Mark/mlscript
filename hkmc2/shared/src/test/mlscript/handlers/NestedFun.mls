:js
:il

// Problem: wrong replacement of y to bar.y
:fixme
fun sum() = 0
fun foo(x) =
  let y = 1
  fun bar() =
    set y += 1
    sum()
  bar()
  y
foo(42)
//│ /!!!\ Uncaught error: hkmc2.InternalError: `this` not in scope: class:Cont$30$bar

:lot
fun foo() =
  let y = 1
  fun bar() =
    set y += 1
  bar()
//│ Lowered:
//│ Program:
//│   imports = Nil
//│   main = Define:
//│     defn = FunDefn:
//│       sym = member:foo
//│       params = Ls of 
//│         ParamList:
//│           flags = ParamListFlags of false
//│           params = Nil
//│       body = Define:
//│         defn = ClsLikeDefn:
//│           sym = class:Cont$54$foo
//│           k = Cls
//│           methods = Ls of 
//│             FunDefn:
//│               sym = member:resume
//│               params = Ls of 
//│                 ParamList:
//│                   flags = ParamListFlags of false
//│                   params = Ls of 
//│                     Param:
//│                       flags = ()
//│                       sym = value$@65
//│                       sign = N
//│               body = Match:
//│                 scrut = Ref of class:Cont$54$foo.pc$0
//│                 arms = Ls of 
//│                   Tuple2:
//│                     _1 = Lit of IntLit of 2
//│                     _2 = Assign:
//│                       lhs = class:Cont$54$foo.res$0
//│                       rhs = Ref of value$@65
//│                       rest = End of ""
//│                 dflt = S of End of ""
//│                 rest = Label: \
//│                 label = $contLoop@64
//│                 body = Match:
//│                   scrut = Ref of class:Cont$54$foo.pc$0
//│                   arms = Ls of 
//│                     Tuple2:
//│                       _1 = Lit of IntLit of 3
//│                       _2 = Assign:
//│                         lhs = class:Cont$55$bar.y$0
//│                         rhs = Lit of IntLit of 1
//│                         rest = Define: \
//│                         defn = FunDefn:
//│                           sym = member:bar
//│                           params = Ls of 
//│                             ParamList:
//│                               flags = ParamListFlags of false
//│                               params = Nil
//│                           body = Define:
//│                             defn = ClsLikeDefn:
//│                               sym = class:Cont$55$bar
//│                               k = Cls
//│                               methods = Ls of 
//│                                 FunDefn:
//│                                   sym = member:resume
//│                                   params = Ls of 
//│                                     ParamList:
//│                                       flags = ParamListFlags of false
//│                                       params = Ls of 
//│                                         Param:
//│                                           flags = ()
//│                                           sym = value$@60
//│                                           sign = N
//│                                   body = Label:
//│                                     label = $contLoop@59
//│                                     body = Match:
//│                                       scrut = Ref of class:Cont$55$bar.pc$0
//│                                       arms = Ls of 
//│                                         Tuple2:
//│                                           _1 = Lit of IntLit of 1
//│                                           _2 = Assign:
//│                                             lhs = class:Cont$55$bar.tmp$0
//│                                             rhs = Call:
//│                                               fun = Ref of builtin:+
//│                                               args = Ls of 
//│                                                 Ref of class:Cont$55$bar.y$0
//│                                                 Lit of IntLit of 1
//│                                             rest = Assign: \
//│                                             lhs = class:Cont$55$bar.y$0
//│                                             rhs = Ref of class:Cont$55$bar.tmp$0
//│                                             rest = Return: \
//│                                             res = Lit of UnitLit of true
//│                                             implct = false
//│                                       dflt = N
//│                                       rest = End of ""
//│                                     rest = End of ""
//│                               fields = Nil
//│                               ctor = End of ""
//│                             rest = Assign: \
//│                             lhs = $tmp@57
//│                             rhs = Call:
//│                               fun = Ref of builtin:+
//│                               args = Ls of 
//│                                 Ref of class:Cont$55$bar.y$0
//│                                 Lit of IntLit of 1
//│                             rest = Assign: \
//│                             lhs = class:Cont$55$bar.y$0
//│                             rhs = Ref of $tmp@57
//│                             rest = Return: \
//│                             res = Lit of UnitLit of true
//│                             implct = false
//│                         rest = Assign: \
//│                         lhs = class:Cont$54$foo.res$0
//│                         rhs = Call:
//│                           fun = Ref of member:bar
//│                           args = Nil
//│                         rest = Match: \
//│                         scrut = Ref of class:Cont$54$foo.res$0
//│                         arms = Ls of 
//│                           Tuple2:
//│                             _1 = Lit of BoolLit of true
//│                             _2 = Match:
//│                               scrut = Select:
//│                                 qual = Ref of class:Cont$54$foo.res$0
//│                                 name = Ident of "__isCont"
//│                               arms = Ls of 
//│                                 Tuple2:
//│                                   _1 = Lit of BoolLit of true
//│                                   _2 = AssignField:
//│                                     lhs = Select:
//│                                       qual = Ref of class:Cont$54$foo.res$0
//│                                       name = Ident of "tail"
//│                                     nme = Ident of "next"
//│                                     rhs = Ref of class:Cont$54$foo
//│                                     rest = Assign: \
//│                                     lhs = class:Cont$54$foo.pc$0
//│                                     rhs = Lit of IntLit of 2
//│                                     rest = Return: \
//│                                     res = Ref of class:Cont$54$foo.res$0
//│                                     implct = false
//│                               dflt = N
//│                               rest = Assign: \
//│                               lhs = class:Cont$54$foo.pc$0
//│                               rhs = Lit of IntLit of 2
//│                               rest = Break: \
//│                               label = $contLoop@64
//│                               toBeginning = true
//│                         dflt = N
//│                         rest = Assign: \
//│                         lhs = class:Cont$54$foo.pc$0
//│                         rhs = Lit of IntLit of 2
//│                         rest = Break: \
//│                         label = $contLoop@64
//│                         toBeginning = true
//│                   dflt = S of Match:
//│                     scrut = Ref of class:Cont$54$foo.pc$0
//│                     arms = Ls of 
//│                       Tuple2:
//│                         _1 = Lit of IntLit of 2
//│                         _2 = Return:
//│                           res = Ref of class:Cont$54$foo.res$0
//│                           implct = false
//│                     dflt = N
//│                     rest = End of ""
//│                   rest = End of ""
//│                 rest = End of ""
//│           fields = Nil
//│           ctor = End of ""
//│         rest = Assign: \
//│         lhs = y@47
//│         rhs = Lit of IntLit of 1
//│         rest = Define: \
//│         defn = FunDefn:
//│           sym = member:bar
//│           params = Ls of 
//│             ParamList:
//│               flags = ParamListFlags of false
//│               params = Nil
//│           body = Define:
//│             defn = ClsLikeDefn:
//│               sym = class:Cont$55$bar
//│               k = Cls
//│               methods = Ls of 
//│                 FunDefn:
//│                   sym = member:resume
//│                   params = Ls of 
//│                     ParamList:
//│                       flags = ParamListFlags of false
//│                       params = Ls of 
//│                         Param:
//│                           flags = ()
//│                           sym = value$@60
//│                           sign = N
//│                   body = Label:
//│                     label = $contLoop@59
//│                     body = Match:
//│                       scrut = Ref of class:Cont$55$bar.pc$0
//│                       arms = Ls of 
//│                         Tuple2:
//│                           _1 = Lit of IntLit of 1
//│                           _2 = Assign:
//│                             lhs = class:Cont$55$bar.tmp$0
//│                             rhs = Call:
//│                               fun = Ref of builtin:+
//│                               args = Ls of 
//│                                 Ref of class:Cont$55$bar.y$0
//│                                 Lit of IntLit of 1
//│                             rest = Assign: \
//│                             lhs = class:Cont$55$bar.y$0
//│                             rhs = Ref of class:Cont$55$bar.tmp$0
//│                             rest = Return: \
//│                             res = Lit of UnitLit of true
//│                             implct = false
//│                       dflt = N
//│                       rest = End of ""
//│                     rest = End of ""
//│               fields = Nil
//│               ctor = End of ""
//│             rest = Assign: \
//│             lhs = $tmp@57
//│             rhs = Call:
//│               fun = Ref of builtin:+
//│               args = Ls of 
//│                 Ref of y@47
//│                 Lit of IntLit of 1
//│             rest = Assign: \
//│             lhs = y@47
//│             rhs = Ref of $tmp@57
//│             rest = Return: \
//│             res = Lit of UnitLit of true
//│             implct = false
//│         rest = Assign: \
//│         lhs = $res@61
//│         rhs = Call:
//│           fun = Ref of member:bar
//│           args = Nil
//│         rest = Match: \
//│         scrut = Ref of $res@61
//│         arms = Ls of 
//│           Tuple2:
//│             _1 = Lit of BoolLit of true
//│             _2 = Match:
//│               scrut = Select:
//│                 qual = Ref of $res@61
//│                 name = Ident of "__isCont"
//│               arms = Ls of 
//│                 Tuple2:
//│                   _1 = Lit of BoolLit of true
//│                   _2 = Assign:
//│                     lhs = $tmp@62
//│                     rhs = Instantiate:
//│                       cls = Ref of member:Cont$54$foo
//│                       args = Ls of 
//│                         Lit of IntLit of 2
//│                         Lit of UnitLit of true
//│                     rest = AssignField: \
//│                     lhs = Ref of $tmp@62
//│                     nme = Ident of "pc$0"
//│                     rhs = Lit of IntLit of 2
//│                     rest = AssignField: \
//│                     lhs = Ref of $tmp@62
//│                     nme = Ident of "__isCont"
//│                     rhs = Lit of BoolLit of true
//│                     rest = AssignField: \
//│                     lhs = Ref of $tmp@62
//│                     nme = Ident of "y$0"
//│                     rhs = Ref of y@47
//│                     rest = AssignField: \
//│                     lhs = Ref of $tmp@62
//│                     nme = Ident of "next"
//│                     rhs = Select:
//│                       qual = Select:
//│                         qual = Ref of $res@61
//│                         name = Ident of "tail"
//│                       name = Ident of "next"
//│                     rest = AssignField: \
//│                     lhs = Select:
//│                       qual = Ref of $res@61
//│                       name = Ident of "tail"
//│                     nme = Ident of "next"
//│                     rhs = Ref of $tmp@62
//│                     rest = AssignField: \
//│                     lhs = Ref of $res@61
//│                     nme = Ident of "tail"
//│                     rhs = Ref of $tmp@62
//│                     rest = Return: \
//│                     res = Ref of $res@61
//│                     implct = false
//│               dflt = N
//│               rest = End of ""
//│         dflt = N
//│         rest = Return: \
//│         res = Ref of $res@61
//│         implct = false
//│     rest = Return: \
//│     res = Lit of UnitLit of true
//│     implct = true
//│ FAILURE: Unexpected exception
//│ /!!!\ Uncaught error: hkmc2.InternalError: `this` not in scope: class:Cont$55$bar
//│ 	at: hkmc2.InternalError$.apply(Diagnostic.scala:39)
//│ 	at: hkmc2.InternalError$.apply(Diagnostic.scala:43)
//│ 	at: hkmc2.codegen.js.Scope.thisError(Scope.scala:38)
//│ 	at: hkmc2.codegen.js.Scope.findThisProxy_$bang$$anonfun$1(Scope.scala:62)
//│ 	at: scala.Option.fold(Option.scala:263)
//│ 	at: hkmc2.codegen.js.Scope.findThisProxy_$bang(Scope.scala:62)
//│ 	at: hkmc2.codegen.js.Scope.findThisProxy_$bang$$anonfun$2(Scope.scala:62)
//│ 	at: scala.Option.fold(Option.scala:263)
//│ 	at: hkmc2.codegen.js.Scope.findThisProxy_$bang(Scope.scala:62)
//│ 	at: hkmc2.codegen.js.Scope.findThisProxy_$bang$$anonfun$2(Scope.scala:62)
