:js

// sanity check
:expect 5050
fun sum(n) =
  if n == 0 then 0
  else
    n + sum(n - 1)
sum(100)
//│ = 5050

// preserve tail calls
// MUST see "return globalThis.hi(tmp)" in the output
:stackSafe 5
:handler
:expect 0
:sjs
fun hi(n) =
  if n == 0 then 0
  else hi(n - 1)
hi(0)
//│ JS (unsanitized):
//│ let res;
//│ function hi(n) {
//│   let scrut, tmp, diff, scrut1, scrut2, scrut3, tmp1, res1;
//│   function Cont$241(pc1) { return new Cont$241.class(pc1); }
//│   Cont$241.class = class Cont$241 extends globalThis.Predef.__Cont.class {
//│     constructor(pc) {
//│       let tmp2;
//│       tmp2 = super(null, null);
//│       this.pc = pc;
//│     }
//│     resume(value$) {
//│       if (this.pc === 6) {
//│         res1 = value$;
//│       }
//│       contLoop: while (true) {
//│         if (this.pc === 7) {
//│           diff = globalThis.Predef.__stackDepth - globalThis.Predef.__stackOffset;
//│           scrut1 = diff >= 5;
//│           scrut2 = globalThis.Predef.__stackHandler !== undefined;
//│           scrut3 = scrut1 && scrut2;
//│           if (scrut3) {
//│             res1 = globalThis.Predef.__stackHandler.perform();
//│             if (res1 instanceof globalThis.Predef.__EffectSig.class) {
//│               res1.tail.next = this;
//│               this.pc = 6;
//│               return res1;
//│             }
//│             this.pc = 6;
//│             continue contLoop;
//│           }
//│           this.pc = 9;
//│           continue contLoop;
//│         } else if (this.pc === 9) {
//│           scrut = n == 0;
//│           if (scrut) {
//│             return 0;
//│           } else {
//│             tmp = n - 1;
//│             globalThis.Predef.__stackDepth = globalThis.Predef.__stackDepth + 1;
//│             return globalThis.hi(tmp);
//│           }
//│           this.pc = 8;
//│           continue contLoop;
//│         } else if (this.pc === 8) {
//│           break contLoop;
//│         } else if (this.pc === 6) {
//│           tmp1 = res1;
//│           this.pc = 9;
//│           continue contLoop;
//│         }
//│         break;
//│       }
//│     }
//│     toString() { return "Cont$241(" + this.pc + ")"; }
//│   };
//│   diff = globalThis.Predef.__stackDepth - globalThis.Predef.__stackOffset;
//│   scrut1 = diff >= 5;
//│   scrut2 = globalThis.Predef.__stackHandler !== undefined;
//│   scrut3 = scrut1 && scrut2;
//│   if (scrut3) {
//│     res1 = globalThis.Predef.__stackHandler.perform();
//│     if (res1 instanceof globalThis.Predef.__EffectSig.class) {
//│       res1.tail.next = new Cont$241.class(6);
//│       res1.tail = res1.tail.next;
//│       return res1;
//│     }
//│     tmp1 = res1;
//│   }
//│   scrut = n == 0;
//│   if (scrut) {
//│     return 0;
//│   } else {
//│     tmp = n - 1;
//│     globalThis.Predef.__stackDepth = globalThis.Predef.__stackDepth + 1;
//│     return globalThis.hi(tmp);
//│   }
//│ }
//│ function handleBlock$0() {
//│   let stackHandler, res1;
//│   class StackDelay$ extends globalThis.Predef.__StackDelay.class {
//│     constructor() {
//│       let tmp;
//│       tmp = super();
//│     }
//│     perform() {
//│       return globalThis.Predef.__mkEffect(stackHandler, (resume) => {
//│         let res2, curOffset, res3;
//│         function Cont$216(pc1) { return new Cont$216.class(pc1); }
//│         Cont$216.class = class Cont$216 extends globalThis.Predef.__Cont.class {
//│           constructor(pc) {
//│             let tmp;
//│             tmp = super(null, null);
//│             this.pc = pc;
//│           }
//│           resume(value$) {
//│             if (this.pc === 3) {
//│               res3 = value$;
//│             }
//│             contLoop: while (true) {
//│               if (this.pc === 4) {
//│                 curOffset = globalThis.Predef.__stackOffset;
//│                 globalThis.Predef.__stackOffset = globalThis.Predef.__stackDepth;
//│                 res3 = resume();
//│                 if (res3 instanceof globalThis.Predef.__EffectSig.class) {
//│                   res3.tail.next = this;
//│                   this.pc = 3;
//│                   return res3;
//│                 }
//│                 this.pc = 3;
//│                 continue contLoop;
//│               } else if (this.pc === 3) {
//│                 res2 = res3;
//│                 globalThis.Predef.__stackOffset = curOffset;
//│                 return res2;
//│               }
//│               break;
//│             }
//│           }
//│           toString() { return "Cont$216(" + this.pc + ")"; }
//│         };
//│         curOffset = globalThis.Predef.__stackOffset;
//│         globalThis.Predef.__stackOffset = globalThis.Predef.__stackDepth;
//│         res3 = resume();
//│         if (res3 instanceof globalThis.Predef.__EffectSig.class) {
//│           res3.tail.next = new Cont$216.class(3);
//│           res3.tail = res3.tail.next;
//│           return res3;
//│         }
//│         res2 = res3;
//│         globalThis.Predef.__stackOffset = curOffset;
//│         return res2;
//│       });
//│     }
//│     toString() { return "StackDelay$"; }
//│   }
//│   stackHandler = new StackDelay$();
//│   function Cont$192(pc1) { return new Cont$192.class(pc1); }
//│   Cont$192.class = class Cont$192 extends globalThis.Predef.__Cont.class {
//│     constructor(pc) {
//│       let tmp;
//│       tmp = super(null, null);
//│       this.pc = pc;
//│     }
//│     resume(value$) {
//│       if (this.pc === 1) {
//│         res1 = value$;
//│       }
//│       contLoop: while (true) {
//│         if (this.pc === 2) {
//│           globalThis.Predef.__stackDepth = 0;
//│           globalThis.Predef.__stackHandler = stackHandler;
//│           globalThis.Predef.__stackDepth = globalThis.Predef.__stackDepth + 1;
//│           res1 = globalThis.hi(0);
//│           if (res1 instanceof globalThis.Predef.__EffectSig.class) {
//│             res1.tail.next = this;
//│             this.pc = 1;
//│             return res1;
//│           }
//│           this.pc = 1;
//│           continue contLoop;
//│         } else if (this.pc === 1) {
//│           return res1;
//│         }
//│         break;
//│       }
//│     }
//│     toString() { return "Cont$192(" + this.pc + ")"; }
//│   };
//│   globalThis.Predef.__stackDepth = 0;
//│   globalThis.Predef.__stackHandler = stackHandler;
//│   globalThis.Predef.__stackDepth = globalThis.Predef.__stackDepth + 1;
//│   res1 = globalThis.hi(0);
//│   if (res1 instanceof globalThis.Predef.__EffectSig.class) {
//│     res1.tail.next = new Cont$192(1);
//│     return globalThis.Predef.__handleBlockImpl(res1, stackHandler);
//│   }
//│   return res1;
//│ }
//│ res = handleBlock$0();
//│ if (res instanceof this.Predef.__EffectSig.class) {
//│   throw new this.Error("Unhandled effects");
//│ }
//│ this.Predef.__stackDepth = 0;
//│ this.Predef.__stackHandler = undefined;
//│ res
//│ = 0

:sjs
:stackSafe 1000
:handler
:expect 50005000
fun sum(n) =
  if n == 0 then 0
  else
    n + sum(n - 1)
sum(10000)
//│ JS (unsanitized):
//│ let res;
//│ function sum(n) {
//│   let scrut, tmp, tmp1, diff, scrut1, scrut2, scrut3, tmp2, prevDepth, tmp3, res1, res2;
//│   function Cont$484(pc1) { return new Cont$484.class(pc1); }
//│   Cont$484.class = class Cont$484 extends globalThis.Predef.__Cont.class {
//│     constructor(pc) {
//│       let tmp4;
//│       tmp4 = super(null, null);
//│       this.pc = pc;
//│     }
//│     resume(value$) {
//│       if (this.pc === 7) {
//│         res2 = value$;
//│       } else if (this.pc === 6) {
//│         res1 = value$;
//│       }
//│       contLoop: while (true) {
//│         if (this.pc === 8) {
//│           diff = globalThis.Predef.__stackDepth - globalThis.Predef.__stackOffset;
//│           scrut1 = diff >= 1000;
//│           scrut2 = globalThis.Predef.__stackHandler !== undefined;
//│           scrut3 = scrut1 && scrut2;
//│           if (scrut3) {
//│             res1 = globalThis.Predef.__stackHandler.perform();
//│             if (res1 instanceof globalThis.Predef.__EffectSig.class) {
//│               res1.tail.next = this;
//│               this.pc = 6;
//│               return res1;
//│             }
//│             this.pc = 6;
//│             continue contLoop;
//│           }
//│           this.pc = 10;
//│           continue contLoop;
//│         } else if (this.pc === 10) {
//│           scrut = n == 0;
//│           if (scrut) {
//│             return 0;
//│           } else {
//│             tmp = n - 1;
//│             prevDepth = globalThis.Predef.__stackDepth;
//│             globalThis.Predef.__stackDepth = globalThis.Predef.__stackDepth + 1;
//│             res2 = globalThis.sum(tmp);
//│             if (res2 instanceof globalThis.Predef.__EffectSig.class) {
//│               res2.tail.next = this;
//│               this.pc = 7;
//│               return res2;
//│             }
//│             this.pc = 7;
//│             continue contLoop;
//│           }
//│           this.pc = 9;
//│           continue contLoop;
//│         } else if (this.pc === 9) {
//│           break contLoop;
//│         } else if (this.pc === 7) {
//│           tmp2 = res2;
//│           globalThis.Predef.__stackDepth = prevDepth;
//│           tmp1 = tmp2;
//│           return n + tmp1;
//│         } else if (this.pc === 6) {
//│           tmp3 = res1;
//│           this.pc = 10;
//│           continue contLoop;
//│         }
//│         break;
//│       }
//│     }
//│     toString() { return "Cont$484(" + this.pc + ")"; }
//│   };
//│   diff = globalThis.Predef.__stackDepth - globalThis.Predef.__stackOffset;
//│   scrut1 = diff >= 1000;
//│   scrut2 = globalThis.Predef.__stackHandler !== undefined;
//│   scrut3 = scrut1 && scrut2;
//│   if (scrut3) {
//│     res1 = globalThis.Predef.__stackHandler.perform();
//│     if (res1 instanceof globalThis.Predef.__EffectSig.class) {
//│       res1.tail.next = new Cont$484.class(6);
//│       res1.tail = res1.tail.next;
//│       return res1;
//│     }
//│     tmp3 = res1;
//│   }
//│   scrut = n == 0;
//│   if (scrut) {
//│     return 0;
//│   } else {
//│     tmp = n - 1;
//│     prevDepth = globalThis.Predef.__stackDepth;
//│     globalThis.Predef.__stackDepth = globalThis.Predef.__stackDepth + 1;
//│     res2 = globalThis.sum(tmp);
//│     if (res2 instanceof globalThis.Predef.__EffectSig.class) {
//│       res2.tail.next = new Cont$484.class(7);
//│       res2.tail = res2.tail.next;
//│       return res2;
//│     }
//│     tmp2 = res2;
//│     globalThis.Predef.__stackDepth = prevDepth;
//│     tmp1 = tmp2;
//│     return n + tmp1;
//│   }
//│ }
//│ function handleBlock$0() {
//│   let stackHandler, res1;
//│   class StackDelay$ extends globalThis.Predef.__StackDelay.class {
//│     constructor() {
//│       let tmp;
//│       tmp = super();
//│     }
//│     perform() {
//│       return globalThis.Predef.__mkEffect(stackHandler, (resume) => {
//│         let res2, curOffset, res3;
//│         function Cont$458(pc1) { return new Cont$458.class(pc1); }
//│         Cont$458.class = class Cont$458 extends globalThis.Predef.__Cont.class {
//│           constructor(pc) {
//│             let tmp;
//│             tmp = super(null, null);
//│             this.pc = pc;
//│           }
//│           resume(value$) {
//│             if (this.pc === 3) {
//│               res3 = value$;
//│             }
//│             contLoop: while (true) {
//│               if (this.pc === 4) {
//│                 curOffset = globalThis.Predef.__stackOffset;
//│                 globalThis.Predef.__stackOffset = globalThis.Predef.__stackDepth;
//│                 res3 = resume();
//│                 if (res3 instanceof globalThis.Predef.__EffectSig.class) {
//│                   res3.tail.next = this;
//│                   this.pc = 3;
//│                   return res3;
//│                 }
//│                 this.pc = 3;
//│                 continue contLoop;
//│               } else if (this.pc === 3) {
//│                 res2 = res3;
//│                 globalThis.Predef.__stackOffset = curOffset;
//│                 return res2;
//│               }
//│               break;
//│             }
//│           }
//│           toString() { return "Cont$458(" + this.pc + ")"; }
//│         };
//│         curOffset = globalThis.Predef.__stackOffset;
//│         globalThis.Predef.__stackOffset = globalThis.Predef.__stackDepth;
//│         res3 = resume();
//│         if (res3 instanceof globalThis.Predef.__EffectSig.class) {
//│           res3.tail.next = new Cont$458.class(3);
//│           res3.tail = res3.tail.next;
//│           return res3;
//│         }
//│         res2 = res3;
//│         globalThis.Predef.__stackOffset = curOffset;
//│         return res2;
//│       });
//│     }
//│     toString() { return "StackDelay$"; }
//│   }
//│   stackHandler = new StackDelay$();
//│   function Cont$434(pc1) { return new Cont$434.class(pc1); }
//│   Cont$434.class = class Cont$434 extends globalThis.Predef.__Cont.class {
//│     constructor(pc) {
//│       let tmp;
//│       tmp = super(null, null);
//│       this.pc = pc;
//│     }
//│     resume(value$) {
//│       if (this.pc === 1) {
//│         res1 = value$;
//│       }
//│       contLoop: while (true) {
//│         if (this.pc === 2) {
//│           globalThis.Predef.__stackDepth = 0;
//│           globalThis.Predef.__stackHandler = stackHandler;
//│           globalThis.Predef.__stackDepth = globalThis.Predef.__stackDepth + 1;
//│           res1 = globalThis.sum(10000);
//│           if (res1 instanceof globalThis.Predef.__EffectSig.class) {
//│             res1.tail.next = this;
//│             this.pc = 1;
//│             return res1;
//│           }
//│           this.pc = 1;
//│           continue contLoop;
//│         } else if (this.pc === 1) {
//│           return res1;
//│         }
//│         break;
//│       }
//│     }
//│     toString() { return "Cont$434(" + this.pc + ")"; }
//│   };
//│   globalThis.Predef.__stackDepth = 0;
//│   globalThis.Predef.__stackHandler = stackHandler;
//│   globalThis.Predef.__stackDepth = globalThis.Predef.__stackDepth + 1;
//│   res1 = globalThis.sum(10000);
//│   if (res1 instanceof globalThis.Predef.__EffectSig.class) {
//│     res1.tail.next = new Cont$434(1);
//│     return globalThis.Predef.__handleBlockImpl(res1, stackHandler);
//│   }
//│   return res1;
//│ }
//│ res = handleBlock$0();
//│ if (res instanceof this.Predef.__EffectSig.class) {
//│   throw new this.Error("Unhandled effects");
//│ }
//│ this.Predef.__stackDepth = 0;
//│ this.Predef.__stackHandler = undefined;
//│ res
//│ = 50005000

// stack-overflows without :stackSafe
:re
fun sum(n) =
  if n == 0 then 0
  else
    n + sum(n - 1)
sum(10000)
//│ ═══[RUNTIME ERROR] RangeError: Maximum call stack size exceeded

:handler
:stackSafe 100
mut val ctr = 0
fun dummy(x) = x
fun foo(f) = 
  if ctr > 10000 then 0
  else 
    set ctr += 1
    dummy(f(f))
foo(foo)
//│ = 0
//│ ctr = 10001

:stackSafe 1000
:handler
:expect 50005000
val foo =
  val f = n =>
    if n <= 0 then 0
    else n + f(n-1)
  f(10000)
foo
//│ = 50005000
//│ foo = 50005000

:re
fun foo() =
  val f = n =>
    if n <= 0 then 0
    else n + f(n-1)
  f(10000)
foo()
//│ ═══[RUNTIME ERROR] RangeError: Maximum call stack size exceeded

abstract class Eff with
  fun perform(a): ()

// functions and lambdas inside handlers
:handler
:stackSafe 100
:expect 50005000
fun foo(h) = h.perform
handle h = Eff with
  fun perform(resume) =
    val f = n =>
      if n <= 0 then 0
      else n + f(n-1)
    resume(f(10000))
foo(h)
//│ = 50005000

:re
:handler
fun foo(h) = h.perform(2)
handle h = Eff with
  fun perform(a)(resume) =
    val f = n =>
      if n <= 0 then 0
      else n + f(n-1)
    resume(f(10000))
foo(h)
//│ ═══[RUNTIME ERROR] RangeError: Maximum call stack size exceeded
