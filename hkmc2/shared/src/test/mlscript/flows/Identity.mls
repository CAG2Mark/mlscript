:typeCheck



fun id(x) = x
//│ Type: Ctor(lit:UnitLit(true),List())

id(1)
//│ Type: Flow(‹app-res›@23)

id(true)
//│ Type: Flow(‹app-res›@25)


fun foo(x) = x + x
//│ Type: Ctor(lit:UnitLit(true),List())





:fixme
(x, x) => x
//│ /!!!\ Uncaught error: scala.MatchError: Lam(List(Param(‹›,x@31,None), Param(‹›,x@32,None)),Ref(x@32)) (of class hkmc2.semantics.Term$Lam)
:fixme
(x, y) => x
//│ /!!!\ Uncaught error: scala.MatchError: Lam(List(Param(‹›,x@34,None), Param(‹›,y@35,None)),Ref(x@34)) (of class hkmc2.semantics.Term$Lam)



