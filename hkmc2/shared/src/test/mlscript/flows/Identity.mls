:typeCheck



fun id(x) = x
//│ Type: Ctor(lit:UnitLit(true),List())

id(1)
//│ Type: Flow(‹app-res›@27)

id(true)
//│ Type: Flow(‹app-res›@29)


fun foo(x) = x + x
//│ Type: Ctor(lit:UnitLit(true),List())





:fixme
(x, x) => x
//│ /!!!\ Uncaught error: scala.MatchError: Lam(List(Param(‹›,x@35,None), Param(‹›,x@36,None)),Ref(x@36)) (of class hkmc2.semantics.Term$Lam)
:fixme
(x, y) => x
//│ /!!!\ Uncaught error: scala.MatchError: Lam(List(Param(‹›,x@38,None), Param(‹›,y@39,None)),Ref(x@38)) (of class hkmc2.semantics.Term$Lam)



