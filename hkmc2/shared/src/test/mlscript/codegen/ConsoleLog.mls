:js
:sjs


// FIXME multiline result is treated as part stdout
declare val console
//│ JS:
//│ undefined
//│ > Object [console] {
//│ >   log: [Function: log],
//│ >   warn: [Function: warn],
//│ >   error: [Function: error],
//│ >   dir: [Function: dir],
//│ >   time: [Function: time],
//│ >   timeEnd: [Function: timeEnd],
//│ >   timeLog: [Function: timeLog],
//│ >   trace: [Function: trace],
//│ >   assert: [Function: assert],
//│ >   clear: [Function: clear],
//│ >   count: [Function: count],
//│ >   countReset: [Function: countReset],
//│ >   group: [Function: group],
//│ >   groupEnd: [Function: groupEnd],
//│ >   table: [Function: table],
//│ >   debug: [Function: debug],
//│ >   info: [Function: error],
//│ >   dirxml: [Function: dirxml],
//│ >   groupCollapsed: [Function: groupCollapsed],
//│ >   Console: [Function: Console],
//│ >   profile: [Function: profile],
//│ >   profileEnd: [Function: profileEnd],
//│ >   timeStamp: [Function: timeStamp],
//│ >   context: [Function: context],
//│ >   createTask: [Function: createTask]
//│ console = }


console.log("a")
console.log("b")
123
//│ JS:
//│ let tmp, tmp1; tmp = globalThis.console.log("a"); tmp1 = globalThis.console.log("b"); 123
//│ > a
//│ > b
//│ = 123

let l = console.log
l(123)
//│ JS:
//│ globalThis.l = globalThis.console.log; globalThis.l(123)
//│ > 123
//│ l = [Function: log]

42
//│ JS:
//│ 42
//│ = 42


console.log("a")
//│ JS:
//│ globalThis.console.log("a")
//│ > a


let x =
  console.log("a")
  123
console.log("b")
let y = x + 1
console.log("c")
y * 2
//│ JS:
//│ let tmp, tmp1, tmp2, tmp3;
//│ tmp = globalThis.console.log("a");
//│ globalThis.x = 123;
//│ tmp1 = globalThis.console.log("b");
//│ tmp2 = globalThis.x + 1;
//│ globalThis.y = tmp2;
//│ tmp3 = globalThis.console.log("c");
//│ globalThis.y * 2
//│ > a
//│ > b
//│ > c
//│ = 248
//│ x = 123
//│ y = 124


