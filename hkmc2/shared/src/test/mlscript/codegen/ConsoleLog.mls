:js

:global
:sjs


:silent
declare val console
//│ JS:
//│ null


console.log("a")
console.log("b")
123
//│ JS:
//│ let tmp, tmp1; tmp = this.console.log("a") ?? null; tmp1 = this.console.log("b") ?? null; 123
//│ > a
//│ > b
//│ = 123

let l = console.log
l(123)
//│ JS:
//│ let selRes, tmp;
//│ selRes = this.console.log;
//│ if (selRes === undefined) {
//│   throw new this.Error("Access to required field 'log' yielded 'undefined'");
//│ } else {
//│   tmp = selRes;
//│ }
//│ this.l = tmp;
//│ this.l(123) ?? null
//│ > 123
//│ l = [Function: log]

42
//│ JS:
//│ 42
//│ = 42


console.log("a")
//│ JS:
//│ this.console.log("a") ?? null
//│ > a


let x =
  console.log("a")
  123
console.log("b")
let y = x + 1
console.log("c")
y * 2
//│ JS:
//│ let tmp, tmp1, tmp2, tmp3;
//│ tmp = this.console.log("a") ?? null;
//│ this.x = 123;
//│ tmp1 = this.console.log("b") ?? null;
//│ tmp2 = this.x + 1;
//│ this.y = tmp2;
//│ tmp3 = this.console.log("c") ?? null;
//│ this.y * 2
//│ > a
//│ > b
//│ > c
//│ = 248
//│ x = 123
//│ y = 124


