:js

:global
:sjs


1
//│ JS (unsanitized):
//│ 1
//│ = 1

:lot
:w
1
2
//│ ╔══[WARNING] Pure expression in statement position
//│ ║  l.11: 	1
//│ ╙──      	^
//│ JS (unsanitized):
//│ 2
//│ ╔══[WARNING] Pure expression in statement position
//│ ║  l.11: 	1
//│ ╙──      	^
//│ Lowered:
//│ Program:
//│   imports = Nil
//│   main = Return:
//│     res = Lit of IntLit of 2
//│     implct = true
//│ = 2


:fixme // should be a "linking" error
log("Hi")
//│ JS (unsanitized):
//│ this.log("Hi") ?? null
//│ ═══[RUNTIME ERROR] TypeError: this.log is not a function

:fixme
:lot
log("Hi")
2
//│ JS (unsanitized):
//│ let tmp; tmp = this.log("Hi") ?? null; 2
//│ Lowered:
//│ Program:
//│   imports = Nil
//│   main = Assign:
//│     lhs = $tmp
//│     rhs = Call:
//│       fun = Select{member:log}:
//│         qual = Ref of globalThis:import#Prelude
//│         name = Ident of "log"
//│       args = Ls of 
//│         Arg:
//│           spread = false
//│           value = Lit of StrLit of "Hi"
//│     rest = Return: \
//│     res = Lit of IntLit of 2
//│     implct = true
//│ ═══[RUNTIME ERROR] TypeError: this.log is not a function


:re
2(2)
//│ JS (unsanitized):
//│ 2(2) ?? null
//│ ═══[RUNTIME ERROR] TypeError: 2 is not a function


