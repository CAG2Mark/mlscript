:js
:il

// note: seems we can't use traits yet :|
// using a field to store the effect handler instead
:fixme
:sjs
class Effect[A](perform: Str -> Str)
fun foo(e) = e.perform("hi")
handle h = Effect with
  fun perform(arg, k) = k(arg)
in
  foo(h)
  (() => h.perform("Hello"))()
//│ ═══[COMPILATION ERROR] Could not find label 'handlerBody'
//│ ═══[COMPILATION ERROR] Could not find label 'handlerBody'
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing

:fixme
:sjs
class Cell(getVal: () -> Int, setVal: Int -> ())
let x = 0
handle h = Cell with
  fun getVal(k) = k(x)
  fun setVal(value, k) =
    x = value
    k(())
in
  h.getVal()
//│ ═══[COMPILATION ERROR] Could not find label 'handlerBody'
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing

:il
:sjs
class A(x) with
  fun debug() = print(x)
let x = new A()
//│ JS:
//│ let separator, tmp;
//│ separator = undefined;
//│ function resume$(cont) {
//│   return (value) => {
//│     let cont1, value1;
//│     cont1 = cont;
//│     value1 = value;
//│     chainLoop: while (true) {
//│       if (cont1) {
//│         value1 = cont1.resume(value1);
//│         cont1 = cont1.next;
//│         continue chainLoop;
//│       }
//│       return value1;
//│       break;
//│     }
//│   };
//│ }
//│ function Cont$(resume1, resumed1, next1, isCont$1) { return new Cont$.class(resume1, resumed1, next1, isCont$1); };
//│ Cont$.class = class Cont$ {
//│   constructor(resume, resumed, next, isCont$) {
//│     this.resume = resume;
//│     this.resumed = resumed;
//│     this.next = next;
//│     this.isCont$ = isCont$;
//│     
//│   }
//│   toString() { return "Cont$(" + this.resume + ", " + this.resumed + ", " + this.next + ", " + this.isCont$ + ")"; }
//│ };
//│ this.A = function A(x1) { return new A.class(x1); };
//│ this.A.class = class A {
//│   constructor(x) {
//│     this.x = x;
//│     
//│   }
//│   debug() {
//│     let res;
//│     res = Predef.print(this.x);
//│     if (res instanceof globalThis.Cont$.class) {
//│       throw new globalThis.Error("Unhandled effects");
//│     }
//│     res = separator(0);
//│     return res;
//│   }
//│   toString() { return "A(" + this.x + ")"; }
//│ };
//│ tmp = new this.A.class();
//│ this.x = tmp;
//│ undefined
//│ x = A { x: undefined }

:fixme
:sjs
:il
fun f() =
  val x = 3
  let y = 5 in
    val x = 5
    x + y
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing
