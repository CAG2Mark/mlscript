:js

:import PredefJS.mls
//│ Imported 2 member(s)


class Some[out A](value: A)

module None


:sjs
fun test(x) =
  if (if x is
    Some(v) then Some(v + 1)
    None then None
  ) is
    Some(v) then log(v)
    None then log("none")
//│ JS:
//│ function test(...args) {
//│   globalThis.Predef.checkArgs("test", 1, args.length);
//│   let x = args[0];
//│   let param0, v, scrut, param01, v1, tmp, tmp1;
//│   if (x instanceof globalThis.Some.class) {
//│     param0 = x.value;
//│     v = param0;
//│     tmp = v + 1;
//│     tmp1 = globalThis.Some(tmp);
//│   } else {
//│     if (x instanceof globalThis.None.class) {
//│       tmp1 = globalThis.None;
//│     } else {
//│       throw new globalThis.Error("match error");
//│     }
//│   }
//│   scrut = tmp1;
//│   if (scrut instanceof globalThis.Some.class) {
//│     param01 = scrut.value;
//│     v1 = param01;
//│     return globalThis.log(v1);
//│   } else {
//│     if (scrut instanceof globalThis.None.class) {
//│       return globalThis.log("none");
//│     } else {
//│       throw new globalThis.Error("match error");
//│     }
//│   }
//│ }
//│ undefined



