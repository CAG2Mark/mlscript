:js

:import PredefJS.mls
//│ Imported 1 member(s)


class Some[out A](value: A)


let s = Some(0)
//│ s = Some { value: 0 }

if s is
  Some(x) then x
//│ = 0

if s is
  Some then s.value
//│ = 0


:sjs
x => if x is Some(x) then x
//│ JS:
//│ (x1) => {
//│   let param01, x2, tmp3;
//│   if (x1 instanceof Some) {
//│     param01 = x1.value;
//│     x2 = param01;
//│     tmp3 = x2;
//│   }
//│   return tmp3
//│ }
//│ = [Function (anonymous)]


// TODO produce simpler code (see: useless bindings)
:sjs
fun f(x) = if x is
  Some(0) then 42
  else log("oops")
//│ JS:
//│ function f(x1) {
//│   let param01, tmp3, tmp4, tmp5;
//│   if (x1 instanceof Some) {
//│     param01 = x1.value;
//│     if (param01 === 0) {
//│       tmp3 = 42;
//│     } else {
//│       tmp4 = log("oops");
//│       tmp3 = tmp4;
//│     }
//│     return tmp3
//│   } else {
//│     tmp5 = log("oops");
//│     tmp3 = tmp5;
//│   }
//│   return tmp3
//│ };
//│ undefined

f(Some(0))
//│ = 42

f(Some(1))
//│ > oops

f(0)
//│ > oops


