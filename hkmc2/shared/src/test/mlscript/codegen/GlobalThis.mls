:js


:silent
globalThis


// FIXME prevent rebinding of this name
let globalThis = "oops"
//│ globalThis = 'oops'

globalThis
//│ = 'oops'


// * This one uses `this.Error` so it's fine
:sjs
:re
if false then 0
//│ JS:
//│ let scrut; scrut = false; if (scrut) { 0 } else { throw new this.Error("match error"); }
//│ ═══[RUNTIME ERROR] Error: match error

// * This one uses `globalThis.Error`
// * Notice the failed exception throw
:sjs
:re
fun foo() =
  if false then 0
foo()
//│ JS:
//│ function foo() {
//│   let scrut;
//│   scrut = false;
//│   if (scrut) {
//│     return 0;
//│   } else {
//│     throw new globalThis.Error("match error");
//│   }
//│ }
//│ this.foo()
//│ ═══[RUNTIME ERROR] TypeError: globalThis.Error is not a constructor


