:js

:import PredefJS.mls
//│ Imported 2 member(s)


let x = 0
//│ x = 0

:sjs
let x += 1
//│ JS:
//│ let tmp; tmp = this.x + 1; this.x = tmp; undefined
//│ x = 1

x
//│ = 1

:sjs
set x = 0
//│ JS:
//│ this.x = 0; undefined

:sjs
set x += 1
//│ JS:
//│ let tmp; tmp = this.x + 1; this.x = tmp; undefined

x
//│ = 1


:sjs
set x += 1 in log(x)
//│ JS:
//│ let old, tmp, tmp1;
//│ old = this.x;
//│ try {
//│   tmp1 = this.x + 1;
//│   this.x = tmp1;
//│   tmp = this.log(this.x) ?? null;
//│ } finally {
//│   this.x = old;
//│ }
//│ tmp
//│ > 2

x
//│ = 1


fun example() =
  let x = 0
  let get_x() = x
  let x += 1
  log(x)
  log(get_x())
example()
//│ > 1
//│ > 0

fun example() =
  let x = 0
  let get_x() = x
  set x += 1
  log(x)
  log(get_x())
example()
//│ > 1
//│ > 1

:sjs
fun example() =
  let x = 0
  let get_x() = x
  set x += 1 in log(x); log(get_x())
  log(x)
  log(get_x())
example()
//│ JS:
//│ function example(...args) {
//│   globalThis.Predef.checkArgs("example", 0, true, args.length);
//│   let x, get_x, old, tmp, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6;
//│   x = 0;
//│   get_x = (...args1) => {
//│     globalThis.Predef.checkArgs("", 0, true, args1.length);
//│     return x;
//│   };
//│   old = x;
//│   try {
//│     tmp1 = x + 1;
//│     x = tmp1;
//│     tmp2 = globalThis.log(x) ?? null;
//│     tmp3 = (tmp2 , globalThis.log);
//│     tmp4 = get_x() ?? null;
//│     tmp = tmp3(tmp4) ?? null;
//│   } finally {
//│     x = old;
//│   }
//│   tmp5 = globalThis.log(x) ?? null;
//│   tmp6 = get_x() ?? null;
//│   return globalThis.log(tmp6) ?? null;
//│ }
//│ this.example() ?? null
//│ > 1
//│ > 1
//│ > 0
//│ > 0

:sjs
fun example() =
  let x = 0
  let get_x() = x
  let y =
    set x += 1 in log(x); x
  log(x)
  log(get_x())
  y
example()
//│ JS:
//│ function example(...args) {
//│   globalThis.Predef.checkArgs("example", 0, true, args.length);
//│   let x, get_x, y, old, tmp, tmp1, tmp2, tmp3, tmp4, tmp5;
//│   x = 0;
//│   get_x = (...args1) => {
//│     globalThis.Predef.checkArgs("", 0, true, args1.length);
//│     return x;
//│   };
//│   old = x;
//│   try {
//│     tmp1 = x + 1;
//│     x = tmp1;
//│     tmp2 = globalThis.log(x) ?? null;
//│     tmp = (tmp2 , x);
//│   } finally {
//│     x = old;
//│   }
//│   y = tmp;
//│   tmp3 = globalThis.log(x) ?? null;
//│   tmp4 = get_x() ?? null;
//│   tmp5 = globalThis.log(tmp4) ?? null;
//│   return y;
//│ }
//│ this.example() ?? null
//│ > 1
//│ > 0
//│ > 0
//│ = 1

