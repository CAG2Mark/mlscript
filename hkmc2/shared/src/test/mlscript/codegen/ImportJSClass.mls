:js



:sjs
import "../../js/MyClass.mjs"
//│ JS:
//│ this.MyClass = await import("/storage/mark/Repos/mlscript/hkmc2/shared/src/test/js/MyClass.mjs");
//│ if (this.MyClass.default !== undefined) this.MyClass = this.MyClass.default;
//│ undefined
//│ MyClass = [class MyClass]

MyClass
//│ = [class MyClass]

new MyClass("Bob")
//│ = MyClass { name: 'Bob' }

:todo
let C = MyClass
//│ ╔══[ERROR] Unsupported let binding shape
//│ ║  l.20: 	let C = MyClass
//│ ╙──      	    ^^^^^^^^^^^

let c = MyClass
//│ c = [class MyClass]

:todo
new c("Bob")
//│ = MyClass { name: 'Bob' }

globalThis.MyClass
//│ = [class MyClass]


:ge
fun foo() =
  import "../../js/MyClass.mjs"
  ()
//│ ╔══[COMPILATION ERROR] Imports must be at the top level
//│ ║  l.38: 	  import "../../js/MyClass.mjs"
//│ ╙──      	         ^^^^^^^^^^^^^^^^^^^^^^


