:js


import "../../mlscript-compile/Option.mls"
//│ Option = Option { Some: [class Some], None: None {}, Both: [class Both] }


open Option { isDefined }

Option.None isDefined()
//│ = false


open Option
  Some, None
  isDefined

:sjs
None isDefined()
//│ JS:
//│ Option.isDefined(Option.None)
//│ = false

(new Some(1)) isDefined()
//│ = true

:re
new Some(1) isDefined()
//│ ═══[RUNTIME ERROR] TypeError: Class constructor Some cannot be invoked without 'new'

:re
new Some(1)
  isDefined()
//│ ═══[RUNTIME ERROR] TypeError: Class constructor Some cannot be invoked without 'new'


open Option { Some, None, isDefined }

(new Some(1)) isDefined()
//│ = true

None isDefined()
//│ = false

None == Option.None
//│ = true


