:js


import "../../mlscript-compile/Option.mls"
//│ > Option {
//│ >   Some: [Function: Some] { class: [class Some] },
//│ >   None: None { class: [class None] },
//│ >   Both: [Function: Both] { class: [class Both] },
//│ >   class: [class Option]
//│ Option = }


open Option { isDefined }

Option.None isDefined()
//│ = false

Option.Some(1) isDefined()
//│ = true


open Option
  Some, None
  isDefined

:sjs
None isDefined()
//│ JS:
//│ Option.isDefined(Option.None)
//│ = false

Some(1) isDefined()
//│ = true

Some(1)
  isDefined()
//│ = true

// TODO: make it `new Option.Some.class(1)`
:sjs
(new Some(1)) isDefined()
//│ JS:
//│ let tmp; tmp = new Option.Some(1); Option.isDefined(tmp)
//│ = true

:re
new Some(1) isDefined()
//│ ═══[RUNTIME ERROR] TypeError: tmp1 is not a constructor

:re
new Some(1)
  isDefined()
//│ ═══[RUNTIME ERROR] TypeError: tmp1 is not a constructor


open Option { Some, None, isDefined }

(new Some(1)) isDefined()
//│ = true

None isDefined()
//│ = false

None == Option.None
//│ = true


