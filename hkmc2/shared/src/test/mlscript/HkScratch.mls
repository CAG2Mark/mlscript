:js
// :de
// :sjs
// :pt
// :elt

:global
:d

abstract class Effect with
  fun perform(arg: Str): Str
//│ Elab: { Cls Effect { ‹› fun member:perform‹110›(Param(‹›,arg‹114›,Some(SynthSel(Ref(globalThis:import#Prelude‹25›),Ident(Str)))), ): globalThis:import#Prelude‹25›#666(.)Str‹member:Str‹42››; }; }

:lot
:handler
handle h = __StackDelay with
  fun resume(k) = k
2
//│ Elab: { handle globalThis:block#2‹118›.h = SynthSel(Ref(member:Predef‹108›),Ident(__StackDelay)) List(HandlerTermDefinition(k‹123›,TermDefinition(Some(class:Effect$__StackDelay$120‹121›),Fun,member:resume‹122›,List(),None,Some(Ref(k‹123›)),‹result of member:resume‹122››‹124›,‹›))); 2 }
//│ Lowered:
//│ Program:
//│   imports = Nil
//│   main = Define:
//│     defn = FunDefn:
//│       sym = member:handleBlock$0‹128›
//│       params = Ls of 
//│         ParamList:
//│           flags = ParamListFlags of false
//│           params = Nil
//│           restParam = N
//│       body = Define:
//│         defn = ClsLikeDefn:
//│           sym = class:Effect$__StackDelay$120‹121›
//│           k = Cls
//│           parentPath = S of Select{member:__StackDelay‹99›}:
//│             qual = Ref of member:Predef‹108›
//│             name = Ident of "__StackDelay"
//│           methods = Ls of 
//│             FunDefn:
//│               sym = member:resume‹122›
//│               params = Nil
//│               body = Return:
//│                 res = Call:
//│                   fun = Select:
//│                     qual = Select:
//│                       qual = Ref of globalThis:globalThis‹0›
//│                       name = Ident of "Predef"
//│                     name = Ident of "__mkEffect"
//│                   args = Ls of 
//│                     Arg:
//│                       spread = false
//│                       value = Ref of globalThis:block#2‹118›.h
//│                     Arg:
//│                       spread = false
//│                       value = Lam:
//│                         params = ParamList:
//│                           flags = ParamListFlags of false
//│                           params = Ls of 
//│                             Param:
//│                               flags = ()
//│                               sym = k‹123›
//│                               sign = N
//│                           restParam = N
//│                         body = Return:
//│                           res = Ref of k‹123›
//│                           implct = false
//│                 implct = false
//│           privateFields = Nil
//│           publicFields = Nil
//│           preCtor = Assign:
//│             lhs = $tmp‹144›
//│             rhs = Call:
//│               fun = Ref of builtin:super‹3›
//│               args = Nil
//│             rest = End of ""
//│           ctor = End of ""
//│         rest = Assign: \
//│         lhs = globalThis:block#2‹118›.h
//│         rhs = Instantiate:
//│           cls = Ref of member:Effect$__StackDelay$120‹145›
//│           args = Nil
//│         rest = Return: \
//│         res = Lit of IntLit of 2
//│         implct = false
//│     rest = Assign: \
//│     lhs = $tmp‹126›
//│     rhs = Call:
//│       fun = Ref of member:handleBlock$0‹128›
//│       args = Nil
//│     rest = Match: \
//│     scrut = Ref of $tmp‹126›
//│     arms = Ls of 
//│       Tuple2:
//│         _1 = Cls:
//│           cls = class:Dummy‹127›
//│           path = Select:
//│             qual = Select:
//│               qual = Select:
//│                 qual = Ref of globalThis:globalThis‹0›
//│                 name = Ident of "Predef"
//│               name = Ident of "__EffectSig"
//│             name = Ident of "class"
//│         _2 = Throw of Instantiate:
//│           cls = Select:
//│             qual = Ref of globalThis:globalThis‹0›
//│             name = Ident of "Error"
//│           args = Ls of 
//│             Lit of StrLit of "Unhandled effects"
//│     dflt = N
//│     rest = Return: \
//│     res = Ref of $tmp‹126›
//│     implct = true
//│ = 2

:handler
handle h = Effect with
  fun perform(arg)(k) = arg 
h.perform(2) 
//│ Elab: { handle globalThis:block#3‹152›.h = SynthSel(Ref(globalThis:block#1‹111›),Ident(Effect)) List(HandlerTermDefinition(k‹158›,TermDefinition(Some(class:Effect$Effect$154‹155›),Fun,member:perform‹156›,List(ParamList(‹›,List(Param(‹›,arg‹157›,None)),None)),None,Some(Ref(arg‹157›)),‹result of member:perform‹156››‹159›,‹›))); globalThis:block#3‹152›.h#666(.)perform(2) }
//│ = 2

:stackSafe
:handler
:sjs
fun sum(n) =
  if n == 0 then 0
  else n + sum(n - 1)
sum(1000) 
//│ Elab: { ‹› fun member:sum‹210›(Param(‹›,n‹211›,None), ) = if { let $scrut‹216› = builtin:==‹7›#0(n‹211›#666, 0); scrut is true -> { else 0 }; else builtin:+‹15›#0(n‹211›#666, globalThis:block#4‹209›#666(.)sum‹member:sum‹210››(builtin:-‹5›#0(n‹211›#666, 1))) }; globalThis:block#4‹209›#666(.)sum‹member:sum‹210››(1000) }
//│ JS (unsanitized):
//│ let res;
//│ function handleBlock$0() {
//│   let stackHandler, tmp, depthPositive, retCont, res1;
//│   class StackDelay$ extends globalThis.Predef.__StackDelay.class {
//│     constructor() {
//│       let tmp1;
//│       tmp1 = super();
//│     }
//│     get resume() {
//│       return globalThis.Predef.__mkEffect(stackHandler, (resume) => {
//│         globalThis.Predef.__stackDepth = 0;
//│         return resume();
//│       });
//│     }
//│     toString() { return "StackDelay$"; }
//│   }
//│   stackHandler = new StackDelay$();
//│   function Cont$331$2(pc1) { return new Cont$331$2.class(pc1); }
//│   Cont$331$2.class = class Cont$331$2 extends globalThis.Predef.__Cont.class {
//│     constructor(pc) {
//│       let tmp1;
//│       tmp1 = super(null, null);
//│       this.pc = pc;
//│     }
//│     resume(value$) {
//│       if (this.pc === 1) {
//│         res1 = value$;
//│       }
//│       contLoop: while (true) {
//│         if (this.pc === 11) {
//│           globalThis.Predef.__stackDepth = 0;
//│           globalThis.Predef.__stackHandler = stackHandler;
//│           globalThis.Predef.__stackDepth = globalThis.Predef.__stackDepth + 1;
//│           res1 = globalThis.sum(1000);
//│           if (res1 instanceof globalThis.Predef.__EffectSig.class) {
//│             res1.tail.next = this;
//│             this.pc = 1;
//│             return res1;
//│           }
//│           this.pc = 1;
//│           continue contLoop;
//│         } else if (this.pc === 1) {
//│           tmp = res1;
//│           depthPositive = globalThis.Predef.__stackDepth > 0;
//│           if (depthPositive) {
//│             globalThis.Predef.__stackDepth = globalThis.Predef.__stackDepth - 1;
//│             this.pc = 12;
//│             continue contLoop;
//│           }
//│           this.pc = 12;
//│           continue contLoop;
//│         } else if (this.pc === 12) {
//│           retCont = tmp;
//│           return new globalThis.Predef.__Return.class(retCont);
//│         }
//│         break;
//│       }
//│     }
//│     toString() { return "Cont$331$2(" + this.pc + ")"; }
//│   };
//│   function sum$1(n) {
//│     let scrut, tmp1, tmp2, scrut1, scrut2, scrut3, tmp3, depthPositive1, tmp4, depthPositive2, tmp5, depthPositive3, tmp6, depthPositive4, tmp7, res2, res3;
//│     function Cont$255$0(pc1) { return new Cont$255$0.class(pc1); }
//│     Cont$255$0.class = class Cont$255$0 extends globalThis.Predef.__Cont.class {
//│       constructor(pc) {
//│         let tmp8;
//│         tmp8 = super(null, null);
//│         this.pc = pc;
//│       }
//│       resume(value$) {
//│         if (this.pc === 3) {
//│           res3 = value$;
//│         } else if (this.pc === 2) {
//│           res2 = value$;
//│         }
//│         contLoop: while (true) {
//│           if (this.pc === 4) {
//│             scrut1 = globalThis.Predef.__stackDepth >= 500;
//│             scrut2 = globalThis.Predef.__stackHandler !== undefined;
//│             scrut3 = scrut1 && scrut2;
//│             if (scrut3) {
//│               res2 = globalThis.Predef.__stackHandler.perform(null);
//│               if (res2 instanceof globalThis.Predef.__EffectSig.class) {
//│                 res2.tail.next = this;
//│                 this.pc = 2;
//│                 return res2;
//│               }
//│               this.pc = 2;
//│               continue contLoop;
//│             }
//│             this.pc = 10;
//│             continue contLoop;
//│           } else if (this.pc === 10) {
//│             globalThis.Predef.__stackDepth = globalThis.Predef.__stackDepth + 1;
//│             tmp3 = n == 0;
//│             depthPositive1 = globalThis.Predef.__stackDepth > 0;
//│             if (depthPositive1) {
//│               globalThis.Predef.__stackDepth = globalThis.Predef.__stackDepth - 1;
//│               this.pc = 9;
//│               continue contLoop;
//│             }
//│             this.pc = 9;
//│             continue contLoop;
//│           } else if (this.pc === 9) {
//│             scrut = tmp3;
//│             if (scrut) {
//│               return 0;
//│             } else {
//│               globalThis.Predef.__stackDepth = globalThis.Predef.__stackDepth + 1;
//│               tmp4 = n - 1;
//│               depthPositive2 = globalThis.Predef.__stackDepth > 0;
//│               if (depthPositive2) {
//│                 globalThis.Predef.__stackDepth = globalThis.Predef.__stackDepth - 1;
//│                 this.pc = 8;
//│                 continue contLoop;
//│               }
//│               this.pc = 8;
//│               continue contLoop;
//│             }
//│             this.pc = 5;
//│             continue contLoop;
//│           } else if (this.pc === 5) {
//│             break contLoop;
//│           } else if (this.pc === 8) {
//│             tmp1 = tmp4;
//│             globalThis.Predef.__stackDepth = globalThis.Predef.__stackDepth + 1;
//│             res3 = globalThis.sum(tmp1);
//│             if (res3 instanceof globalThis.Predef.__EffectSig.class) {
//│               res3.tail.next = this;
//│               this.pc = 3;
//│               return res3;
//│             }
//│             this.pc = 3;
//│             continue contLoop;
//│           } else if (this.pc === 3) {
//│             tmp5 = res3;
//│             depthPositive3 = globalThis.Predef.__stackDepth > 0;
//│             if (depthPositive3) {
//│               globalThis.Predef.__stackDepth = globalThis.Predef.__stackDepth - 1;
//│               this.pc = 7;
//│               continue contLoop;
//│             }
//│             this.pc = 7;
//│             continue contLoop;
//│           } else if (this.pc === 7) {
//│             tmp2 = tmp5;
//│             globalThis.Predef.__stackDepth = globalThis.Predef.__stackDepth + 1;
//│             tmp6 = n + tmp2;
//│             depthPositive4 = globalThis.Predef.__stackDepth > 0;
//│             if (depthPositive4) {
//│               globalThis.Predef.__stackDepth = globalThis.Predef.__stackDepth - 1;
//│               this.pc = 6;
//│               continue contLoop;
//│             }
//│             this.pc = 6;
//│             continue contLoop;
//│           } else if (this.pc === 6) {
//│             return tmp6;
//│           } else if (this.pc === 2) {
//│             tmp7 = res2;
//│             this.pc = 10;
//│             continue contLoop;
//│           }
//│           break;
//│         }
//│       }
//│       toString() { return "Cont$255$0(" + this.pc + ")"; }
//│     };
//│     scrut1 = globalThis.Predef.__stackDepth >= 500;
//│     scrut2 = globalThis.Predef.__stackHandler !== undefined;
//│     scrut3 = scrut1 && scrut2;
//│     if (scrut3) {
//│       res2 = globalThis.Predef.__stackHandler.perform(null);
//│       if (res2 instanceof globalThis.Predef.__EffectSig.class) {
//│         res2.tail.next = new Cont$255$0.class(2);
//│         res2.tail = res2.tail.next;
//│         return res2;
//│       }
//│       tmp7 = res2;
//│     }
//│     globalThis.Predef.__stackDepth = globalThis.Predef.__stackDepth + 1;
//│     tmp3 = n == 0;
//│     depthPositive1 = globalThis.Predef.__stackDepth > 0;
//│     if (depthPositive1) {
//│       globalThis.Predef.__stackDepth = globalThis.Predef.__stackDepth - 1;
//│     }
//│     scrut = tmp3;
//│     if (scrut) {
//│       return 0;
//│     } else {
//│       globalThis.Predef.__stackDepth = globalThis.Predef.__stackDepth + 1;
//│       tmp4 = n - 1;
//│       depthPositive2 = globalThis.Predef.__stackDepth > 0;
//│       if (depthPositive2) {
//│         globalThis.Predef.__stackDepth = globalThis.Predef.__stackDepth - 1;
//│       }
//│       tmp1 = tmp4;
//│       globalThis.Predef.__stackDepth = globalThis.Predef.__stackDepth + 1;
//│       res3 = globalThis.sum(tmp1);
//│       if (res3 instanceof globalThis.Predef.__EffectSig.class) {
//│         res3.tail.next = new Cont$255$0.class(3);
//│         res3.tail = res3.tail.next;
//│         return res3;
//│       }
//│       tmp5 = res3;
//│       depthPositive3 = globalThis.Predef.__stackDepth > 0;
//│       if (depthPositive3) {
//│         globalThis.Predef.__stackDepth = globalThis.Predef.__stackDepth - 1;
//│       }
//│       tmp2 = tmp5;
//│       globalThis.Predef.__stackDepth = globalThis.Predef.__stackDepth + 1;
//│       tmp6 = n + tmp2;
//│       depthPositive4 = globalThis.Predef.__stackDepth > 0;
//│       if (depthPositive4) {
//│         globalThis.Predef.__stackDepth = globalThis.Predef.__stackDepth - 1;
//│       }
//│       return tmp6;
//│     }
//│   }
//│   globalThis.Predef.__stackDepth = 0;
//│   globalThis.Predef.__stackHandler = stackHandler;
//│   globalThis.Predef.__stackDepth = globalThis.Predef.__stackDepth + 1;
//│   res1 = globalThis.sum(1000);
//│   if (res1 instanceof globalThis.Predef.__EffectSig.class) {
//│     res1.tail.next = new Cont$331$2(1);
//│     return globalThis.Predef.__handleBlockImpl(res1, stackHandler);
//│   }
//│   tmp = res1;
//│   depthPositive = globalThis.Predef.__stackDepth > 0;
//│   if (depthPositive) {
//│     globalThis.Predef.__stackDepth = globalThis.Predef.__stackDepth - 1;
//│   }
//│   retCont = tmp;
//│   return new globalThis.Predef.__Return.class(retCont);
//│ }
//│ res = handleBlock$0();
//│ if (res instanceof this.Predef.__EffectSig.class) {
//│   throw new this.Error("Unhandled effects");
//│ }
//│ this.Predef.__stackDepth = 0;
//│ this.Predef.__stackHandler = undefined;
//│ res
//│ FAILURE: Unexpected runtime error
//│ ═══[RUNTIME ERROR] TypeError: globalThis.sum is not a function
//│     at handleBlock$0 (REPL7:1:8355)
//│     at REPL7:1:8788
//│     at ContextifyScript.runInThisContext (node:vm:137:12)
//│     at REPLServer.defaultEval (node:repl:597:22)
//│     at bound (node:domain:433:15)
//│     at REPLServer.runBound [as eval] (node:domain:444:12)
//│     at REPLServer.onLine (node:repl:926:10)
//│     at REPLServer.emit (node:events:513:28)
//│     at REPLServer.emit (node:domain:489:12)
//│     at [_onLine] [as _onLine] (node:internal/readline/interface:416:12)

:sjs
if 2 > 0 then 2
//│ Elab: { if { let $scrut‹573› = builtin:>‹19›#0(2, 0); scrut is true -> { else 2 };  } }
//│ JS (unsanitized):
//│ let scrut; scrut = 2 > 0; if (scrut) { 2 } else { throw new this.Error("match error"); }
//│ = 2
