

fun foo = 1
//│ Elab: { fun foo = 1‹›; }‹›
//│ Type: Ctor(lit:UnitLit(true),List())

foo
//│ Elab: { foo#0 }‹›
//│ Type: Flow(‹result of foo›@2)

fun (+) plus: Int
//│ Elab: { fun plus: class:Int#15; }‹›
//│ Type: Ctor(lit:UnitLit(true),List())

fun (+) : Int
//│ Elab: { fun +: class:Int#16; }‹›
//│ Type: Ctor(lit:UnitLit(true),List())

1 + 2
//│ Elab: { +#0(1‹›, 2‹›)‹› }‹›
//│ Type: Flow(‹app-res›@2)


fun f = g
fun g = f
//│ Elab: { fun f = g#0; fun g = f#0; }‹›
//│ Type: Ctor(lit:UnitLit(true),List())


fun (++)(x, y) = 1
//│ Elab: { fun ++(x@2, y@3) = 1‹›; }‹›
//│ Type: Ctor(lit:UnitLit(true),List())

1 ++ 2
//│ Elab: { ++#0(1‹›, 2‹›)‹› }‹›
//│ Type: Flow(‹app-res›@2)


fun (**) pow = 1
//│ Elab: { fun pow = 1‹›; }‹›
//│ Type: Ctor(lit:UnitLit(true),List())

:fixme
1 ** 2
//│ Elab: { pow#0(1‹›, 2‹›)‹› }‹›
//│ Type: Flow(‹app-res›@2)



