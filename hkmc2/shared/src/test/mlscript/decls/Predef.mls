

class Any
class Alloc
class Int
class Num
class Str
class Bool
class Nothing

fun (;): [A] -> ((), A) -> A

fun (+): (Int, Int) -> Int
fun (-): (Int, Int) -> Int
fun (*): (Int, Int) -> Int
fun (/): (Int, Int) -> Num
fun (<): (Int, Int) -> Bool
fun (>): (Int, Int) -> Bool
fun (<=): (Int, Int) -> Bool
fun (>=): (Int, Int) -> Bool
fun (&&): (Bool, Bool) -> Bool
fun (||): (Bool, Bool) -> Bool

fun (+.): (Num, Num) -> Num
fun (-.): (Num, Num) -> Num
fun (*.): (Num, Num) -> Num
fun (/.): (Num, Num) -> Num

// [CY:] poly is not supported here
fun (==): (Any, Any) -> Bool
fun (===): (Any, Any) -> Bool

fun log: (Any) -> ()

fun error: Nothing

fun concat: (Str, Str) -> Str


