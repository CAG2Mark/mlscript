

class Any
class Int
class Num
class Str
class Bool
//│ Elab: { class Any { }‹›; class Int { }‹›; class Num { }‹›; class Str { }‹›; class Bool { }‹›; }‹›
//│ Type: Ctor(lit:UnitLit(true),List())

// TODO: move to a separate file?
class CodeBase[T, S]
class Region[T]
class Ref[T, S]
//│ Elab: { class CodeBase[T@1, S@2] { }‹›; class Region[T@3] { }‹›; class Ref[T@4, S@5] { }‹›; }‹›
//│ Type: Ctor(lit:UnitLit(true),List())


fun (+): (Int, Int) -> Int
fun (-): (Int, Int) -> Int
fun (*): (Int, Int) -> Int
fun (/): (Int, Int) -> Num
fun (<): (Int, Int) -> Bool
fun (>): (Int, Int) -> Bool
//│ Elab: { fun +: (class:Int#0, class:Int#1)‹› -> class:Int#2‹›; fun -: (class:Int#3, class:Int#4)‹› -> class:Int#5‹›; fun *: (class:Int#6, class:Int#7)‹› -> class:Int#8‹›; fun /: (class:Int#9, class:Int#10)‹› -> class:Num#0‹›; fun <: (class:Int#11, class:Int#12)‹› -> class:Bool#0‹›; fun >: (class:Int#13, class:Int#14)‹› -> class:Bool#1‹›; }‹›
//│ Type: Ctor(lit:UnitLit(true),List())

fun log: (Any) -> ()
//│ Elab: { fun log: (class:Any#0)‹› -> undefined‹›‹›; }‹›
//│ Type: Ctor(lit:UnitLit(true),List())


