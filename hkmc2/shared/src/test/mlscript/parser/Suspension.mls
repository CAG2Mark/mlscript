:parseOnly


module Option with ...
//│ Parsed:
//│ 	TypeDef(Mod,None,Ident(Option),None,Some(Block(List(UnitLit(true)))))

module Option with ...
val a = 1
//│ Parsed:
//│ 	TypeDef(Mod,None,Ident(Option),None,Some(Block(List(TermDef(ImmutVal,None,Some(Ident(a)),Some(IntLit(1)))))))

module Option with ...
// 
val a = 1
// 
//│ Parsed:
//│ 	TypeDef(Mod,None,Ident(Option),None,Some(Block(List(TermDef(ImmutVal,None,Some(Ident(a)),Some(IntLit(1)))))))

:pt
module A with
  
  module B with ...
  
  val a = 1
  
  val b = 2
//│ Parsed tree:
//│ TypeDef:
//│   k = Mod
//│   symName = N
//│   head = Ident of "A"
//│   extension = N
//│   body = S of Block of Ls of 
//│     TypeDef:
//│       k = Mod
//│       symName = N
//│       head = Ident of "B"
//│       extension = N
//│       body = S of Block of Ls of 
//│         TermDef:
//│           k = ImmutVal
//│           symName = N
//│           alphaName = S of Ident of "a"
//│           rhs = S of IntLit of 1
//│         TermDef:
//│           k = ImmutVal
//│           symName = N
//│           alphaName = S of Ident of "b"
//│           rhs = S of IntLit of 2



