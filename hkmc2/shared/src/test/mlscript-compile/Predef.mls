
declare val String
declare val console

module Predef with ...

fun id(x) = x

fun not(x) = x is false

fun (|>) pipe(x, f) = f(x)

fun (|>.) call(receiver, f)(arg) = f.call(receiver, arg)

fun print(x) =
  console.log(String(x))

fun tupleSlice(xs, i, j) =
  globalThis.Array.prototype.slice.call(xs, i, xs.length - j)

fun tupleGet(xs, i) =
  globalThis.Array.prototype.at.call(xs, i)

// Private definitions for algebraic effects

class __Cont(resume, resumed, next, __isCont)

fun __resume(cont, tail)(value) =
  while cont then
    value = cont.resume(value)
    if value and value.__isCont then
      set value.tail = tail
      return value
    else
      cont = cont.next
  else
    value

fun __debugCont(cont) =
  let msg = "Chain: "
  let first = true
  while cont then
    if first then
      set first = false
    else
      set msg = msg + " -> "
    set msg = msg + "(" + cont.constructor.name
    if cont.tail then
      set msg = msg + " with tail " + cont.tail.constructor.name
    else ()
    set msg = msg + ")"
    set cont = cont.next
  else
    print(msg)
