
module Predef with ...

fun id(x) = x

fun not(x) = x is false

fun (|>) pipe(x, f) = f(x)

fun (.) apply(receiver, f)(...args) = f(receiver, ...args)

fun (|>.) call(receiver, f)(...args) = f.call(receiver, ...args)

fun print(x) =
  console.log(String(x))

fun tupleSlice(xs, i, j) =
  globalThis.Array.prototype.slice.call(xs, i, xs.length - j)

fun tupleGet(xs, i) =
  globalThis.Array.prototype.at.call(xs, i)

fun checkArgs(functionName, expected, isUB, got) =
  if got < expected || isUB && got > expected then
    let name = if functionName.length > 0 then " '" + functionName + "'" else ""
    throw globalThis.Error("Function" + name + " expected " + expected + " arguments but got " + got)
    // TODO
    // throw globalThis.Error("Function" + name + " expected "
    //   + expected
    //   + (if isUB then "" else " at least")
    //   + " arguments but got " + got)
  else ()

class Test with
  val y = 1

