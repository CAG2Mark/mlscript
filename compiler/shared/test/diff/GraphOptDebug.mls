:NewParser
:ParseOnly


:GraphInterp
:GraphOpt
class True
class False
class S(s)
class O
fun odd(x) =
  if x is
    O then False
    S(s) then 
      even(s)
fun even(x) =
  if x is
    O then True
    S(s) then
      odd(s)
fun mk(n) = if n > 0 then S(mk(n - 1)) else O
fun foo() = odd(mk(10))
foo()
//│ |#class| |True|↵|#class| |False|↵|#class| |S|(|s|)|↵|#class| |O|↵|#fun| |odd|(|x|)| |#=|→|#if| |x| |is|→|O| |#then| |False|↵|S|(|s|)| |#then| |→|even|(|s|)|←|←|←|↵|#fun| |even|(|x|)| |#=|→|#if| |x| |is|→|O| |#then| |True|↵|S|(|s|)| |#then|→|odd|(|s|)|←|←|←|↵|#fun| |mk|(|n|)| |#=| |#if| |n| |>| |0| |#then| |S|(|mk|(|n| |-| |1|)|)| |#else| |O|↵|#fun| |foo|(||)| |#=| |odd|(|mk|(|10|)|)|↵|foo|(||)|
//│ Parsed: {class True {}; class False {}; class S(s,) {}; class O {}; fun odd = (x,) => {if x is ‹(O) then False; (S(s,)) then {even(s,)}›}; fun even = (x,) => {if x is ‹(O) then True; (S(s,)) then {odd(s,)}›}; fun mk = (n,) => if (>(n,)(0,)) then S(mk(-(n,)(1,),),) else O; fun foo = () => odd(mk(10,),); foo()}
//│ Parsed:
//│ TypingUnit(NuTypeDef(class, True, (), Tup(), (), None, None, TypingUnit()), NuTypeDef(class, False, (), Tup(), (), None, None, TypingUnit()), NuTypeDef(class, S, (), Tup(_: Var(s)), (), None, None, TypingUnit()), NuTypeDef(class, O, (), Tup(), (), None, None, TypingUnit()), NuFunDef(None, odd, None, [], Lam(Tup(_: Var(x)), Blk(...))), NuFunDef(None, even, None, [], Lam(Tup(_: Var(x)), Blk(...))), NuFunDef(None, mk, None, [], Lam(Tup(_: Var(n)), If(IfThen(App(App(Var(>), Tup(_: Var(n))), Tup(_: IntLit(0))), App(Var(S), Tup(_: App(Var(mk), Tup(_: App(App(Var(-), Tup(_: Var(n))), Tup(_: IntLit(1))))))), Some(Var(O))))), NuFunDef(None, foo, None, [], Lam(Tup(), App(Var(odd), Tup(_: App(Var(mk), Tup(_: IntLit(10))))))), App(Var(foo), Tup()))
//│ 
//│ GraphOpt:
//│ GOProgram({ClassInfo(0, True, []),ClassInfo(1, False, []),ClassInfo(2, S, [s]),ClassInfo(3, O, [])}, {
//│ Def(0, odd, [x%0], [{}],
//│ S: None,
//│ I: [],
//│ R: [None],
//│ Rec: None,
//│ 1, 
//│ case x%0 of
//│   O => let x%1 = False()
//│     in jump j%0(x%1)
//│   S => let x%2 = x%0.s
//│     in let* (x%3) = even(x%2)
//│       in jump j%0(x%3)
//│ )
//│ Def(1, @join j%0, [x%4], [{}],
//│ S: None,
//│ I: [],
//│ R: [None],
//│ Rec: None,
//│ 1, 
//│ x%4
//│ )
//│ Def(2, even, [x%5], [{}],
//│ S: None,
//│ I: [],
//│ R: [None],
//│ Rec: None,
//│ 1, 
//│ case x%5 of
//│   O => let x%6 = True()
//│     in jump j%1(x%6)
//│   S => let x%7 = x%5.s
//│     in let* (x%8) = odd(x%7)
//│       in jump j%1(x%8)
//│ )
//│ Def(3, @join j%1, [x%9], [{}],
//│ S: None,
//│ I: [],
//│ R: [None],
//│ Rec: None,
//│ 1, 
//│ x%9
//│ )
//│ Def(4, mk, [n%0], [{}],
//│ S: None,
//│ I: [],
//│ R: [None],
//│ Rec: None,
//│ 1, 
//│ let x%10 = >(n%0,0)
//│   in if x%10
//│     true => let x%11 = -(n%0,1)
//│       in let* (x%12) = mk(x%11)
//│         in let x%13 = S(x%12)
//│           in jump j%2(x%13)
//│     false => let x%14 = O()
//│       in jump j%2(x%14)
//│ )
//│ Def(5, @join j%2, [x%15], [{}],
//│ S: None,
//│ I: [],
//│ R: [None],
//│ Rec: None,
//│ 1, 
//│ x%15
//│ )
//│ Def(6, foo, [], [{}],
//│ S: None,
//│ I: [],
//│ R: [None],
//│ Rec: None,
//│ 1, 
//│ let* (x%16) = mk(10)
//│   in let* (x%17) = odd(x%16)
//│     in x%17
//│ )
//│ },
//│ let* (x%18) = foo()
//│   in x%18)
//│ 
//│ Promoted ------------------------------------
//│ GOProgram({ClassInfo(0, True, []),ClassInfo(1, False, []),ClassInfo(2, S, [s]),ClassInfo(3, O, [])}, {
//│ Def(0, odd, [x%0], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [[Some(IMix(ICtor(O),ICtor(S)))]],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(2),
//│ 1, 
//│ case x%0 of
//│   O => let x%1 = False()
//│     in x%1
//│   S => let x%2 = x%0.s
//│     in let* (x%3) = even(x%2)
//│       in x%3
//│ )
//│ Def(2, even, [x%5], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(2),
//│ 1, 
//│ case x%5 of
//│   O => let x%6 = True()
//│     in x%6
//│   S => let x%7 = x%5.s
//│     in let* (x%8) = odd(x%7)
//│       in x%8
//│ )
//│ Def(4, mk, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(O),ICtor(S)))],
//│ Rec: Some(1),
//│ 1, 
//│ let x%10 = >(n%0,0)
//│   in if x%10
//│     true => let x%11 = -(n%0,1)
//│       in let* (x%12) = mk(x%11)
//│         in let x%13 = S(x%12)
//│           in x%13
//│     false => let x%14 = O()
//│       in x%14
//│ )
//│ Def(6, foo, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%16) = mk(10)
//│   in let* (x%17) = odd(x%16)
//│     in x%17
//│ )
//│ },
//│ let* (x%18) = foo()
//│   in x%18)
//│ 
//│ Interpreted ------------------------------
//│ False()
//│ 
//│ 
//│ Optimized ------------------------------
//│ GOProgram({ClassInfo(0, True, []),ClassInfo(1, False, []),ClassInfo(2, S, [s]),ClassInfo(3, O, [])}, {
//│ Def(0, odd, [x%0], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(3),
//│ 1, 
//│ case x%0 of
//│   O => let x%1 = False()
//│     in x%1
//│   S => let x%2 = x%0.s
//│     in let* (x%3) = even(x%2)
//│       in x%3
//│ )
//│ Def(2, even, [x%5], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(3),
//│ 1, 
//│ case x%5 of
//│   O => let x%6 = True()
//│     in x%6
//│   S => let x%7 = x%5.s
//│     in let* (x%8) = odd(x%7)
//│       in x%8
//│ )
//│ Def(6, foo, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%19,x%20) = mk$P%0(10)
//│   in if x%20
//│     true => let* (x%21) = mk$D%0(x%19)
//│       in jump foo$M%0(x%21)
//│     false => let x%14 = O()
//│       in jump foo$M%0(x%14)
//│ )
//│ Def(7, mk$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%10 = >(n%0,0)
//│   in n%0,x%10
//│ )
//│ Def(8, mk$D%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(S)))],
//│ Rec: Some(1),
//│ 1, 
//│ let x%11 = -(n%0,1)
//│   in let* (x%23,x%24) = mk$P%0(x%11)
//│     in if x%24
//│       true => let* (x%25) = mk$D%0(x%23)
//│         in let x%13 = S(x%25)
//│           in x%13
//│       false => let x%14 = O()
//│         in let x%13 = S(x%14)
//│           in x%13
//│ )
//│ Def(10, @join foo$M%0, [x%16], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [[Some(ICtor(O))],[Some(IMix(ICtor(S)))]],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%17) = odd(x%16)
//│   in x%17
//│ )
//│ },
//│ let* (x%18) = foo()
//│   in x%18)
//│ 
//│ Optimized ------------------------------
//│ GOProgram({ClassInfo(0, True, []),ClassInfo(1, False, []),ClassInfo(2, S, [s]),ClassInfo(3, O, [])}, {
//│ Def(0, odd, [x%0], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [[Some(ICtor(O))]],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(6),
//│ 1, 
//│ case x%0 of
//│   O => let x%1 = False()
//│     in x%1
//│   S => let x%2 = x%0.s
//│     in let* (x%3) = even(x%2)
//│       in x%3
//│ )
//│ Def(2, even, [x%5], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(6),
//│ 1, 
//│ case x%5 of
//│   O => let x%6 = True()
//│     in x%6
//│   S => let x%7 = x%5.s
//│     in let* (x%8) = odd(x%7)
//│       in x%8
//│ )
//│ Def(6, foo, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%19,x%20) = mk$P%0(10)
//│   in if x%20
//│     true => let* (x%35,x%36) = mk$D%0$P%0(x%19)
//│       in if x%36
//│         true => let* (x%37) = mk$D%0$D%0(x%35)
//│           in jump foo$M%0(x%37)
//│         false => let* (x%38) = mk$D%0$D%1()
//│           in jump foo$M%0(x%38)
//│     false => let x%14 = O()
//│       in jump foo$M%0$C%0(x%14)
//│ )
//│ Def(7, mk$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%10 = >(n%0,0)
//│   in n%0,x%10
//│ )
//│ Def(10, @join foo$M%0, [x%16], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [[Some(IMix(ICtor(S)))],[Some(ICtor(S))]],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%17) = odd(x%16)
//│   in x%17
//│ )
//│ Def(13, mk$D%0$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%11 = -(n%0,1)
//│   in let* (x%23,x%24) = mk$P%0(x%11)
//│     in x%23,x%24
//│ )
//│ Def(14, mk$D%0$D%0, [x%23], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(S)))],
//│ Rec: Some(1),
//│ 1, 
//│ let* (x%31,x%32) = mk$D%0$P%0(x%23)
//│   in if x%32
//│     true => let* (x%33) = mk$D%0$D%0(x%31)
//│       in let x%13 = S(x%33)
//│         in x%13
//│     false => let* (x%34) = mk$D%0$D%1()
//│       in let x%13 = S(x%34)
//│         in x%13
//│ )
//│ Def(15, mk$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let x%14 = O()
//│   in let x%13 = S(x%14)
//│     in x%13
//│ )
//│ Def(16, @join foo$M%0$C%0, [x%16], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: Some([Some(ICtor(O))]),
//│ I: [[Some(ICtor(O))]],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%17) = odd(x%16)
//│   in x%17
//│ )
//│ },
//│ let* (x%18) = foo()
//│   in x%18)
//│ 
//│ Optimized ------------------------------
//│ GOProgram({ClassInfo(0, True, []),ClassInfo(1, False, []),ClassInfo(2, S, [s]),ClassInfo(3, O, [])}, {
//│ Def(2, even, [x%5], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(2),
//│ 1, 
//│ case x%5 of
//│   O => let x%6 = True()
//│     in x%6
//│   S => let x%7 = x%5.s
//│     in case x%7 of
//│       S => let x%68 = x%7.s
//│         in let* (x%58) = odd$D%1$S%0(x%68)
//│           in x%58
//│       O => let x%1 = False()
//│         in x%1
//│ )
//│ Def(6, foo, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%19,x%20) = mk$P%0(10)
//│   in if x%20
//│     true => let* (x%35,x%36) = mk$D%0$P%0(x%19)
//│       in if x%36
//│         true => let* (x%53,x%54) = mk$D%0$D%0$P%0(x%35)
//│           in if x%54
//│             true => let* (x%55) = mk$D%0$D%0$D%0(x%53)
//│               in jump foo$M%0(x%55)
//│             false => let* (x%56) = mk$D%0$D%0$D%1()
//│               in jump foo$M%0(x%56)
//│         false => let* (x%38) = mk$D%0$D%1()
//│           in jump foo$M%0(x%38)
//│     false => let x%1 = False()
//│       in x%1
//│ )
//│ Def(7, mk$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%10 = >(n%0,0)
//│   in n%0,x%10
//│ )
//│ Def(10, @join foo$M%0, [x%16], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [[Some(IMix(ICtor(S)))],[Some(ICtor(S))]],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ case x%16 of
//│   S => let x%67 = x%16.s
//│     in let* (x%47) = odd$D%1$S%0(x%67)
//│       in x%47
//│   O => let x%1 = False()
//│     in x%1
//│ )
//│ Def(13, mk$D%0$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%11 = -(n%0,1)
//│   in let* (x%23,x%24) = mk$P%0(x%11)
//│     in x%23,x%24
//│ )
//│ Def(15, mk$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let x%14 = O()
//│   in let x%13 = S(x%14)
//│     in x%13
//│ )
//│ Def(24, mk$D%0$D%0$P%0, [x%23], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%31,x%32) = mk$D%0$P%0(x%23)
//│   in x%31,x%32
//│ )
//│ Def(25, mk$D%0$D%0$D%0, [x%31], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(S)))],
//│ Rec: Some(3),
//│ 1, 
//│ let* (x%60,x%61) = mk$D%0$D%0$P%0(x%31)
//│   in if x%61
//│     true => let* (x%62) = mk$D%0$D%0$D%0(x%60)
//│       in let x%13 = S(x%62)
//│         in x%13
//│     false => let* (x%63) = mk$D%0$D%0$D%1()
//│       in let x%13 = S(x%63)
//│         in x%13
//│ )
//│ Def(26, mk$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%34) = mk$D%0$D%1()
//│   in let x%13 = S(x%34)
//│     in x%13
//│ )
//│ Def(36, odd$D%1$S%0, [x%0_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(2),
//│ 1, 
//│ let* (x%3) = even(x%0_s)
//│   in x%3
//│ )
//│ },
//│ let* (x%18) = foo()
//│   in x%18)
//│ 
//│ Optimized ------------------------------
//│ GOProgram({ClassInfo(0, True, []),ClassInfo(1, False, []),ClassInfo(2, S, [s]),ClassInfo(3, O, [])}, {
//│ Def(2, even, [x%5], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(3),
//│ 1, 
//│ case x%5 of
//│   O => let x%6 = True()
//│     in x%6
//│   S => let x%7 = x%5.s
//│     in case x%7 of
//│       S => let x%68 = x%7.s
//│         in let* (x%58) = odd$D%1$S%0(x%68)
//│           in x%58
//│       O => let x%1 = False()
//│         in x%1
//│ )
//│ Def(6, foo, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%19,x%20) = mk$P%0(10)
//│   in if x%20
//│     true => let* (x%35,x%36) = mk$D%0$P%0(x%19)
//│       in if x%36
//│         true => let* (x%53,x%54) = mk$D%0$D%0$P%0(x%35)
//│           in if x%54
//│             true => let* (x%71,x%72) = mk$D%0$D%0$D%0$P%0(x%53)
//│               in if x%72
//│                 true => let* (x%73) = mk$D%0$D%0$D%0$D%0(x%71)
//│                   in jump foo$M%0(x%73)
//│                 false => let* (x%74) = mk$D%0$D%0$D%0$D%1()
//│                   in jump foo$M%0(x%74)
//│             false => let* (x%56) = mk$D%0$D%0$D%1()
//│               in let x%83 = x%56.s
//│                 in jump foo$M%0$D%0$S%0(x%83)
//│         false => let* (x%38) = mk$D%0$D%1()
//│           in let x%84 = x%38.s
//│             in jump foo$M%0$D%0$S%0(x%84)
//│     false => let x%1 = False()
//│       in x%1
//│ )
//│ Def(7, mk$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%10 = >(n%0,0)
//│   in n%0,x%10
//│ )
//│ Def(10, @join foo$M%0, [x%16], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [[Some(IMix(ICtor(S)))],[Some(ICtor(S))]],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ case x%16 of
//│   S => let x%67 = x%16.s
//│     in let* (x%47) = odd$D%1$S%0(x%67)
//│       in x%47
//│   O => let x%1 = False()
//│     in x%1
//│ )
//│ Def(13, mk$D%0$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%11 = -(n%0,1)
//│   in let* (x%23,x%24) = mk$P%0(x%11)
//│     in x%23,x%24
//│ )
//│ Def(15, mk$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let x%14 = O()
//│   in let x%13 = S(x%14)
//│     in x%13
//│ )
//│ Def(24, mk$D%0$D%0$P%0, [x%23], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%31,x%32) = mk$D%0$P%0(x%23)
//│   in x%31,x%32
//│ )
//│ Def(26, mk$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%34) = mk$D%0$D%1()
//│   in let x%13 = S(x%34)
//│     in x%13
//│ )
//│ Def(36, odd$D%1$S%0, [x%0_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(3),
//│ 1, 
//│ let* (x%3) = even(x%0_s)
//│   in x%3
//│ )
//│ Def(40, mk$D%0$D%0$D%0$P%0, [x%31], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%60,x%61) = mk$D%0$D%0$P%0(x%31)
//│   in x%60,x%61
//│ )
//│ Def(41, mk$D%0$D%0$D%0$D%0, [x%60], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(S)))],
//│ Rec: Some(4),
//│ 1, 
//│ let* (x%79,x%80) = mk$D%0$D%0$D%0$P%0(x%60)
//│   in if x%80
//│     true => let* (x%81) = mk$D%0$D%0$D%0$D%0(x%79)
//│       in let x%13 = S(x%81)
//│         in x%13
//│     false => let* (x%82) = mk$D%0$D%0$D%0$D%1()
//│       in let x%13 = S(x%82)
//│         in x%13
//│ )
//│ Def(42, mk$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%63) = mk$D%0$D%0$D%1()
//│   in let x%13 = S(x%63)
//│     in x%13
//│ )
//│ Def(46, foo$M%0$D%0$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ },
//│ let* (x%18) = foo()
//│   in x%18)
//│ 
//│ Optimized ------------------------------
//│ GOProgram({ClassInfo(0, True, []),ClassInfo(1, False, []),ClassInfo(2, S, [s]),ClassInfo(3, O, [])}, {
//│ Def(2, even, [x%5], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(4),
//│ 1, 
//│ case x%5 of
//│   O => let x%6 = True()
//│     in x%6
//│   S => let x%7 = x%5.s
//│     in case x%7 of
//│       S => let x%68 = x%7.s
//│         in let* (x%58) = odd$D%1$S%0(x%68)
//│           in x%58
//│       O => let x%1 = False()
//│         in x%1
//│ )
//│ Def(6, foo, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%19,x%20) = mk$P%0(10)
//│   in if x%20
//│     true => let* (x%35,x%36) = mk$D%0$P%0(x%19)
//│       in if x%36
//│         true => let* (x%53,x%54) = mk$D%0$D%0$P%0(x%35)
//│           in if x%54
//│             true => let* (x%71,x%72) = mk$D%0$D%0$D%0$P%0(x%53)
//│               in if x%72
//│                 true => let* (x%86,x%87) = mk$D%0$D%0$D%0$D%0$P%0(x%71)
//│                   in if x%87
//│                     true => let* (x%88) = mk$D%0$D%0$D%0$D%0$D%0(x%86)
//│                       in jump foo$M%0(x%88)
//│                     false => let* (x%89) = mk$D%0$D%0$D%0$D%0$D%1()
//│                       in jump foo$M%0(x%89)
//│                 false => let* (x%74) = mk$D%0$D%0$D%0$D%1()
//│                   in let x%98 = x%74.s
//│                     in jump foo$M%0$D%2$S%0(x%98)
//│             false => let* (x%56) = mk$D%0$D%0$D%1()
//│               in let x%83 = x%56.s
//│                 in jump foo$M%0$D%0$S%0(x%83)
//│         false => let* (x%38) = mk$D%0$D%1()
//│           in let x%84 = x%38.s
//│             in jump foo$M%0$D%0$S%0(x%84)
//│     false => let x%1 = False()
//│       in x%1
//│ )
//│ Def(7, mk$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%10 = >(n%0,0)
//│   in n%0,x%10
//│ )
//│ Def(10, @join foo$M%0, [x%16], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [[Some(ICtor(S))],[Some(IMix(ICtor(S)))]],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ case x%16 of
//│   S => let x%67 = x%16.s
//│     in let* (x%47) = odd$D%1$S%0(x%67)
//│       in x%47
//│   O => let x%1 = False()
//│     in x%1
//│ )
//│ Def(13, mk$D%0$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%11 = -(n%0,1)
//│   in let* (x%23,x%24) = mk$P%0(x%11)
//│     in x%23,x%24
//│ )
//│ Def(15, mk$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let x%14 = O()
//│   in let x%13 = S(x%14)
//│     in x%13
//│ )
//│ Def(24, mk$D%0$D%0$P%0, [x%23], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%31,x%32) = mk$D%0$P%0(x%23)
//│   in x%31,x%32
//│ )
//│ Def(26, mk$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%34) = mk$D%0$D%1()
//│   in let x%13 = S(x%34)
//│     in x%13
//│ )
//│ Def(36, odd$D%1$S%0, [x%0_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(4),
//│ 1, 
//│ let* (x%3) = even(x%0_s)
//│   in x%3
//│ )
//│ Def(40, mk$D%0$D%0$D%0$P%0, [x%31], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%60,x%61) = mk$D%0$D%0$P%0(x%31)
//│   in x%60,x%61
//│ )
//│ Def(42, mk$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%63) = mk$D%0$D%0$D%1()
//│   in let x%13 = S(x%63)
//│     in x%13
//│ )
//│ Def(46, foo$M%0$D%0$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(50, mk$D%0$D%0$D%0$D%0$P%0, [x%60], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%79,x%80) = mk$D%0$D%0$D%0$P%0(x%60)
//│   in x%79,x%80
//│ )
//│ Def(51, mk$D%0$D%0$D%0$D%0$D%0, [x%79], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(S)))],
//│ Rec: Some(5),
//│ 1, 
//│ let* (x%94,x%95) = mk$D%0$D%0$D%0$D%0$P%0(x%79)
//│   in if x%95
//│     true => let* (x%96) = mk$D%0$D%0$D%0$D%0$D%0(x%94)
//│       in let x%13 = S(x%96)
//│         in x%13
//│     false => let* (x%97) = mk$D%0$D%0$D%0$D%0$D%1()
//│       in let x%13 = S(x%97)
//│         in x%13
//│ )
//│ Def(52, mk$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%82) = mk$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%82)
//│     in x%13
//│ )
//│ Def(56, foo$M%0$D%2$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ },
//│ let* (x%18) = foo()
//│   in x%18)
//│ 
//│ Optimized ------------------------------
//│ GOProgram({ClassInfo(0, True, []),ClassInfo(1, False, []),ClassInfo(2, S, [s]),ClassInfo(3, O, [])}, {
//│ Def(2, even, [x%5], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(14),
//│ 1, 
//│ case x%5 of
//│   O => let x%6 = True()
//│     in x%6
//│   S => let x%7 = x%5.s
//│     in case x%7 of
//│       S => let x%68 = x%7.s
//│         in let* (x%58) = odd$D%1$S%0(x%68)
//│           in x%58
//│       O => let x%1 = False()
//│         in x%1
//│ )
//│ Def(6, foo, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%19,x%20) = mk$P%0(10)
//│   in if x%20
//│     true => let* (x%35,x%36) = mk$D%0$P%0(x%19)
//│       in if x%36
//│         true => let* (x%53,x%54) = mk$D%0$D%0$P%0(x%35)
//│           in if x%54
//│             true => let* (x%71,x%72) = mk$D%0$D%0$D%0$P%0(x%53)
//│               in if x%72
//│                 true => let* (x%86,x%87) = mk$D%0$D%0$D%0$D%0$P%0(x%71)
//│                   in if x%87
//│                     true => let* (x%104,x%105) = mk$D%0$D%0$D%0$D%0$D%0$P%0(x%86)
//│                       in if x%105
//│                         true => let* (x%106) = mk$D%0$D%0$D%0$D%0$D%0$D%0(x%104)
//│                           in jump foo$M%0(x%106)
//│                         false => let* (x%107) = mk$D%0$D%0$D%0$D%0$D%0$D%1()
//│                           in jump foo$M%0(x%107)
//│                     false => let* (x%89) = mk$D%0$D%0$D%0$D%0$D%1()
//│                       in let x%112 = x%89.s
//│                         in jump foo$M%0$D%4$S%0(x%112)
//│                 false => let* (x%74) = mk$D%0$D%0$D%0$D%1()
//│                   in let x%98 = x%74.s
//│                     in jump foo$M%0$D%2$S%0(x%98)
//│             false => let* (x%56) = mk$D%0$D%0$D%1()
//│               in let x%83 = x%56.s
//│                 in jump foo$M%0$D%0$S%0(x%83)
//│         false => let* (x%38) = mk$D%0$D%1()
//│           in let x%84 = x%38.s
//│             in jump foo$M%0$D%0$S%0(x%84)
//│     false => let x%1 = False()
//│       in x%1
//│ )
//│ Def(7, mk$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%10 = >(n%0,0)
//│   in n%0,x%10
//│ )
//│ Def(10, @join foo$M%0, [x%16], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [[Some(IMix(ICtor(S)))],[Some(ICtor(S))]],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ case x%16 of
//│   S => let x%67 = x%16.s
//│     in let* (x%47) = odd$D%1$S%0(x%67)
//│       in x%47
//│   O => let x%1 = False()
//│     in x%1
//│ )
//│ Def(13, mk$D%0$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%11 = -(n%0,1)
//│   in let* (x%23,x%24) = mk$P%0(x%11)
//│     in x%23,x%24
//│ )
//│ Def(15, mk$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let x%14 = O()
//│   in let x%13 = S(x%14)
//│     in x%13
//│ )
//│ Def(24, mk$D%0$D%0$P%0, [x%23], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%31,x%32) = mk$D%0$P%0(x%23)
//│   in x%31,x%32
//│ )
//│ Def(26, mk$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%34) = mk$D%0$D%1()
//│   in let x%13 = S(x%34)
//│     in x%13
//│ )
//│ Def(36, odd$D%1$S%0, [x%0_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(14),
//│ 1, 
//│ let* (x%3) = even(x%0_s)
//│   in x%3
//│ )
//│ Def(40, mk$D%0$D%0$D%0$P%0, [x%31], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%60,x%61) = mk$D%0$D%0$P%0(x%31)
//│   in x%60,x%61
//│ )
//│ Def(42, mk$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%63) = mk$D%0$D%0$D%1()
//│   in let x%13 = S(x%63)
//│     in x%13
//│ )
//│ Def(46, foo$M%0$D%0$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(50, mk$D%0$D%0$D%0$D%0$P%0, [x%60], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%79,x%80) = mk$D%0$D%0$D%0$P%0(x%60)
//│   in x%79,x%80
//│ )
//│ Def(52, mk$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%82) = mk$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%82)
//│     in x%13
//│ )
//│ Def(56, foo$M%0$D%2$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(60, mk$D%0$D%0$D%0$D%0$D%0$P%0, [x%79], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%94,x%95) = mk$D%0$D%0$D%0$D%0$P%0(x%79)
//│   in x%94,x%95
//│ )
//│ Def(61, mk$D%0$D%0$D%0$D%0$D%0$D%0, [x%94], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(S)))],
//│ Rec: Some(2),
//│ 1, 
//│ let* (x%100,x%101) = mk$D%0$D%0$D%0$D%0$D%0$P%0(x%94)
//│   in if x%101
//│     true => let* (x%102) = mk$D%0$D%0$D%0$D%0$D%0$D%0(x%100)
//│       in let x%13 = S(x%102)
//│         in x%13
//│     false => let* (x%103) = mk$D%0$D%0$D%0$D%0$D%0$D%1()
//│       in let x%13 = S(x%103)
//│         in x%13
//│ )
//│ Def(62, mk$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%97) = mk$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%97)
//│     in x%13
//│ )
//│ Def(66, foo$M%0$D%4$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ },
//│ let* (x%18) = foo()
//│   in x%18)
//│ 
//│ Optimized ------------------------------
//│ GOProgram({ClassInfo(0, True, []),ClassInfo(1, False, []),ClassInfo(2, S, [s]),ClassInfo(3, O, [])}, {
//│ Def(2, even, [x%5], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(6),
//│ 1, 
//│ case x%5 of
//│   O => let x%6 = True()
//│     in x%6
//│   S => let x%7 = x%5.s
//│     in case x%7 of
//│       S => let x%68 = x%7.s
//│         in let* (x%58) = odd$D%1$S%0(x%68)
//│           in x%58
//│       O => let x%1 = False()
//│         in x%1
//│ )
//│ Def(6, foo, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%19,x%20) = mk$P%0(10)
//│   in if x%20
//│     true => let* (x%35,x%36) = mk$D%0$P%0(x%19)
//│       in if x%36
//│         true => let* (x%53,x%54) = mk$D%0$D%0$P%0(x%35)
//│           in if x%54
//│             true => let* (x%71,x%72) = mk$D%0$D%0$D%0$P%0(x%53)
//│               in if x%72
//│                 true => let* (x%86,x%87) = mk$D%0$D%0$D%0$D%0$P%0(x%71)
//│                   in if x%87
//│                     true => let* (x%104,x%105) = mk$D%0$D%0$D%0$D%0$D%0$P%0(x%86)
//│                       in if x%105
//│                         true => let* (x%118,x%119) = mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%104)
//│                           in if x%119
//│                             true => let* (x%120) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0(x%118)
//│                               in jump foo$M%0(x%120)
//│                             false => let* (x%121) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                               in jump foo$M%0(x%121)
//│                         false => let* (x%107) = mk$D%0$D%0$D%0$D%0$D%0$D%1()
//│                           in let x%126 = x%107.s
//│                             in jump foo$M%0$D%6$S%0(x%126)
//│                     false => let* (x%89) = mk$D%0$D%0$D%0$D%0$D%1()
//│                       in let x%112 = x%89.s
//│                         in jump foo$M%0$D%4$S%0(x%112)
//│                 false => let* (x%74) = mk$D%0$D%0$D%0$D%1()
//│                   in let x%98 = x%74.s
//│                     in jump foo$M%0$D%2$S%0(x%98)
//│             false => let* (x%56) = mk$D%0$D%0$D%1()
//│               in let x%83 = x%56.s
//│                 in jump foo$M%0$D%0$S%0(x%83)
//│         false => let* (x%38) = mk$D%0$D%1()
//│           in let x%84 = x%38.s
//│             in jump foo$M%0$D%0$S%0(x%84)
//│     false => let x%1 = False()
//│       in x%1
//│ )
//│ Def(7, mk$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%10 = >(n%0,0)
//│   in n%0,x%10
//│ )
//│ Def(10, @join foo$M%0, [x%16], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [[Some(ICtor(S))],[Some(IMix(ICtor(S)))]],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ case x%16 of
//│   S => let x%67 = x%16.s
//│     in let* (x%47) = odd$D%1$S%0(x%67)
//│       in x%47
//│   O => let x%1 = False()
//│     in x%1
//│ )
//│ Def(13, mk$D%0$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%11 = -(n%0,1)
//│   in let* (x%23,x%24) = mk$P%0(x%11)
//│     in x%23,x%24
//│ )
//│ Def(15, mk$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let x%14 = O()
//│   in let x%13 = S(x%14)
//│     in x%13
//│ )
//│ Def(24, mk$D%0$D%0$P%0, [x%23], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%31,x%32) = mk$D%0$P%0(x%23)
//│   in x%31,x%32
//│ )
//│ Def(26, mk$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%34) = mk$D%0$D%1()
//│   in let x%13 = S(x%34)
//│     in x%13
//│ )
//│ Def(36, odd$D%1$S%0, [x%0_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(6),
//│ 1, 
//│ let* (x%3) = even(x%0_s)
//│   in x%3
//│ )
//│ Def(40, mk$D%0$D%0$D%0$P%0, [x%31], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%60,x%61) = mk$D%0$D%0$P%0(x%31)
//│   in x%60,x%61
//│ )
//│ Def(42, mk$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%63) = mk$D%0$D%0$D%1()
//│   in let x%13 = S(x%63)
//│     in x%13
//│ )
//│ Def(46, foo$M%0$D%0$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(50, mk$D%0$D%0$D%0$D%0$P%0, [x%60], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%79,x%80) = mk$D%0$D%0$D%0$P%0(x%60)
//│   in x%79,x%80
//│ )
//│ Def(52, mk$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%82) = mk$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%82)
//│     in x%13
//│ )
//│ Def(56, foo$M%0$D%2$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(60, mk$D%0$D%0$D%0$D%0$D%0$P%0, [x%79], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%94,x%95) = mk$D%0$D%0$D%0$D%0$P%0(x%79)
//│   in x%94,x%95
//│ )
//│ Def(62, mk$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%97) = mk$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%97)
//│     in x%13
//│ )
//│ Def(66, foo$M%0$D%4$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(67, mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%94], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%100,x%101) = mk$D%0$D%0$D%0$D%0$D%0$P%0(x%94)
//│   in x%100,x%101
//│ )
//│ Def(68, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0, [x%100], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(S)))],
//│ Rec: Some(7),
//│ 1, 
//│ let* (x%122,x%123) = mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%100)
//│   in if x%123
//│     true => let* (x%124) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0(x%122)
//│       in let x%13 = S(x%124)
//│         in x%13
//│     false => let* (x%125) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│       in let x%13 = S(x%125)
//│         in x%13
//│ )
//│ Def(69, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%103) = mk$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%103)
//│     in x%13
//│ )
//│ Def(76, foo$M%0$D%6$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ },
//│ let* (x%18) = foo()
//│   in x%18)
//│ 
//│ Optimized ------------------------------
//│ GOProgram({ClassInfo(0, True, []),ClassInfo(1, False, []),ClassInfo(2, S, [s]),ClassInfo(3, O, [])}, {
//│ Def(2, even, [x%5], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(15),
//│ 1, 
//│ case x%5 of
//│   O => let x%6 = True()
//│     in x%6
//│   S => let x%7 = x%5.s
//│     in case x%7 of
//│       S => let x%68 = x%7.s
//│         in let* (x%58) = odd$D%1$S%0(x%68)
//│           in x%58
//│       O => let x%1 = False()
//│         in x%1
//│ )
//│ Def(6, foo, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%19,x%20) = mk$P%0(10)
//│   in if x%20
//│     true => let* (x%35,x%36) = mk$D%0$P%0(x%19)
//│       in if x%36
//│         true => let* (x%53,x%54) = mk$D%0$D%0$P%0(x%35)
//│           in if x%54
//│             true => let* (x%71,x%72) = mk$D%0$D%0$D%0$P%0(x%53)
//│               in if x%72
//│                 true => let* (x%86,x%87) = mk$D%0$D%0$D%0$D%0$P%0(x%71)
//│                   in if x%87
//│                     true => let* (x%104,x%105) = mk$D%0$D%0$D%0$D%0$D%0$P%0(x%86)
//│                       in if x%105
//│                         true => let* (x%118,x%119) = mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%104)
//│                           in if x%119
//│                             true => let* (x%128,x%129) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%118)
//│                               in if x%129
//│                                 true => let* (x%130) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0(x%128)
//│                                   in jump foo$M%0(x%130)
//│                                 false => let* (x%131) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                   in jump foo$M%0(x%131)
//│                             false => let* (x%121) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                               in let x%140 = x%121.s
//│                                 in jump foo$M%0$D%8$S%0(x%140)
//│                         false => let* (x%107) = mk$D%0$D%0$D%0$D%0$D%0$D%1()
//│                           in let x%126 = x%107.s
//│                             in jump foo$M%0$D%6$S%0(x%126)
//│                     false => let* (x%89) = mk$D%0$D%0$D%0$D%0$D%1()
//│                       in let x%112 = x%89.s
//│                         in jump foo$M%0$D%4$S%0(x%112)
//│                 false => let* (x%74) = mk$D%0$D%0$D%0$D%1()
//│                   in let x%98 = x%74.s
//│                     in jump foo$M%0$D%2$S%0(x%98)
//│             false => let* (x%56) = mk$D%0$D%0$D%1()
//│               in let x%83 = x%56.s
//│                 in jump foo$M%0$D%0$S%0(x%83)
//│         false => let* (x%38) = mk$D%0$D%1()
//│           in let x%84 = x%38.s
//│             in jump foo$M%0$D%0$S%0(x%84)
//│     false => let x%1 = False()
//│       in x%1
//│ )
//│ Def(7, mk$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%10 = >(n%0,0)
//│   in n%0,x%10
//│ )
//│ Def(10, @join foo$M%0, [x%16], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [[Some(ICtor(S))],[Some(IMix(ICtor(S)))]],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ case x%16 of
//│   S => let x%67 = x%16.s
//│     in let* (x%47) = odd$D%1$S%0(x%67)
//│       in x%47
//│   O => let x%1 = False()
//│     in x%1
//│ )
//│ Def(13, mk$D%0$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%11 = -(n%0,1)
//│   in let* (x%23,x%24) = mk$P%0(x%11)
//│     in x%23,x%24
//│ )
//│ Def(15, mk$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let x%14 = O()
//│   in let x%13 = S(x%14)
//│     in x%13
//│ )
//│ Def(24, mk$D%0$D%0$P%0, [x%23], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%31,x%32) = mk$D%0$P%0(x%23)
//│   in x%31,x%32
//│ )
//│ Def(26, mk$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%34) = mk$D%0$D%1()
//│   in let x%13 = S(x%34)
//│     in x%13
//│ )
//│ Def(36, odd$D%1$S%0, [x%0_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(15),
//│ 1, 
//│ let* (x%3) = even(x%0_s)
//│   in x%3
//│ )
//│ Def(40, mk$D%0$D%0$D%0$P%0, [x%31], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%60,x%61) = mk$D%0$D%0$P%0(x%31)
//│   in x%60,x%61
//│ )
//│ Def(42, mk$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%63) = mk$D%0$D%0$D%1()
//│   in let x%13 = S(x%63)
//│     in x%13
//│ )
//│ Def(46, foo$M%0$D%0$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(50, mk$D%0$D%0$D%0$D%0$P%0, [x%60], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%79,x%80) = mk$D%0$D%0$D%0$P%0(x%60)
//│   in x%79,x%80
//│ )
//│ Def(52, mk$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%82) = mk$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%82)
//│     in x%13
//│ )
//│ Def(56, foo$M%0$D%2$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(60, mk$D%0$D%0$D%0$D%0$D%0$P%0, [x%79], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%94,x%95) = mk$D%0$D%0$D%0$D%0$P%0(x%79)
//│   in x%94,x%95
//│ )
//│ Def(62, mk$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%97) = mk$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%97)
//│     in x%13
//│ )
//│ Def(66, foo$M%0$D%4$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(67, mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%94], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%100,x%101) = mk$D%0$D%0$D%0$D%0$D%0$P%0(x%94)
//│   in x%100,x%101
//│ )
//│ Def(69, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%103) = mk$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%103)
//│     in x%13
//│ )
//│ Def(76, foo$M%0$D%6$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(80, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%100], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%122,x%123) = mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%100)
//│   in x%122,x%123
//│ )
//│ Def(81, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0, [x%122], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(S)))],
//│ Rec: Some(3),
//│ 1, 
//│ let* (x%132,x%133) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%122)
//│   in if x%133
//│     true => let* (x%134) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0(x%132)
//│       in let x%13 = S(x%134)
//│         in x%13
//│     false => let* (x%135) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│       in let x%13 = S(x%135)
//│         in x%13
//│ )
//│ Def(82, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%125) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%125)
//│     in x%13
//│ )
//│ Def(86, foo$M%0$D%8$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ },
//│ let* (x%18) = foo()
//│   in x%18)
//│ 
//│ Optimized ------------------------------
//│ GOProgram({ClassInfo(0, True, []),ClassInfo(1, False, []),ClassInfo(2, S, [s]),ClassInfo(3, O, [])}, {
//│ Def(2, even, [x%5], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(18),
//│ 1, 
//│ case x%5 of
//│   O => let x%6 = True()
//│     in x%6
//│   S => let x%7 = x%5.s
//│     in case x%7 of
//│       S => let x%68 = x%7.s
//│         in let* (x%58) = odd$D%1$S%0(x%68)
//│           in x%58
//│       O => let x%1 = False()
//│         in x%1
//│ )
//│ Def(6, foo, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%19,x%20) = mk$P%0(10)
//│   in if x%20
//│     true => let* (x%35,x%36) = mk$D%0$P%0(x%19)
//│       in if x%36
//│         true => let* (x%53,x%54) = mk$D%0$D%0$P%0(x%35)
//│           in if x%54
//│             true => let* (x%71,x%72) = mk$D%0$D%0$D%0$P%0(x%53)
//│               in if x%72
//│                 true => let* (x%86,x%87) = mk$D%0$D%0$D%0$D%0$P%0(x%71)
//│                   in if x%87
//│                     true => let* (x%104,x%105) = mk$D%0$D%0$D%0$D%0$D%0$P%0(x%86)
//│                       in if x%105
//│                         true => let* (x%118,x%119) = mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%104)
//│                           in if x%119
//│                             true => let* (x%128,x%129) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%118)
//│                               in if x%129
//│                                 true => let* (x%142,x%143) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%128)
//│                                   in if x%143
//│                                     true => let* (x%144) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0(x%142)
//│                                       in jump foo$M%0(x%144)
//│                                     false => let* (x%145) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                       in jump foo$M%0(x%145)
//│                                 false => let* (x%131) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                   in let x%154 = x%131.s
//│                                     in jump foo$M%0$D%10$S%0(x%154)
//│                             false => let* (x%121) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                               in let x%140 = x%121.s
//│                                 in jump foo$M%0$D%8$S%0(x%140)
//│                         false => let* (x%107) = mk$D%0$D%0$D%0$D%0$D%0$D%1()
//│                           in let x%126 = x%107.s
//│                             in jump foo$M%0$D%6$S%0(x%126)
//│                     false => let* (x%89) = mk$D%0$D%0$D%0$D%0$D%1()
//│                       in let x%112 = x%89.s
//│                         in jump foo$M%0$D%4$S%0(x%112)
//│                 false => let* (x%74) = mk$D%0$D%0$D%0$D%1()
//│                   in let x%98 = x%74.s
//│                     in jump foo$M%0$D%2$S%0(x%98)
//│             false => let* (x%56) = mk$D%0$D%0$D%1()
//│               in let x%83 = x%56.s
//│                 in jump foo$M%0$D%0$S%0(x%83)
//│         false => let* (x%38) = mk$D%0$D%1()
//│           in let x%84 = x%38.s
//│             in jump foo$M%0$D%0$S%0(x%84)
//│     false => let x%1 = False()
//│       in x%1
//│ )
//│ Def(7, mk$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%10 = >(n%0,0)
//│   in n%0,x%10
//│ )
//│ Def(10, @join foo$M%0, [x%16], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [[Some(ICtor(S))],[Some(IMix(ICtor(S)))]],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ case x%16 of
//│   S => let x%67 = x%16.s
//│     in let* (x%47) = odd$D%1$S%0(x%67)
//│       in x%47
//│   O => let x%1 = False()
//│     in x%1
//│ )
//│ Def(13, mk$D%0$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%11 = -(n%0,1)
//│   in let* (x%23,x%24) = mk$P%0(x%11)
//│     in x%23,x%24
//│ )
//│ Def(15, mk$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let x%14 = O()
//│   in let x%13 = S(x%14)
//│     in x%13
//│ )
//│ Def(24, mk$D%0$D%0$P%0, [x%23], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%31,x%32) = mk$D%0$P%0(x%23)
//│   in x%31,x%32
//│ )
//│ Def(26, mk$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%34) = mk$D%0$D%1()
//│   in let x%13 = S(x%34)
//│     in x%13
//│ )
//│ Def(36, odd$D%1$S%0, [x%0_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(18),
//│ 1, 
//│ let* (x%3) = even(x%0_s)
//│   in x%3
//│ )
//│ Def(40, mk$D%0$D%0$D%0$P%0, [x%31], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%60,x%61) = mk$D%0$D%0$P%0(x%31)
//│   in x%60,x%61
//│ )
//│ Def(42, mk$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%63) = mk$D%0$D%0$D%1()
//│   in let x%13 = S(x%63)
//│     in x%13
//│ )
//│ Def(46, foo$M%0$D%0$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(50, mk$D%0$D%0$D%0$D%0$P%0, [x%60], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%79,x%80) = mk$D%0$D%0$D%0$P%0(x%60)
//│   in x%79,x%80
//│ )
//│ Def(52, mk$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%82) = mk$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%82)
//│     in x%13
//│ )
//│ Def(56, foo$M%0$D%2$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(60, mk$D%0$D%0$D%0$D%0$D%0$P%0, [x%79], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%94,x%95) = mk$D%0$D%0$D%0$D%0$P%0(x%79)
//│   in x%94,x%95
//│ )
//│ Def(62, mk$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%97) = mk$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%97)
//│     in x%13
//│ )
//│ Def(66, foo$M%0$D%4$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(67, mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%94], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%100,x%101) = mk$D%0$D%0$D%0$D%0$D%0$P%0(x%94)
//│   in x%100,x%101
//│ )
//│ Def(69, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%103) = mk$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%103)
//│     in x%13
//│ )
//│ Def(76, foo$M%0$D%6$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(80, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%100], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%122,x%123) = mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%100)
//│   in x%122,x%123
//│ )
//│ Def(82, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%125) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%125)
//│     in x%13
//│ )
//│ Def(86, foo$M%0$D%8$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(90, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%122], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%132,x%133) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%122)
//│   in x%132,x%133
//│ )
//│ Def(91, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0, [x%132], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(S)))],
//│ Rec: Some(4),
//│ 1, 
//│ let* (x%150,x%151) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%132)
//│   in if x%151
//│     true => let* (x%152) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0(x%150)
//│       in let x%13 = S(x%152)
//│         in x%13
//│     false => let* (x%153) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│       in let x%13 = S(x%153)
//│         in x%13
//│ )
//│ Def(92, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%135) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%135)
//│     in x%13
//│ )
//│ Def(96, foo$M%0$D%10$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ },
//│ let* (x%18) = foo()
//│   in x%18)
//│ 
//│ Optimized ------------------------------
//│ GOProgram({ClassInfo(0, True, []),ClassInfo(1, False, []),ClassInfo(2, S, [s]),ClassInfo(3, O, [])}, {
//│ Def(2, even, [x%5], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(21),
//│ 1, 
//│ case x%5 of
//│   O => let x%6 = True()
//│     in x%6
//│   S => let x%7 = x%5.s
//│     in case x%7 of
//│       S => let x%68 = x%7.s
//│         in let* (x%58) = odd$D%1$S%0(x%68)
//│           in x%58
//│       O => let x%1 = False()
//│         in x%1
//│ )
//│ Def(6, foo, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%19,x%20) = mk$P%0(10)
//│   in if x%20
//│     true => let* (x%35,x%36) = mk$D%0$P%0(x%19)
//│       in if x%36
//│         true => let* (x%53,x%54) = mk$D%0$D%0$P%0(x%35)
//│           in if x%54
//│             true => let* (x%71,x%72) = mk$D%0$D%0$D%0$P%0(x%53)
//│               in if x%72
//│                 true => let* (x%86,x%87) = mk$D%0$D%0$D%0$D%0$P%0(x%71)
//│                   in if x%87
//│                     true => let* (x%104,x%105) = mk$D%0$D%0$D%0$D%0$D%0$P%0(x%86)
//│                       in if x%105
//│                         true => let* (x%118,x%119) = mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%104)
//│                           in if x%119
//│                             true => let* (x%128,x%129) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%118)
//│                               in if x%129
//│                                 true => let* (x%142,x%143) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%128)
//│                                   in if x%143
//│                                     true => let* (x%160,x%161) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%142)
//│                                       in if x%161
//│                                         true => let* (x%162) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0(x%160)
//│                                           in jump foo$M%0(x%162)
//│                                         false => let* (x%163) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                           in jump foo$M%0(x%163)
//│                                     false => let* (x%145) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                       in let x%168 = x%145.s
//│                                         in jump foo$M%0$D%12$S%0(x%168)
//│                                 false => let* (x%131) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                   in let x%154 = x%131.s
//│                                     in jump foo$M%0$D%10$S%0(x%154)
//│                             false => let* (x%121) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                               in let x%140 = x%121.s
//│                                 in jump foo$M%0$D%8$S%0(x%140)
//│                         false => let* (x%107) = mk$D%0$D%0$D%0$D%0$D%0$D%1()
//│                           in let x%126 = x%107.s
//│                             in jump foo$M%0$D%6$S%0(x%126)
//│                     false => let* (x%89) = mk$D%0$D%0$D%0$D%0$D%1()
//│                       in let x%112 = x%89.s
//│                         in jump foo$M%0$D%4$S%0(x%112)
//│                 false => let* (x%74) = mk$D%0$D%0$D%0$D%1()
//│                   in let x%98 = x%74.s
//│                     in jump foo$M%0$D%2$S%0(x%98)
//│             false => let* (x%56) = mk$D%0$D%0$D%1()
//│               in let x%83 = x%56.s
//│                 in jump foo$M%0$D%0$S%0(x%83)
//│         false => let* (x%38) = mk$D%0$D%1()
//│           in let x%84 = x%38.s
//│             in jump foo$M%0$D%0$S%0(x%84)
//│     false => let x%1 = False()
//│       in x%1
//│ )
//│ Def(7, mk$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%10 = >(n%0,0)
//│   in n%0,x%10
//│ )
//│ Def(10, @join foo$M%0, [x%16], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [[Some(IMix(ICtor(S)))],[Some(ICtor(S))]],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ case x%16 of
//│   S => let x%67 = x%16.s
//│     in let* (x%47) = odd$D%1$S%0(x%67)
//│       in x%47
//│   O => let x%1 = False()
//│     in x%1
//│ )
//│ Def(13, mk$D%0$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%11 = -(n%0,1)
//│   in let* (x%23,x%24) = mk$P%0(x%11)
//│     in x%23,x%24
//│ )
//│ Def(15, mk$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let x%14 = O()
//│   in let x%13 = S(x%14)
//│     in x%13
//│ )
//│ Def(24, mk$D%0$D%0$P%0, [x%23], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%31,x%32) = mk$D%0$P%0(x%23)
//│   in x%31,x%32
//│ )
//│ Def(26, mk$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%34) = mk$D%0$D%1()
//│   in let x%13 = S(x%34)
//│     in x%13
//│ )
//│ Def(36, odd$D%1$S%0, [x%0_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(21),
//│ 1, 
//│ let* (x%3) = even(x%0_s)
//│   in x%3
//│ )
//│ Def(40, mk$D%0$D%0$D%0$P%0, [x%31], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%60,x%61) = mk$D%0$D%0$P%0(x%31)
//│   in x%60,x%61
//│ )
//│ Def(42, mk$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%63) = mk$D%0$D%0$D%1()
//│   in let x%13 = S(x%63)
//│     in x%13
//│ )
//│ Def(46, foo$M%0$D%0$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(50, mk$D%0$D%0$D%0$D%0$P%0, [x%60], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%79,x%80) = mk$D%0$D%0$D%0$P%0(x%60)
//│   in x%79,x%80
//│ )
//│ Def(52, mk$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%82) = mk$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%82)
//│     in x%13
//│ )
//│ Def(56, foo$M%0$D%2$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(60, mk$D%0$D%0$D%0$D%0$D%0$P%0, [x%79], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%94,x%95) = mk$D%0$D%0$D%0$D%0$P%0(x%79)
//│   in x%94,x%95
//│ )
//│ Def(62, mk$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%97) = mk$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%97)
//│     in x%13
//│ )
//│ Def(66, foo$M%0$D%4$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(67, mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%94], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%100,x%101) = mk$D%0$D%0$D%0$D%0$D%0$P%0(x%94)
//│   in x%100,x%101
//│ )
//│ Def(69, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%103) = mk$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%103)
//│     in x%13
//│ )
//│ Def(76, foo$M%0$D%6$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(80, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%100], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%122,x%123) = mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%100)
//│   in x%122,x%123
//│ )
//│ Def(82, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%125) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%125)
//│     in x%13
//│ )
//│ Def(86, foo$M%0$D%8$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(90, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%122], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%132,x%133) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%122)
//│   in x%132,x%133
//│ )
//│ Def(92, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%135) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%135)
//│     in x%13
//│ )
//│ Def(96, foo$M%0$D%10$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(100, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%132], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%150,x%151) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%132)
//│   in x%150,x%151
//│ )
//│ Def(101, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0, [x%150], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(S)))],
//│ Rec: Some(2),
//│ 1, 
//│ let* (x%156,x%157) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%150)
//│   in if x%157
//│     true => let* (x%158) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0(x%156)
//│       in let x%13 = S(x%158)
//│         in x%13
//│     false => let* (x%159) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│       in let x%13 = S(x%159)
//│         in x%13
//│ )
//│ Def(102, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%153) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%153)
//│     in x%13
//│ )
//│ Def(106, foo$M%0$D%12$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ },
//│ let* (x%18) = foo()
//│   in x%18)
//│ 
//│ Optimized ------------------------------
//│ GOProgram({ClassInfo(0, True, []),ClassInfo(1, False, []),ClassInfo(2, S, [s]),ClassInfo(3, O, [])}, {
//│ Def(2, even, [x%5], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(24),
//│ 1, 
//│ case x%5 of
//│   O => let x%6 = True()
//│     in x%6
//│   S => let x%7 = x%5.s
//│     in case x%7 of
//│       S => let x%68 = x%7.s
//│         in let* (x%58) = odd$D%1$S%0(x%68)
//│           in x%58
//│       O => let x%1 = False()
//│         in x%1
//│ )
//│ Def(6, foo, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%19,x%20) = mk$P%0(10)
//│   in if x%20
//│     true => let* (x%35,x%36) = mk$D%0$P%0(x%19)
//│       in if x%36
//│         true => let* (x%53,x%54) = mk$D%0$D%0$P%0(x%35)
//│           in if x%54
//│             true => let* (x%71,x%72) = mk$D%0$D%0$D%0$P%0(x%53)
//│               in if x%72
//│                 true => let* (x%86,x%87) = mk$D%0$D%0$D%0$D%0$P%0(x%71)
//│                   in if x%87
//│                     true => let* (x%104,x%105) = mk$D%0$D%0$D%0$D%0$D%0$P%0(x%86)
//│                       in if x%105
//│                         true => let* (x%118,x%119) = mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%104)
//│                           in if x%119
//│                             true => let* (x%128,x%129) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%118)
//│                               in if x%129
//│                                 true => let* (x%142,x%143) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%128)
//│                                   in if x%143
//│                                     true => let* (x%160,x%161) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%142)
//│                                       in if x%161
//│                                         true => let* (x%174,x%175) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%160)
//│                                           in if x%175
//│                                             true => let* (x%176) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0(x%174)
//│                                               in jump foo$M%0(x%176)
//│                                             false => let* (x%177) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                               in jump foo$M%0(x%177)
//│                                         false => let* (x%163) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                           in let x%182 = x%163.s
//│                                             in jump foo$M%0$D%14$S%0(x%182)
//│                                     false => let* (x%145) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                       in let x%168 = x%145.s
//│                                         in jump foo$M%0$D%12$S%0(x%168)
//│                                 false => let* (x%131) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                   in let x%154 = x%131.s
//│                                     in jump foo$M%0$D%10$S%0(x%154)
//│                             false => let* (x%121) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                               in let x%140 = x%121.s
//│                                 in jump foo$M%0$D%8$S%0(x%140)
//│                         false => let* (x%107) = mk$D%0$D%0$D%0$D%0$D%0$D%1()
//│                           in let x%126 = x%107.s
//│                             in jump foo$M%0$D%6$S%0(x%126)
//│                     false => let* (x%89) = mk$D%0$D%0$D%0$D%0$D%1()
//│                       in let x%112 = x%89.s
//│                         in jump foo$M%0$D%4$S%0(x%112)
//│                 false => let* (x%74) = mk$D%0$D%0$D%0$D%1()
//│                   in let x%98 = x%74.s
//│                     in jump foo$M%0$D%2$S%0(x%98)
//│             false => let* (x%56) = mk$D%0$D%0$D%1()
//│               in let x%83 = x%56.s
//│                 in jump foo$M%0$D%0$S%0(x%83)
//│         false => let* (x%38) = mk$D%0$D%1()
//│           in let x%84 = x%38.s
//│             in jump foo$M%0$D%0$S%0(x%84)
//│     false => let x%1 = False()
//│       in x%1
//│ )
//│ Def(7, mk$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%10 = >(n%0,0)
//│   in n%0,x%10
//│ )
//│ Def(10, @join foo$M%0, [x%16], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [[Some(IMix(ICtor(S)))],[Some(ICtor(S))]],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ case x%16 of
//│   S => let x%67 = x%16.s
//│     in let* (x%47) = odd$D%1$S%0(x%67)
//│       in x%47
//│   O => let x%1 = False()
//│     in x%1
//│ )
//│ Def(13, mk$D%0$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%11 = -(n%0,1)
//│   in let* (x%23,x%24) = mk$P%0(x%11)
//│     in x%23,x%24
//│ )
//│ Def(15, mk$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let x%14 = O()
//│   in let x%13 = S(x%14)
//│     in x%13
//│ )
//│ Def(24, mk$D%0$D%0$P%0, [x%23], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%31,x%32) = mk$D%0$P%0(x%23)
//│   in x%31,x%32
//│ )
//│ Def(26, mk$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%34) = mk$D%0$D%1()
//│   in let x%13 = S(x%34)
//│     in x%13
//│ )
//│ Def(36, odd$D%1$S%0, [x%0_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(24),
//│ 1, 
//│ let* (x%3) = even(x%0_s)
//│   in x%3
//│ )
//│ Def(40, mk$D%0$D%0$D%0$P%0, [x%31], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%60,x%61) = mk$D%0$D%0$P%0(x%31)
//│   in x%60,x%61
//│ )
//│ Def(42, mk$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%63) = mk$D%0$D%0$D%1()
//│   in let x%13 = S(x%63)
//│     in x%13
//│ )
//│ Def(46, foo$M%0$D%0$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(50, mk$D%0$D%0$D%0$D%0$P%0, [x%60], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%79,x%80) = mk$D%0$D%0$D%0$P%0(x%60)
//│   in x%79,x%80
//│ )
//│ Def(52, mk$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%82) = mk$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%82)
//│     in x%13
//│ )
//│ Def(56, foo$M%0$D%2$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(60, mk$D%0$D%0$D%0$D%0$D%0$P%0, [x%79], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%94,x%95) = mk$D%0$D%0$D%0$D%0$P%0(x%79)
//│   in x%94,x%95
//│ )
//│ Def(62, mk$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%97) = mk$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%97)
//│     in x%13
//│ )
//│ Def(66, foo$M%0$D%4$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(67, mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%94], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%100,x%101) = mk$D%0$D%0$D%0$D%0$D%0$P%0(x%94)
//│   in x%100,x%101
//│ )
//│ Def(69, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%103) = mk$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%103)
//│     in x%13
//│ )
//│ Def(76, foo$M%0$D%6$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(80, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%100], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%122,x%123) = mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%100)
//│   in x%122,x%123
//│ )
//│ Def(82, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%125) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%125)
//│     in x%13
//│ )
//│ Def(86, foo$M%0$D%8$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(90, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%122], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%132,x%133) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%122)
//│   in x%132,x%133
//│ )
//│ Def(92, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%135) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%135)
//│     in x%13
//│ )
//│ Def(96, foo$M%0$D%10$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(100, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%132], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%150,x%151) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%132)
//│   in x%150,x%151
//│ )
//│ Def(102, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%153) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%153)
//│     in x%13
//│ )
//│ Def(106, foo$M%0$D%12$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(107, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%150], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%156,x%157) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%150)
//│   in x%156,x%157
//│ )
//│ Def(108, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0, [x%156], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(S)))],
//│ Rec: Some(8),
//│ 1, 
//│ let* (x%178,x%179) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%156)
//│   in if x%179
//│     true => let* (x%180) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0(x%178)
//│       in let x%13 = S(x%180)
//│         in x%13
//│     false => let* (x%181) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│       in let x%13 = S(x%181)
//│         in x%13
//│ )
//│ Def(109, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%159) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%159)
//│     in x%13
//│ )
//│ Def(116, foo$M%0$D%14$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ },
//│ let* (x%18) = foo()
//│   in x%18)
//│ 
//│ Optimized ------------------------------
//│ GOProgram({ClassInfo(0, True, []),ClassInfo(1, False, []),ClassInfo(2, S, [s]),ClassInfo(3, O, [])}, {
//│ Def(2, even, [x%5], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(27),
//│ 1, 
//│ case x%5 of
//│   O => let x%6 = True()
//│     in x%6
//│   S => let x%7 = x%5.s
//│     in case x%7 of
//│       S => let x%68 = x%7.s
//│         in let* (x%58) = odd$D%1$S%0(x%68)
//│           in x%58
//│       O => let x%1 = False()
//│         in x%1
//│ )
//│ Def(6, foo, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%19,x%20) = mk$P%0(10)
//│   in if x%20
//│     true => let* (x%35,x%36) = mk$D%0$P%0(x%19)
//│       in if x%36
//│         true => let* (x%53,x%54) = mk$D%0$D%0$P%0(x%35)
//│           in if x%54
//│             true => let* (x%71,x%72) = mk$D%0$D%0$D%0$P%0(x%53)
//│               in if x%72
//│                 true => let* (x%86,x%87) = mk$D%0$D%0$D%0$D%0$P%0(x%71)
//│                   in if x%87
//│                     true => let* (x%104,x%105) = mk$D%0$D%0$D%0$D%0$D%0$P%0(x%86)
//│                       in if x%105
//│                         true => let* (x%118,x%119) = mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%104)
//│                           in if x%119
//│                             true => let* (x%128,x%129) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%118)
//│                               in if x%129
//│                                 true => let* (x%142,x%143) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%128)
//│                                   in if x%143
//│                                     true => let* (x%160,x%161) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%142)
//│                                       in if x%161
//│                                         true => let* (x%174,x%175) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%160)
//│                                           in if x%175
//│                                             true => let* (x%188,x%189) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%174)
//│                                               in if x%189
//│                                                 true => let* (x%190) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0(x%188)
//│                                                   in jump foo$M%0(x%190)
//│                                                 false => let* (x%191) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                   in jump foo$M%0(x%191)
//│                                             false => let* (x%177) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                               in let x%196 = x%177.s
//│                                                 in jump foo$M%0$D%16$S%0(x%196)
//│                                         false => let* (x%163) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                           in let x%182 = x%163.s
//│                                             in jump foo$M%0$D%14$S%0(x%182)
//│                                     false => let* (x%145) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                       in let x%168 = x%145.s
//│                                         in jump foo$M%0$D%12$S%0(x%168)
//│                                 false => let* (x%131) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                   in let x%154 = x%131.s
//│                                     in jump foo$M%0$D%10$S%0(x%154)
//│                             false => let* (x%121) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                               in let x%140 = x%121.s
//│                                 in jump foo$M%0$D%8$S%0(x%140)
//│                         false => let* (x%107) = mk$D%0$D%0$D%0$D%0$D%0$D%1()
//│                           in let x%126 = x%107.s
//│                             in jump foo$M%0$D%6$S%0(x%126)
//│                     false => let* (x%89) = mk$D%0$D%0$D%0$D%0$D%1()
//│                       in let x%112 = x%89.s
//│                         in jump foo$M%0$D%4$S%0(x%112)
//│                 false => let* (x%74) = mk$D%0$D%0$D%0$D%1()
//│                   in let x%98 = x%74.s
//│                     in jump foo$M%0$D%2$S%0(x%98)
//│             false => let* (x%56) = mk$D%0$D%0$D%1()
//│               in let x%83 = x%56.s
//│                 in jump foo$M%0$D%0$S%0(x%83)
//│         false => let* (x%38) = mk$D%0$D%1()
//│           in let x%84 = x%38.s
//│             in jump foo$M%0$D%0$S%0(x%84)
//│     false => let x%1 = False()
//│       in x%1
//│ )
//│ Def(7, mk$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%10 = >(n%0,0)
//│   in n%0,x%10
//│ )
//│ Def(10, @join foo$M%0, [x%16], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [[Some(IMix(ICtor(S)))],[Some(ICtor(S))]],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ case x%16 of
//│   S => let x%67 = x%16.s
//│     in let* (x%47) = odd$D%1$S%0(x%67)
//│       in x%47
//│   O => let x%1 = False()
//│     in x%1
//│ )
//│ Def(13, mk$D%0$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%11 = -(n%0,1)
//│   in let* (x%23,x%24) = mk$P%0(x%11)
//│     in x%23,x%24
//│ )
//│ Def(15, mk$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let x%14 = O()
//│   in let x%13 = S(x%14)
//│     in x%13
//│ )
//│ Def(24, mk$D%0$D%0$P%0, [x%23], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%31,x%32) = mk$D%0$P%0(x%23)
//│   in x%31,x%32
//│ )
//│ Def(26, mk$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%34) = mk$D%0$D%1()
//│   in let x%13 = S(x%34)
//│     in x%13
//│ )
//│ Def(36, odd$D%1$S%0, [x%0_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(27),
//│ 1, 
//│ let* (x%3) = even(x%0_s)
//│   in x%3
//│ )
//│ Def(40, mk$D%0$D%0$D%0$P%0, [x%31], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%60,x%61) = mk$D%0$D%0$P%0(x%31)
//│   in x%60,x%61
//│ )
//│ Def(42, mk$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%63) = mk$D%0$D%0$D%1()
//│   in let x%13 = S(x%63)
//│     in x%13
//│ )
//│ Def(46, foo$M%0$D%0$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(50, mk$D%0$D%0$D%0$D%0$P%0, [x%60], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%79,x%80) = mk$D%0$D%0$D%0$P%0(x%60)
//│   in x%79,x%80
//│ )
//│ Def(52, mk$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%82) = mk$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%82)
//│     in x%13
//│ )
//│ Def(56, foo$M%0$D%2$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(60, mk$D%0$D%0$D%0$D%0$D%0$P%0, [x%79], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%94,x%95) = mk$D%0$D%0$D%0$D%0$P%0(x%79)
//│   in x%94,x%95
//│ )
//│ Def(62, mk$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%97) = mk$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%97)
//│     in x%13
//│ )
//│ Def(66, foo$M%0$D%4$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(67, mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%94], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%100,x%101) = mk$D%0$D%0$D%0$D%0$D%0$P%0(x%94)
//│   in x%100,x%101
//│ )
//│ Def(69, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%103) = mk$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%103)
//│     in x%13
//│ )
//│ Def(76, foo$M%0$D%6$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(80, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%100], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%122,x%123) = mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%100)
//│   in x%122,x%123
//│ )
//│ Def(82, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%125) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%125)
//│     in x%13
//│ )
//│ Def(86, foo$M%0$D%8$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(90, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%122], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%132,x%133) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%122)
//│   in x%132,x%133
//│ )
//│ Def(92, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%135) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%135)
//│     in x%13
//│ )
//│ Def(96, foo$M%0$D%10$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(100, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%132], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%150,x%151) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%132)
//│   in x%150,x%151
//│ )
//│ Def(102, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%153) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%153)
//│     in x%13
//│ )
//│ Def(106, foo$M%0$D%12$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(107, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%150], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%156,x%157) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%150)
//│   in x%156,x%157
//│ )
//│ Def(109, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%159) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%159)
//│     in x%13
//│ )
//│ Def(116, foo$M%0$D%14$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(120, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%156], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%178,x%179) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%156)
//│   in x%178,x%179
//│ )
//│ Def(121, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0, [x%178], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(S)))],
//│ Rec: Some(4),
//│ 1, 
//│ let* (x%184,x%185) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%178)
//│   in if x%185
//│     true => let* (x%186) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0(x%184)
//│       in let x%13 = S(x%186)
//│         in x%13
//│     false => let* (x%187) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│       in let x%13 = S(x%187)
//│         in x%13
//│ )
//│ Def(122, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%181) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%181)
//│     in x%13
//│ )
//│ Def(126, foo$M%0$D%16$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ },
//│ let* (x%18) = foo()
//│   in x%18)
//│ 
//│ Optimized ------------------------------
//│ GOProgram({ClassInfo(0, True, []),ClassInfo(1, False, []),ClassInfo(2, S, [s]),ClassInfo(3, O, [])}, {
//│ Def(2, even, [x%5], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(30),
//│ 1, 
//│ case x%5 of
//│   O => let x%6 = True()
//│     in x%6
//│   S => let x%7 = x%5.s
//│     in case x%7 of
//│       S => let x%68 = x%7.s
//│         in let* (x%58) = odd$D%1$S%0(x%68)
//│           in x%58
//│       O => let x%1 = False()
//│         in x%1
//│ )
//│ Def(6, foo, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%19,x%20) = mk$P%0(10)
//│   in if x%20
//│     true => let* (x%35,x%36) = mk$D%0$P%0(x%19)
//│       in if x%36
//│         true => let* (x%53,x%54) = mk$D%0$D%0$P%0(x%35)
//│           in if x%54
//│             true => let* (x%71,x%72) = mk$D%0$D%0$D%0$P%0(x%53)
//│               in if x%72
//│                 true => let* (x%86,x%87) = mk$D%0$D%0$D%0$D%0$P%0(x%71)
//│                   in if x%87
//│                     true => let* (x%104,x%105) = mk$D%0$D%0$D%0$D%0$D%0$P%0(x%86)
//│                       in if x%105
//│                         true => let* (x%118,x%119) = mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%104)
//│                           in if x%119
//│                             true => let* (x%128,x%129) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%118)
//│                               in if x%129
//│                                 true => let* (x%142,x%143) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%128)
//│                                   in if x%143
//│                                     true => let* (x%160,x%161) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%142)
//│                                       in if x%161
//│                                         true => let* (x%174,x%175) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%160)
//│                                           in if x%175
//│                                             true => let* (x%188,x%189) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%174)
//│                                               in if x%189
//│                                                 true => let* (x%202,x%203) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%188)
//│                                                   in if x%203
//│                                                     true => let* (x%204) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0(x%202)
//│                                                       in jump foo$M%0(x%204)
//│                                                     false => let* (x%205) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                       in jump foo$M%0(x%205)
//│                                                 false => let* (x%191) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                   in let x%210 = x%191.s
//│                                                     in jump foo$M%0$D%18$S%0(x%210)
//│                                             false => let* (x%177) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                               in let x%196 = x%177.s
//│                                                 in jump foo$M%0$D%16$S%0(x%196)
//│                                         false => let* (x%163) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                           in let x%182 = x%163.s
//│                                             in jump foo$M%0$D%14$S%0(x%182)
//│                                     false => let* (x%145) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                       in let x%168 = x%145.s
//│                                         in jump foo$M%0$D%12$S%0(x%168)
//│                                 false => let* (x%131) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                   in let x%154 = x%131.s
//│                                     in jump foo$M%0$D%10$S%0(x%154)
//│                             false => let* (x%121) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                               in let x%140 = x%121.s
//│                                 in jump foo$M%0$D%8$S%0(x%140)
//│                         false => let* (x%107) = mk$D%0$D%0$D%0$D%0$D%0$D%1()
//│                           in let x%126 = x%107.s
//│                             in jump foo$M%0$D%6$S%0(x%126)
//│                     false => let* (x%89) = mk$D%0$D%0$D%0$D%0$D%1()
//│                       in let x%112 = x%89.s
//│                         in jump foo$M%0$D%4$S%0(x%112)
//│                 false => let* (x%74) = mk$D%0$D%0$D%0$D%1()
//│                   in let x%98 = x%74.s
//│                     in jump foo$M%0$D%2$S%0(x%98)
//│             false => let* (x%56) = mk$D%0$D%0$D%1()
//│               in let x%83 = x%56.s
//│                 in jump foo$M%0$D%0$S%0(x%83)
//│         false => let* (x%38) = mk$D%0$D%1()
//│           in let x%84 = x%38.s
//│             in jump foo$M%0$D%0$S%0(x%84)
//│     false => let x%1 = False()
//│       in x%1
//│ )
//│ Def(7, mk$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%10 = >(n%0,0)
//│   in n%0,x%10
//│ )
//│ Def(10, @join foo$M%0, [x%16], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [[Some(ICtor(S))],[Some(IMix(ICtor(S)))]],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ case x%16 of
//│   S => let x%67 = x%16.s
//│     in let* (x%47) = odd$D%1$S%0(x%67)
//│       in x%47
//│   O => let x%1 = False()
//│     in x%1
//│ )
//│ Def(13, mk$D%0$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%11 = -(n%0,1)
//│   in let* (x%23,x%24) = mk$P%0(x%11)
//│     in x%23,x%24
//│ )
//│ Def(15, mk$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let x%14 = O()
//│   in let x%13 = S(x%14)
//│     in x%13
//│ )
//│ Def(24, mk$D%0$D%0$P%0, [x%23], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%31,x%32) = mk$D%0$P%0(x%23)
//│   in x%31,x%32
//│ )
//│ Def(26, mk$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%34) = mk$D%0$D%1()
//│   in let x%13 = S(x%34)
//│     in x%13
//│ )
//│ Def(36, odd$D%1$S%0, [x%0_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(30),
//│ 1, 
//│ let* (x%3) = even(x%0_s)
//│   in x%3
//│ )
//│ Def(40, mk$D%0$D%0$D%0$P%0, [x%31], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%60,x%61) = mk$D%0$D%0$P%0(x%31)
//│   in x%60,x%61
//│ )
//│ Def(42, mk$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%63) = mk$D%0$D%0$D%1()
//│   in let x%13 = S(x%63)
//│     in x%13
//│ )
//│ Def(46, foo$M%0$D%0$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(50, mk$D%0$D%0$D%0$D%0$P%0, [x%60], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%79,x%80) = mk$D%0$D%0$D%0$P%0(x%60)
//│   in x%79,x%80
//│ )
//│ Def(52, mk$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%82) = mk$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%82)
//│     in x%13
//│ )
//│ Def(56, foo$M%0$D%2$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(60, mk$D%0$D%0$D%0$D%0$D%0$P%0, [x%79], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%94,x%95) = mk$D%0$D%0$D%0$D%0$P%0(x%79)
//│   in x%94,x%95
//│ )
//│ Def(62, mk$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%97) = mk$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%97)
//│     in x%13
//│ )
//│ Def(66, foo$M%0$D%4$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(67, mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%94], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%100,x%101) = mk$D%0$D%0$D%0$D%0$D%0$P%0(x%94)
//│   in x%100,x%101
//│ )
//│ Def(69, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%103) = mk$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%103)
//│     in x%13
//│ )
//│ Def(76, foo$M%0$D%6$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(80, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%100], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%122,x%123) = mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%100)
//│   in x%122,x%123
//│ )
//│ Def(82, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%125) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%125)
//│     in x%13
//│ )
//│ Def(86, foo$M%0$D%8$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(90, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%122], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%132,x%133) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%122)
//│   in x%132,x%133
//│ )
//│ Def(92, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%135) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%135)
//│     in x%13
//│ )
//│ Def(96, foo$M%0$D%10$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(100, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%132], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%150,x%151) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%132)
//│   in x%150,x%151
//│ )
//│ Def(102, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%153) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%153)
//│     in x%13
//│ )
//│ Def(106, foo$M%0$D%12$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(107, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%150], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%156,x%157) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%150)
//│   in x%156,x%157
//│ )
//│ Def(109, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%159) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%159)
//│     in x%13
//│ )
//│ Def(116, foo$M%0$D%14$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(120, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%156], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%178,x%179) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%156)
//│   in x%178,x%179
//│ )
//│ Def(122, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%181) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%181)
//│     in x%13
//│ )
//│ Def(126, foo$M%0$D%16$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(130, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%178], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%184,x%185) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%178)
//│   in x%184,x%185
//│ )
//│ Def(131, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0, [x%184], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(S)))],
//│ Rec: Some(7),
//│ 1, 
//│ let* (x%206,x%207) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%184)
//│   in if x%207
//│     true => let* (x%208) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0(x%206)
//│       in let x%13 = S(x%208)
//│         in x%13
//│     false => let* (x%209) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│       in let x%13 = S(x%209)
//│         in x%13
//│ )
//│ Def(132, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%187) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%187)
//│     in x%13
//│ )
//│ Def(136, foo$M%0$D%18$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ },
//│ let* (x%18) = foo()
//│   in x%18)
//│ 
//│ Optimized ------------------------------
//│ GOProgram({ClassInfo(0, True, []),ClassInfo(1, False, []),ClassInfo(2, S, [s]),ClassInfo(3, O, [])}, {
//│ Def(2, even, [x%5], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(33),
//│ 1, 
//│ case x%5 of
//│   O => let x%6 = True()
//│     in x%6
//│   S => let x%7 = x%5.s
//│     in case x%7 of
//│       S => let x%68 = x%7.s
//│         in let* (x%58) = odd$D%1$S%0(x%68)
//│           in x%58
//│       O => let x%1 = False()
//│         in x%1
//│ )
//│ Def(6, foo, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%19,x%20) = mk$P%0(10)
//│   in if x%20
//│     true => let* (x%35,x%36) = mk$D%0$P%0(x%19)
//│       in if x%36
//│         true => let* (x%53,x%54) = mk$D%0$D%0$P%0(x%35)
//│           in if x%54
//│             true => let* (x%71,x%72) = mk$D%0$D%0$D%0$P%0(x%53)
//│               in if x%72
//│                 true => let* (x%86,x%87) = mk$D%0$D%0$D%0$D%0$P%0(x%71)
//│                   in if x%87
//│                     true => let* (x%104,x%105) = mk$D%0$D%0$D%0$D%0$D%0$P%0(x%86)
//│                       in if x%105
//│                         true => let* (x%118,x%119) = mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%104)
//│                           in if x%119
//│                             true => let* (x%128,x%129) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%118)
//│                               in if x%129
//│                                 true => let* (x%142,x%143) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%128)
//│                                   in if x%143
//│                                     true => let* (x%160,x%161) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%142)
//│                                       in if x%161
//│                                         true => let* (x%174,x%175) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%160)
//│                                           in if x%175
//│                                             true => let* (x%188,x%189) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%174)
//│                                               in if x%189
//│                                                 true => let* (x%202,x%203) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%188)
//│                                                   in if x%203
//│                                                     true => let* (x%216,x%217) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%202)
//│                                                       in if x%217
//│                                                         true => let* (x%218) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0(x%216)
//│                                                           in jump foo$M%0(x%218)
//│                                                         false => let* (x%219) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                           in jump foo$M%0(x%219)
//│                                                     false => let* (x%205) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                       in let x%224 = x%205.s
//│                                                         in jump foo$M%0$D%20$S%0(x%224)
//│                                                 false => let* (x%191) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                   in let x%210 = x%191.s
//│                                                     in jump foo$M%0$D%18$S%0(x%210)
//│                                             false => let* (x%177) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                               in let x%196 = x%177.s
//│                                                 in jump foo$M%0$D%16$S%0(x%196)
//│                                         false => let* (x%163) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                           in let x%182 = x%163.s
//│                                             in jump foo$M%0$D%14$S%0(x%182)
//│                                     false => let* (x%145) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                       in let x%168 = x%145.s
//│                                         in jump foo$M%0$D%12$S%0(x%168)
//│                                 false => let* (x%131) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                   in let x%154 = x%131.s
//│                                     in jump foo$M%0$D%10$S%0(x%154)
//│                             false => let* (x%121) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                               in let x%140 = x%121.s
//│                                 in jump foo$M%0$D%8$S%0(x%140)
//│                         false => let* (x%107) = mk$D%0$D%0$D%0$D%0$D%0$D%1()
//│                           in let x%126 = x%107.s
//│                             in jump foo$M%0$D%6$S%0(x%126)
//│                     false => let* (x%89) = mk$D%0$D%0$D%0$D%0$D%1()
//│                       in let x%112 = x%89.s
//│                         in jump foo$M%0$D%4$S%0(x%112)
//│                 false => let* (x%74) = mk$D%0$D%0$D%0$D%1()
//│                   in let x%98 = x%74.s
//│                     in jump foo$M%0$D%2$S%0(x%98)
//│             false => let* (x%56) = mk$D%0$D%0$D%1()
//│               in let x%83 = x%56.s
//│                 in jump foo$M%0$D%0$S%0(x%83)
//│         false => let* (x%38) = mk$D%0$D%1()
//│           in let x%84 = x%38.s
//│             in jump foo$M%0$D%0$S%0(x%84)
//│     false => let x%1 = False()
//│       in x%1
//│ )
//│ Def(7, mk$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%10 = >(n%0,0)
//│   in n%0,x%10
//│ )
//│ Def(10, @join foo$M%0, [x%16], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [[Some(IMix(ICtor(S)))],[Some(ICtor(S))]],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ case x%16 of
//│   S => let x%67 = x%16.s
//│     in let* (x%47) = odd$D%1$S%0(x%67)
//│       in x%47
//│   O => let x%1 = False()
//│     in x%1
//│ )
//│ Def(13, mk$D%0$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%11 = -(n%0,1)
//│   in let* (x%23,x%24) = mk$P%0(x%11)
//│     in x%23,x%24
//│ )
//│ Def(15, mk$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let x%14 = O()
//│   in let x%13 = S(x%14)
//│     in x%13
//│ )
//│ Def(24, mk$D%0$D%0$P%0, [x%23], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%31,x%32) = mk$D%0$P%0(x%23)
//│   in x%31,x%32
//│ )
//│ Def(26, mk$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%34) = mk$D%0$D%1()
//│   in let x%13 = S(x%34)
//│     in x%13
//│ )
//│ Def(36, odd$D%1$S%0, [x%0_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(33),
//│ 1, 
//│ let* (x%3) = even(x%0_s)
//│   in x%3
//│ )
//│ Def(40, mk$D%0$D%0$D%0$P%0, [x%31], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%60,x%61) = mk$D%0$D%0$P%0(x%31)
//│   in x%60,x%61
//│ )
//│ Def(42, mk$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%63) = mk$D%0$D%0$D%1()
//│   in let x%13 = S(x%63)
//│     in x%13
//│ )
//│ Def(46, foo$M%0$D%0$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(50, mk$D%0$D%0$D%0$D%0$P%0, [x%60], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%79,x%80) = mk$D%0$D%0$D%0$P%0(x%60)
//│   in x%79,x%80
//│ )
//│ Def(52, mk$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%82) = mk$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%82)
//│     in x%13
//│ )
//│ Def(56, foo$M%0$D%2$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(60, mk$D%0$D%0$D%0$D%0$D%0$P%0, [x%79], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%94,x%95) = mk$D%0$D%0$D%0$D%0$P%0(x%79)
//│   in x%94,x%95
//│ )
//│ Def(62, mk$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%97) = mk$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%97)
//│     in x%13
//│ )
//│ Def(66, foo$M%0$D%4$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(67, mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%94], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%100,x%101) = mk$D%0$D%0$D%0$D%0$D%0$P%0(x%94)
//│   in x%100,x%101
//│ )
//│ Def(69, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%103) = mk$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%103)
//│     in x%13
//│ )
//│ Def(76, foo$M%0$D%6$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(80, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%100], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%122,x%123) = mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%100)
//│   in x%122,x%123
//│ )
//│ Def(82, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%125) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%125)
//│     in x%13
//│ )
//│ Def(86, foo$M%0$D%8$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(90, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%122], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%132,x%133) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%122)
//│   in x%132,x%133
//│ )
//│ Def(92, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%135) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%135)
//│     in x%13
//│ )
//│ Def(96, foo$M%0$D%10$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(100, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%132], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%150,x%151) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%132)
//│   in x%150,x%151
//│ )
//│ Def(102, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%153) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%153)
//│     in x%13
//│ )
//│ Def(106, foo$M%0$D%12$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(107, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%150], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%156,x%157) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%150)
//│   in x%156,x%157
//│ )
//│ Def(109, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%159) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%159)
//│     in x%13
//│ )
//│ Def(116, foo$M%0$D%14$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(120, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%156], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%178,x%179) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%156)
//│   in x%178,x%179
//│ )
//│ Def(122, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%181) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%181)
//│     in x%13
//│ )
//│ Def(126, foo$M%0$D%16$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(130, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%178], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%184,x%185) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%178)
//│   in x%184,x%185
//│ )
//│ Def(132, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%187) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%187)
//│     in x%13
//│ )
//│ Def(136, foo$M%0$D%18$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(140, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%184], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%206,x%207) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%184)
//│   in x%206,x%207
//│ )
//│ Def(141, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0, [x%206], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(S)))],
//│ Rec: Some(10),
//│ 1, 
//│ let* (x%212,x%213) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%206)
//│   in if x%213
//│     true => let* (x%214) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0(x%212)
//│       in let x%13 = S(x%214)
//│         in x%13
//│     false => let* (x%215) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│       in let x%13 = S(x%215)
//│         in x%13
//│ )
//│ Def(142, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%209) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%209)
//│     in x%13
//│ )
//│ Def(146, foo$M%0$D%20$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ },
//│ let* (x%18) = foo()
//│   in x%18)
//│ 
//│ Optimized ------------------------------
//│ GOProgram({ClassInfo(0, True, []),ClassInfo(1, False, []),ClassInfo(2, S, [s]),ClassInfo(3, O, [])}, {
//│ Def(2, even, [x%5], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(36),
//│ 1, 
//│ case x%5 of
//│   O => let x%6 = True()
//│     in x%6
//│   S => let x%7 = x%5.s
//│     in case x%7 of
//│       S => let x%68 = x%7.s
//│         in let* (x%58) = odd$D%1$S%0(x%68)
//│           in x%58
//│       O => let x%1 = False()
//│         in x%1
//│ )
//│ Def(6, foo, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%19,x%20) = mk$P%0(10)
//│   in if x%20
//│     true => let* (x%35,x%36) = mk$D%0$P%0(x%19)
//│       in if x%36
//│         true => let* (x%53,x%54) = mk$D%0$D%0$P%0(x%35)
//│           in if x%54
//│             true => let* (x%71,x%72) = mk$D%0$D%0$D%0$P%0(x%53)
//│               in if x%72
//│                 true => let* (x%86,x%87) = mk$D%0$D%0$D%0$D%0$P%0(x%71)
//│                   in if x%87
//│                     true => let* (x%104,x%105) = mk$D%0$D%0$D%0$D%0$D%0$P%0(x%86)
//│                       in if x%105
//│                         true => let* (x%118,x%119) = mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%104)
//│                           in if x%119
//│                             true => let* (x%128,x%129) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%118)
//│                               in if x%129
//│                                 true => let* (x%142,x%143) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%128)
//│                                   in if x%143
//│                                     true => let* (x%160,x%161) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%142)
//│                                       in if x%161
//│                                         true => let* (x%174,x%175) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%160)
//│                                           in if x%175
//│                                             true => let* (x%188,x%189) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%174)
//│                                               in if x%189
//│                                                 true => let* (x%202,x%203) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%188)
//│                                                   in if x%203
//│                                                     true => let* (x%216,x%217) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%202)
//│                                                       in if x%217
//│                                                         true => let* (x%230,x%231) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%216)
//│                                                           in if x%231
//│                                                             true => let* (x%232) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0(x%230)
//│                                                               in jump foo$M%0(x%232)
//│                                                             false => let* (x%233) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                               in jump foo$M%0(x%233)
//│                                                         false => let* (x%219) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                           in let x%238 = x%219.s
//│                                                             in jump foo$M%0$D%22$S%0(x%238)
//│                                                     false => let* (x%205) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                       in let x%224 = x%205.s
//│                                                         in jump foo$M%0$D%20$S%0(x%224)
//│                                                 false => let* (x%191) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                   in let x%210 = x%191.s
//│                                                     in jump foo$M%0$D%18$S%0(x%210)
//│                                             false => let* (x%177) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                               in let x%196 = x%177.s
//│                                                 in jump foo$M%0$D%16$S%0(x%196)
//│                                         false => let* (x%163) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                           in let x%182 = x%163.s
//│                                             in jump foo$M%0$D%14$S%0(x%182)
//│                                     false => let* (x%145) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                       in let x%168 = x%145.s
//│                                         in jump foo$M%0$D%12$S%0(x%168)
//│                                 false => let* (x%131) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                   in let x%154 = x%131.s
//│                                     in jump foo$M%0$D%10$S%0(x%154)
//│                             false => let* (x%121) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                               in let x%140 = x%121.s
//│                                 in jump foo$M%0$D%8$S%0(x%140)
//│                         false => let* (x%107) = mk$D%0$D%0$D%0$D%0$D%0$D%1()
//│                           in let x%126 = x%107.s
//│                             in jump foo$M%0$D%6$S%0(x%126)
//│                     false => let* (x%89) = mk$D%0$D%0$D%0$D%0$D%1()
//│                       in let x%112 = x%89.s
//│                         in jump foo$M%0$D%4$S%0(x%112)
//│                 false => let* (x%74) = mk$D%0$D%0$D%0$D%1()
//│                   in let x%98 = x%74.s
//│                     in jump foo$M%0$D%2$S%0(x%98)
//│             false => let* (x%56) = mk$D%0$D%0$D%1()
//│               in let x%83 = x%56.s
//│                 in jump foo$M%0$D%0$S%0(x%83)
//│         false => let* (x%38) = mk$D%0$D%1()
//│           in let x%84 = x%38.s
//│             in jump foo$M%0$D%0$S%0(x%84)
//│     false => let x%1 = False()
//│       in x%1
//│ )
//│ Def(7, mk$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%10 = >(n%0,0)
//│   in n%0,x%10
//│ )
//│ Def(10, @join foo$M%0, [x%16], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [[Some(IMix(ICtor(S)))],[Some(ICtor(S))]],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ case x%16 of
//│   S => let x%67 = x%16.s
//│     in let* (x%47) = odd$D%1$S%0(x%67)
//│       in x%47
//│   O => let x%1 = False()
//│     in x%1
//│ )
//│ Def(13, mk$D%0$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%11 = -(n%0,1)
//│   in let* (x%23,x%24) = mk$P%0(x%11)
//│     in x%23,x%24
//│ )
//│ Def(15, mk$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let x%14 = O()
//│   in let x%13 = S(x%14)
//│     in x%13
//│ )
//│ Def(24, mk$D%0$D%0$P%0, [x%23], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%31,x%32) = mk$D%0$P%0(x%23)
//│   in x%31,x%32
//│ )
//│ Def(26, mk$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%34) = mk$D%0$D%1()
//│   in let x%13 = S(x%34)
//│     in x%13
//│ )
//│ Def(36, odd$D%1$S%0, [x%0_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(36),
//│ 1, 
//│ let* (x%3) = even(x%0_s)
//│   in x%3
//│ )
//│ Def(40, mk$D%0$D%0$D%0$P%0, [x%31], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%60,x%61) = mk$D%0$D%0$P%0(x%31)
//│   in x%60,x%61
//│ )
//│ Def(42, mk$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%63) = mk$D%0$D%0$D%1()
//│   in let x%13 = S(x%63)
//│     in x%13
//│ )
//│ Def(46, foo$M%0$D%0$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(50, mk$D%0$D%0$D%0$D%0$P%0, [x%60], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%79,x%80) = mk$D%0$D%0$D%0$P%0(x%60)
//│   in x%79,x%80
//│ )
//│ Def(52, mk$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%82) = mk$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%82)
//│     in x%13
//│ )
//│ Def(56, foo$M%0$D%2$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(60, mk$D%0$D%0$D%0$D%0$D%0$P%0, [x%79], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%94,x%95) = mk$D%0$D%0$D%0$D%0$P%0(x%79)
//│   in x%94,x%95
//│ )
//│ Def(62, mk$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%97) = mk$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%97)
//│     in x%13
//│ )
//│ Def(66, foo$M%0$D%4$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(67, mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%94], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%100,x%101) = mk$D%0$D%0$D%0$D%0$D%0$P%0(x%94)
//│   in x%100,x%101
//│ )
//│ Def(69, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%103) = mk$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%103)
//│     in x%13
//│ )
//│ Def(76, foo$M%0$D%6$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(80, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%100], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%122,x%123) = mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%100)
//│   in x%122,x%123
//│ )
//│ Def(82, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%125) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%125)
//│     in x%13
//│ )
//│ Def(86, foo$M%0$D%8$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(90, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%122], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%132,x%133) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%122)
//│   in x%132,x%133
//│ )
//│ Def(92, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%135) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%135)
//│     in x%13
//│ )
//│ Def(96, foo$M%0$D%10$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(100, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%132], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%150,x%151) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%132)
//│   in x%150,x%151
//│ )
//│ Def(102, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%153) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%153)
//│     in x%13
//│ )
//│ Def(106, foo$M%0$D%12$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(107, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%150], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%156,x%157) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%150)
//│   in x%156,x%157
//│ )
//│ Def(109, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%159) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%159)
//│     in x%13
//│ )
//│ Def(116, foo$M%0$D%14$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(120, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%156], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%178,x%179) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%156)
//│   in x%178,x%179
//│ )
//│ Def(122, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%181) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%181)
//│     in x%13
//│ )
//│ Def(126, foo$M%0$D%16$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(130, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%178], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%184,x%185) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%178)
//│   in x%184,x%185
//│ )
//│ Def(132, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%187) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%187)
//│     in x%13
//│ )
//│ Def(136, foo$M%0$D%18$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(140, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%184], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%206,x%207) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%184)
//│   in x%206,x%207
//│ )
//│ Def(142, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%209) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%209)
//│     in x%13
//│ )
//│ Def(146, foo$M%0$D%20$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(147, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%206], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%212,x%213) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%206)
//│   in x%212,x%213
//│ )
//│ Def(148, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0, [x%212], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(S)))],
//│ Rec: Some(6),
//│ 1, 
//│ let* (x%234,x%235) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%212)
//│   in if x%235
//│     true => let* (x%236) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0(x%234)
//│       in let x%13 = S(x%236)
//│         in x%13
//│     false => let* (x%237) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│       in let x%13 = S(x%237)
//│         in x%13
//│ )
//│ Def(149, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%215) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%215)
//│     in x%13
//│ )
//│ Def(156, foo$M%0$D%22$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ },
//│ let* (x%18) = foo()
//│   in x%18)
//│ 
//│ Optimized ------------------------------
//│ GOProgram({ClassInfo(0, True, []),ClassInfo(1, False, []),ClassInfo(2, S, [s]),ClassInfo(3, O, [])}, {
//│ Def(2, even, [x%5], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(15),
//│ 1, 
//│ case x%5 of
//│   O => let x%6 = True()
//│     in x%6
//│   S => let x%7 = x%5.s
//│     in case x%7 of
//│       S => let x%68 = x%7.s
//│         in let* (x%58) = odd$D%1$S%0(x%68)
//│           in x%58
//│       O => let x%1 = False()
//│         in x%1
//│ )
//│ Def(6, foo, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%19,x%20) = mk$P%0(10)
//│   in if x%20
//│     true => let* (x%35,x%36) = mk$D%0$P%0(x%19)
//│       in if x%36
//│         true => let* (x%53,x%54) = mk$D%0$D%0$P%0(x%35)
//│           in if x%54
//│             true => let* (x%71,x%72) = mk$D%0$D%0$D%0$P%0(x%53)
//│               in if x%72
//│                 true => let* (x%86,x%87) = mk$D%0$D%0$D%0$D%0$P%0(x%71)
//│                   in if x%87
//│                     true => let* (x%104,x%105) = mk$D%0$D%0$D%0$D%0$D%0$P%0(x%86)
//│                       in if x%105
//│                         true => let* (x%118,x%119) = mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%104)
//│                           in if x%119
//│                             true => let* (x%128,x%129) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%118)
//│                               in if x%129
//│                                 true => let* (x%142,x%143) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%128)
//│                                   in if x%143
//│                                     true => let* (x%160,x%161) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%142)
//│                                       in if x%161
//│                                         true => let* (x%174,x%175) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%160)
//│                                           in if x%175
//│                                             true => let* (x%188,x%189) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%174)
//│                                               in if x%189
//│                                                 true => let* (x%202,x%203) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%188)
//│                                                   in if x%203
//│                                                     true => let* (x%216,x%217) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%202)
//│                                                       in if x%217
//│                                                         true => let* (x%230,x%231) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%216)
//│                                                           in if x%231
//│                                                             true => let* (x%240,x%241) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%230)
//│                                                               in if x%241
//│                                                                 true => let* (x%242) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0(x%240)
//│                                                                   in jump foo$M%0(x%242)
//│                                                                 false => let* (x%243) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                                   in jump foo$M%0(x%243)
//│                                                             false => let* (x%233) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                               in let x%252 = x%233.s
//│                                                                 in jump foo$M%0$D%24$S%0(x%252)
//│                                                         false => let* (x%219) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                           in let x%238 = x%219.s
//│                                                             in jump foo$M%0$D%22$S%0(x%238)
//│                                                     false => let* (x%205) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                       in let x%224 = x%205.s
//│                                                         in jump foo$M%0$D%20$S%0(x%224)
//│                                                 false => let* (x%191) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                   in let x%210 = x%191.s
//│                                                     in jump foo$M%0$D%18$S%0(x%210)
//│                                             false => let* (x%177) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                               in let x%196 = x%177.s
//│                                                 in jump foo$M%0$D%16$S%0(x%196)
//│                                         false => let* (x%163) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                           in let x%182 = x%163.s
//│                                             in jump foo$M%0$D%14$S%0(x%182)
//│                                     false => let* (x%145) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                       in let x%168 = x%145.s
//│                                         in jump foo$M%0$D%12$S%0(x%168)
//│                                 false => let* (x%131) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                   in let x%154 = x%131.s
//│                                     in jump foo$M%0$D%10$S%0(x%154)
//│                             false => let* (x%121) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                               in let x%140 = x%121.s
//│                                 in jump foo$M%0$D%8$S%0(x%140)
//│                         false => let* (x%107) = mk$D%0$D%0$D%0$D%0$D%0$D%1()
//│                           in let x%126 = x%107.s
//│                             in jump foo$M%0$D%6$S%0(x%126)
//│                     false => let* (x%89) = mk$D%0$D%0$D%0$D%0$D%1()
//│                       in let x%112 = x%89.s
//│                         in jump foo$M%0$D%4$S%0(x%112)
//│                 false => let* (x%74) = mk$D%0$D%0$D%0$D%1()
//│                   in let x%98 = x%74.s
//│                     in jump foo$M%0$D%2$S%0(x%98)
//│             false => let* (x%56) = mk$D%0$D%0$D%1()
//│               in let x%83 = x%56.s
//│                 in jump foo$M%0$D%0$S%0(x%83)
//│         false => let* (x%38) = mk$D%0$D%1()
//│           in let x%84 = x%38.s
//│             in jump foo$M%0$D%0$S%0(x%84)
//│     false => let x%1 = False()
//│       in x%1
//│ )
//│ Def(7, mk$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%10 = >(n%0,0)
//│   in n%0,x%10
//│ )
//│ Def(10, @join foo$M%0, [x%16], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [[Some(ICtor(S))],[Some(IMix(ICtor(S)))]],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ case x%16 of
//│   S => let x%67 = x%16.s
//│     in let* (x%47) = odd$D%1$S%0(x%67)
//│       in x%47
//│   O => let x%1 = False()
//│     in x%1
//│ )
//│ Def(13, mk$D%0$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%11 = -(n%0,1)
//│   in let* (x%23,x%24) = mk$P%0(x%11)
//│     in x%23,x%24
//│ )
//│ Def(15, mk$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let x%14 = O()
//│   in let x%13 = S(x%14)
//│     in x%13
//│ )
//│ Def(24, mk$D%0$D%0$P%0, [x%23], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%31,x%32) = mk$D%0$P%0(x%23)
//│   in x%31,x%32
//│ )
//│ Def(26, mk$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%34) = mk$D%0$D%1()
//│   in let x%13 = S(x%34)
//│     in x%13
//│ )
//│ Def(36, odd$D%1$S%0, [x%0_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(15),
//│ 1, 
//│ let* (x%3) = even(x%0_s)
//│   in x%3
//│ )
//│ Def(40, mk$D%0$D%0$D%0$P%0, [x%31], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%60,x%61) = mk$D%0$D%0$P%0(x%31)
//│   in x%60,x%61
//│ )
//│ Def(42, mk$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%63) = mk$D%0$D%0$D%1()
//│   in let x%13 = S(x%63)
//│     in x%13
//│ )
//│ Def(46, foo$M%0$D%0$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(50, mk$D%0$D%0$D%0$D%0$P%0, [x%60], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%79,x%80) = mk$D%0$D%0$D%0$P%0(x%60)
//│   in x%79,x%80
//│ )
//│ Def(52, mk$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%82) = mk$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%82)
//│     in x%13
//│ )
//│ Def(56, foo$M%0$D%2$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(60, mk$D%0$D%0$D%0$D%0$D%0$P%0, [x%79], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%94,x%95) = mk$D%0$D%0$D%0$D%0$P%0(x%79)
//│   in x%94,x%95
//│ )
//│ Def(62, mk$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%97) = mk$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%97)
//│     in x%13
//│ )
//│ Def(66, foo$M%0$D%4$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(67, mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%94], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%100,x%101) = mk$D%0$D%0$D%0$D%0$D%0$P%0(x%94)
//│   in x%100,x%101
//│ )
//│ Def(69, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%103) = mk$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%103)
//│     in x%13
//│ )
//│ Def(76, foo$M%0$D%6$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(80, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%100], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%122,x%123) = mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%100)
//│   in x%122,x%123
//│ )
//│ Def(82, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%125) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%125)
//│     in x%13
//│ )
//│ Def(86, foo$M%0$D%8$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(90, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%122], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%132,x%133) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%122)
//│   in x%132,x%133
//│ )
//│ Def(92, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%135) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%135)
//│     in x%13
//│ )
//│ Def(96, foo$M%0$D%10$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(100, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%132], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%150,x%151) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%132)
//│   in x%150,x%151
//│ )
//│ Def(102, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%153) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%153)
//│     in x%13
//│ )
//│ Def(106, foo$M%0$D%12$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(107, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%150], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%156,x%157) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%150)
//│   in x%156,x%157
//│ )
//│ Def(109, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%159) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%159)
//│     in x%13
//│ )
//│ Def(116, foo$M%0$D%14$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(120, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%156], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%178,x%179) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%156)
//│   in x%178,x%179
//│ )
//│ Def(122, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%181) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%181)
//│     in x%13
//│ )
//│ Def(126, foo$M%0$D%16$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(130, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%178], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%184,x%185) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%178)
//│   in x%184,x%185
//│ )
//│ Def(132, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%187) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%187)
//│     in x%13
//│ )
//│ Def(136, foo$M%0$D%18$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(140, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%184], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%206,x%207) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%184)
//│   in x%206,x%207
//│ )
//│ Def(142, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%209) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%209)
//│     in x%13
//│ )
//│ Def(146, foo$M%0$D%20$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(147, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%206], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%212,x%213) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%206)
//│   in x%212,x%213
//│ )
//│ Def(149, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%215) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%215)
//│     in x%13
//│ )
//│ Def(156, foo$M%0$D%22$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(160, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%212], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%234,x%235) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%212)
//│   in x%234,x%235
//│ )
//│ Def(161, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0, [x%234], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(S)))],
//│ Rec: Some(16),
//│ 1, 
//│ let* (x%248,x%249) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%234)
//│   in if x%249
//│     true => let* (x%250) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0(x%248)
//│       in let x%13 = S(x%250)
//│         in x%13
//│     false => let* (x%251) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│       in let x%13 = S(x%251)
//│         in x%13
//│ )
//│ Def(162, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%237) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%237)
//│     in x%13
//│ )
//│ Def(166, foo$M%0$D%24$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ },
//│ let* (x%18) = foo()
//│   in x%18)
//│ 
//│ Optimized ------------------------------
//│ GOProgram({ClassInfo(0, True, []),ClassInfo(1, False, []),ClassInfo(2, S, [s]),ClassInfo(3, O, [])}, {
//│ Def(2, even, [x%5], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(32),
//│ 1, 
//│ case x%5 of
//│   O => let x%6 = True()
//│     in x%6
//│   S => let x%7 = x%5.s
//│     in case x%7 of
//│       S => let x%68 = x%7.s
//│         in let* (x%58) = odd$D%1$S%0(x%68)
//│           in x%58
//│       O => let x%1 = False()
//│         in x%1
//│ )
//│ Def(6, foo, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%19,x%20) = mk$P%0(10)
//│   in if x%20
//│     true => let* (x%35,x%36) = mk$D%0$P%0(x%19)
//│       in if x%36
//│         true => let* (x%53,x%54) = mk$D%0$D%0$P%0(x%35)
//│           in if x%54
//│             true => let* (x%71,x%72) = mk$D%0$D%0$D%0$P%0(x%53)
//│               in if x%72
//│                 true => let* (x%86,x%87) = mk$D%0$D%0$D%0$D%0$P%0(x%71)
//│                   in if x%87
//│                     true => let* (x%104,x%105) = mk$D%0$D%0$D%0$D%0$D%0$P%0(x%86)
//│                       in if x%105
//│                         true => let* (x%118,x%119) = mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%104)
//│                           in if x%119
//│                             true => let* (x%128,x%129) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%118)
//│                               in if x%129
//│                                 true => let* (x%142,x%143) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%128)
//│                                   in if x%143
//│                                     true => let* (x%160,x%161) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%142)
//│                                       in if x%161
//│                                         true => let* (x%174,x%175) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%160)
//│                                           in if x%175
//│                                             true => let* (x%188,x%189) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%174)
//│                                               in if x%189
//│                                                 true => let* (x%202,x%203) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%188)
//│                                                   in if x%203
//│                                                     true => let* (x%216,x%217) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%202)
//│                                                       in if x%217
//│                                                         true => let* (x%230,x%231) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%216)
//│                                                           in if x%231
//│                                                             true => let* (x%240,x%241) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%230)
//│                                                               in if x%241
//│                                                                 true => let* (x%254,x%255) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%240)
//│                                                                   in if x%255
//│                                                                     true => let* (x%256) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0(x%254)
//│                                                                       in jump foo$M%0(x%256)
//│                                                                     false => let* (x%257) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                                       in jump foo$M%0(x%257)
//│                                                                 false => let* (x%243) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                                   in let x%266 = x%243.s
//│                                                                     in jump foo$M%0$D%26$S%0(x%266)
//│                                                             false => let* (x%233) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                               in let x%252 = x%233.s
//│                                                                 in jump foo$M%0$D%24$S%0(x%252)
//│                                                         false => let* (x%219) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                           in let x%238 = x%219.s
//│                                                             in jump foo$M%0$D%22$S%0(x%238)
//│                                                     false => let* (x%205) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                       in let x%224 = x%205.s
//│                                                         in jump foo$M%0$D%20$S%0(x%224)
//│                                                 false => let* (x%191) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                   in let x%210 = x%191.s
//│                                                     in jump foo$M%0$D%18$S%0(x%210)
//│                                             false => let* (x%177) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                               in let x%196 = x%177.s
//│                                                 in jump foo$M%0$D%16$S%0(x%196)
//│                                         false => let* (x%163) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                           in let x%182 = x%163.s
//│                                             in jump foo$M%0$D%14$S%0(x%182)
//│                                     false => let* (x%145) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                       in let x%168 = x%145.s
//│                                         in jump foo$M%0$D%12$S%0(x%168)
//│                                 false => let* (x%131) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                   in let x%154 = x%131.s
//│                                     in jump foo$M%0$D%10$S%0(x%154)
//│                             false => let* (x%121) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                               in let x%140 = x%121.s
//│                                 in jump foo$M%0$D%8$S%0(x%140)
//│                         false => let* (x%107) = mk$D%0$D%0$D%0$D%0$D%0$D%1()
//│                           in let x%126 = x%107.s
//│                             in jump foo$M%0$D%6$S%0(x%126)
//│                     false => let* (x%89) = mk$D%0$D%0$D%0$D%0$D%1()
//│                       in let x%112 = x%89.s
//│                         in jump foo$M%0$D%4$S%0(x%112)
//│                 false => let* (x%74) = mk$D%0$D%0$D%0$D%1()
//│                   in let x%98 = x%74.s
//│                     in jump foo$M%0$D%2$S%0(x%98)
//│             false => let* (x%56) = mk$D%0$D%0$D%1()
//│               in let x%83 = x%56.s
//│                 in jump foo$M%0$D%0$S%0(x%83)
//│         false => let* (x%38) = mk$D%0$D%1()
//│           in let x%84 = x%38.s
//│             in jump foo$M%0$D%0$S%0(x%84)
//│     false => let x%1 = False()
//│       in x%1
//│ )
//│ Def(7, mk$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%10 = >(n%0,0)
//│   in n%0,x%10
//│ )
//│ Def(10, @join foo$M%0, [x%16], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [[Some(IMix(ICtor(S)))],[Some(ICtor(S))]],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ case x%16 of
//│   S => let x%67 = x%16.s
//│     in let* (x%47) = odd$D%1$S%0(x%67)
//│       in x%47
//│   O => let x%1 = False()
//│     in x%1
//│ )
//│ Def(13, mk$D%0$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%11 = -(n%0,1)
//│   in let* (x%23,x%24) = mk$P%0(x%11)
//│     in x%23,x%24
//│ )
//│ Def(15, mk$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let x%14 = O()
//│   in let x%13 = S(x%14)
//│     in x%13
//│ )
//│ Def(24, mk$D%0$D%0$P%0, [x%23], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%31,x%32) = mk$D%0$P%0(x%23)
//│   in x%31,x%32
//│ )
//│ Def(26, mk$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%34) = mk$D%0$D%1()
//│   in let x%13 = S(x%34)
//│     in x%13
//│ )
//│ Def(36, odd$D%1$S%0, [x%0_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(32),
//│ 1, 
//│ let* (x%3) = even(x%0_s)
//│   in x%3
//│ )
//│ Def(40, mk$D%0$D%0$D%0$P%0, [x%31], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%60,x%61) = mk$D%0$D%0$P%0(x%31)
//│   in x%60,x%61
//│ )
//│ Def(42, mk$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%63) = mk$D%0$D%0$D%1()
//│   in let x%13 = S(x%63)
//│     in x%13
//│ )
//│ Def(46, foo$M%0$D%0$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(50, mk$D%0$D%0$D%0$D%0$P%0, [x%60], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%79,x%80) = mk$D%0$D%0$D%0$P%0(x%60)
//│   in x%79,x%80
//│ )
//│ Def(52, mk$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%82) = mk$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%82)
//│     in x%13
//│ )
//│ Def(56, foo$M%0$D%2$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(60, mk$D%0$D%0$D%0$D%0$D%0$P%0, [x%79], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%94,x%95) = mk$D%0$D%0$D%0$D%0$P%0(x%79)
//│   in x%94,x%95
//│ )
//│ Def(62, mk$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%97) = mk$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%97)
//│     in x%13
//│ )
//│ Def(66, foo$M%0$D%4$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(67, mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%94], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%100,x%101) = mk$D%0$D%0$D%0$D%0$D%0$P%0(x%94)
//│   in x%100,x%101
//│ )
//│ Def(69, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%103) = mk$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%103)
//│     in x%13
//│ )
//│ Def(76, foo$M%0$D%6$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(80, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%100], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%122,x%123) = mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%100)
//│   in x%122,x%123
//│ )
//│ Def(82, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%125) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%125)
//│     in x%13
//│ )
//│ Def(86, foo$M%0$D%8$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(90, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%122], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%132,x%133) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%122)
//│   in x%132,x%133
//│ )
//│ Def(92, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%135) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%135)
//│     in x%13
//│ )
//│ Def(96, foo$M%0$D%10$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(100, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%132], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%150,x%151) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%132)
//│   in x%150,x%151
//│ )
//│ Def(102, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%153) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%153)
//│     in x%13
//│ )
//│ Def(106, foo$M%0$D%12$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(107, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%150], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%156,x%157) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%150)
//│   in x%156,x%157
//│ )
//│ Def(109, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%159) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%159)
//│     in x%13
//│ )
//│ Def(116, foo$M%0$D%14$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(120, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%156], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%178,x%179) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%156)
//│   in x%178,x%179
//│ )
//│ Def(122, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%181) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%181)
//│     in x%13
//│ )
//│ Def(126, foo$M%0$D%16$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(130, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%178], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%184,x%185) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%178)
//│   in x%184,x%185
//│ )
//│ Def(132, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%187) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%187)
//│     in x%13
//│ )
//│ Def(136, foo$M%0$D%18$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(140, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%184], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%206,x%207) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%184)
//│   in x%206,x%207
//│ )
//│ Def(142, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%209) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%209)
//│     in x%13
//│ )
//│ Def(146, foo$M%0$D%20$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(147, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%206], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%212,x%213) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%206)
//│   in x%212,x%213
//│ )
//│ Def(149, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%215) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%215)
//│     in x%13
//│ )
//│ Def(156, foo$M%0$D%22$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(160, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%212], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%234,x%235) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%212)
//│   in x%234,x%235
//│ )
//│ Def(162, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%237) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%237)
//│     in x%13
//│ )
//│ Def(166, foo$M%0$D%24$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(170, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%234], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%248,x%249) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%234)
//│   in x%248,x%249
//│ )
//│ Def(171, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0, [x%248], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(S)))],
//│ Rec: Some(7),
//│ 1, 
//│ let* (x%262,x%263) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%248)
//│   in if x%263
//│     true => let* (x%264) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0(x%262)
//│       in let x%13 = S(x%264)
//│         in x%13
//│     false => let* (x%265) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│       in let x%13 = S(x%265)
//│         in x%13
//│ )
//│ Def(172, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%251) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%251)
//│     in x%13
//│ )
//│ Def(176, foo$M%0$D%26$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ },
//│ let* (x%18) = foo()
//│   in x%18)
//│ 
//│ Optimized ------------------------------
//│ GOProgram({ClassInfo(0, True, []),ClassInfo(1, False, []),ClassInfo(2, S, [s]),ClassInfo(3, O, [])}, {
//│ Def(2, even, [x%5], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(35),
//│ 1, 
//│ case x%5 of
//│   O => let x%6 = True()
//│     in x%6
//│   S => let x%7 = x%5.s
//│     in case x%7 of
//│       S => let x%68 = x%7.s
//│         in let* (x%58) = odd$D%1$S%0(x%68)
//│           in x%58
//│       O => let x%1 = False()
//│         in x%1
//│ )
//│ Def(6, foo, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%19,x%20) = mk$P%0(10)
//│   in if x%20
//│     true => let* (x%35,x%36) = mk$D%0$P%0(x%19)
//│       in if x%36
//│         true => let* (x%53,x%54) = mk$D%0$D%0$P%0(x%35)
//│           in if x%54
//│             true => let* (x%71,x%72) = mk$D%0$D%0$D%0$P%0(x%53)
//│               in if x%72
//│                 true => let* (x%86,x%87) = mk$D%0$D%0$D%0$D%0$P%0(x%71)
//│                   in if x%87
//│                     true => let* (x%104,x%105) = mk$D%0$D%0$D%0$D%0$D%0$P%0(x%86)
//│                       in if x%105
//│                         true => let* (x%118,x%119) = mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%104)
//│                           in if x%119
//│                             true => let* (x%128,x%129) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%118)
//│                               in if x%129
//│                                 true => let* (x%142,x%143) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%128)
//│                                   in if x%143
//│                                     true => let* (x%160,x%161) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%142)
//│                                       in if x%161
//│                                         true => let* (x%174,x%175) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%160)
//│                                           in if x%175
//│                                             true => let* (x%188,x%189) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%174)
//│                                               in if x%189
//│                                                 true => let* (x%202,x%203) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%188)
//│                                                   in if x%203
//│                                                     true => let* (x%216,x%217) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%202)
//│                                                       in if x%217
//│                                                         true => let* (x%230,x%231) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%216)
//│                                                           in if x%231
//│                                                             true => let* (x%240,x%241) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%230)
//│                                                               in if x%241
//│                                                                 true => let* (x%254,x%255) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%240)
//│                                                                   in if x%255
//│                                                                     true => let* (x%268,x%269) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%254)
//│                                                                       in if x%269
//│                                                                         true => let* (x%270) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0(x%268)
//│                                                                           in jump foo$M%0(x%270)
//│                                                                         false => let* (x%271) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                                           in jump foo$M%0(x%271)
//│                                                                     false => let* (x%257) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                                       in let x%280 = x%257.s
//│                                                                         in jump foo$M%0$D%28$S%0(x%280)
//│                                                                 false => let* (x%243) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                                   in let x%266 = x%243.s
//│                                                                     in jump foo$M%0$D%26$S%0(x%266)
//│                                                             false => let* (x%233) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                               in let x%252 = x%233.s
//│                                                                 in jump foo$M%0$D%24$S%0(x%252)
//│                                                         false => let* (x%219) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                           in let x%238 = x%219.s
//│                                                             in jump foo$M%0$D%22$S%0(x%238)
//│                                                     false => let* (x%205) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                       in let x%224 = x%205.s
//│                                                         in jump foo$M%0$D%20$S%0(x%224)
//│                                                 false => let* (x%191) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                   in let x%210 = x%191.s
//│                                                     in jump foo$M%0$D%18$S%0(x%210)
//│                                             false => let* (x%177) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                               in let x%196 = x%177.s
//│                                                 in jump foo$M%0$D%16$S%0(x%196)
//│                                         false => let* (x%163) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                           in let x%182 = x%163.s
//│                                             in jump foo$M%0$D%14$S%0(x%182)
//│                                     false => let* (x%145) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                       in let x%168 = x%145.s
//│                                         in jump foo$M%0$D%12$S%0(x%168)
//│                                 false => let* (x%131) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                   in let x%154 = x%131.s
//│                                     in jump foo$M%0$D%10$S%0(x%154)
//│                             false => let* (x%121) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                               in let x%140 = x%121.s
//│                                 in jump foo$M%0$D%8$S%0(x%140)
//│                         false => let* (x%107) = mk$D%0$D%0$D%0$D%0$D%0$D%1()
//│                           in let x%126 = x%107.s
//│                             in jump foo$M%0$D%6$S%0(x%126)
//│                     false => let* (x%89) = mk$D%0$D%0$D%0$D%0$D%1()
//│                       in let x%112 = x%89.s
//│                         in jump foo$M%0$D%4$S%0(x%112)
//│                 false => let* (x%74) = mk$D%0$D%0$D%0$D%1()
//│                   in let x%98 = x%74.s
//│                     in jump foo$M%0$D%2$S%0(x%98)
//│             false => let* (x%56) = mk$D%0$D%0$D%1()
//│               in let x%83 = x%56.s
//│                 in jump foo$M%0$D%0$S%0(x%83)
//│         false => let* (x%38) = mk$D%0$D%1()
//│           in let x%84 = x%38.s
//│             in jump foo$M%0$D%0$S%0(x%84)
//│     false => let x%1 = False()
//│       in x%1
//│ )
//│ Def(7, mk$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%10 = >(n%0,0)
//│   in n%0,x%10
//│ )
//│ Def(10, @join foo$M%0, [x%16], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [[Some(IMix(ICtor(S)))],[Some(ICtor(S))]],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ case x%16 of
//│   S => let x%67 = x%16.s
//│     in let* (x%47) = odd$D%1$S%0(x%67)
//│       in x%47
//│   O => let x%1 = False()
//│     in x%1
//│ )
//│ Def(13, mk$D%0$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%11 = -(n%0,1)
//│   in let* (x%23,x%24) = mk$P%0(x%11)
//│     in x%23,x%24
//│ )
//│ Def(15, mk$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let x%14 = O()
//│   in let x%13 = S(x%14)
//│     in x%13
//│ )
//│ Def(24, mk$D%0$D%0$P%0, [x%23], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%31,x%32) = mk$D%0$P%0(x%23)
//│   in x%31,x%32
//│ )
//│ Def(26, mk$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%34) = mk$D%0$D%1()
//│   in let x%13 = S(x%34)
//│     in x%13
//│ )
//│ Def(36, odd$D%1$S%0, [x%0_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(35),
//│ 1, 
//│ let* (x%3) = even(x%0_s)
//│   in x%3
//│ )
//│ Def(40, mk$D%0$D%0$D%0$P%0, [x%31], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%60,x%61) = mk$D%0$D%0$P%0(x%31)
//│   in x%60,x%61
//│ )
//│ Def(42, mk$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%63) = mk$D%0$D%0$D%1()
//│   in let x%13 = S(x%63)
//│     in x%13
//│ )
//│ Def(46, foo$M%0$D%0$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(50, mk$D%0$D%0$D%0$D%0$P%0, [x%60], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%79,x%80) = mk$D%0$D%0$D%0$P%0(x%60)
//│   in x%79,x%80
//│ )
//│ Def(52, mk$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%82) = mk$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%82)
//│     in x%13
//│ )
//│ Def(56, foo$M%0$D%2$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(60, mk$D%0$D%0$D%0$D%0$D%0$P%0, [x%79], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%94,x%95) = mk$D%0$D%0$D%0$D%0$P%0(x%79)
//│   in x%94,x%95
//│ )
//│ Def(62, mk$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%97) = mk$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%97)
//│     in x%13
//│ )
//│ Def(66, foo$M%0$D%4$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(67, mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%94], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%100,x%101) = mk$D%0$D%0$D%0$D%0$D%0$P%0(x%94)
//│   in x%100,x%101
//│ )
//│ Def(69, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%103) = mk$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%103)
//│     in x%13
//│ )
//│ Def(76, foo$M%0$D%6$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(80, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%100], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%122,x%123) = mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%100)
//│   in x%122,x%123
//│ )
//│ Def(82, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%125) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%125)
//│     in x%13
//│ )
//│ Def(86, foo$M%0$D%8$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(90, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%122], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%132,x%133) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%122)
//│   in x%132,x%133
//│ )
//│ Def(92, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%135) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%135)
//│     in x%13
//│ )
//│ Def(96, foo$M%0$D%10$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(100, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%132], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%150,x%151) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%132)
//│   in x%150,x%151
//│ )
//│ Def(102, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%153) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%153)
//│     in x%13
//│ )
//│ Def(106, foo$M%0$D%12$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(107, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%150], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%156,x%157) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%150)
//│   in x%156,x%157
//│ )
//│ Def(109, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%159) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%159)
//│     in x%13
//│ )
//│ Def(116, foo$M%0$D%14$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(120, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%156], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%178,x%179) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%156)
//│   in x%178,x%179
//│ )
//│ Def(122, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%181) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%181)
//│     in x%13
//│ )
//│ Def(126, foo$M%0$D%16$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(130, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%178], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%184,x%185) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%178)
//│   in x%184,x%185
//│ )
//│ Def(132, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%187) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%187)
//│     in x%13
//│ )
//│ Def(136, foo$M%0$D%18$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(140, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%184], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%206,x%207) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%184)
//│   in x%206,x%207
//│ )
//│ Def(142, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%209) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%209)
//│     in x%13
//│ )
//│ Def(146, foo$M%0$D%20$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(147, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%206], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%212,x%213) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%206)
//│   in x%212,x%213
//│ )
//│ Def(149, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%215) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%215)
//│     in x%13
//│ )
//│ Def(156, foo$M%0$D%22$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(160, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%212], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%234,x%235) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%212)
//│   in x%234,x%235
//│ )
//│ Def(162, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%237) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%237)
//│     in x%13
//│ )
//│ Def(166, foo$M%0$D%24$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(170, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%234], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%248,x%249) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%234)
//│   in x%248,x%249
//│ )
//│ Def(172, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%251) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%251)
//│     in x%13
//│ )
//│ Def(176, foo$M%0$D%26$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(180, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%248], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%262,x%263) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%248)
//│   in x%262,x%263
//│ )
//│ Def(181, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0, [x%262], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(S)))],
//│ Rec: Some(3),
//│ 1, 
//│ let* (x%272,x%273) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%262)
//│   in if x%273
//│     true => let* (x%274) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0(x%272)
//│       in let x%13 = S(x%274)
//│         in x%13
//│     false => let* (x%275) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│       in let x%13 = S(x%275)
//│         in x%13
//│ )
//│ Def(182, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%265) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%265)
//│     in x%13
//│ )
//│ Def(186, foo$M%0$D%28$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ },
//│ let* (x%18) = foo()
//│   in x%18)
//│ 
//│ Optimized ------------------------------
//│ GOProgram({ClassInfo(0, True, []),ClassInfo(1, False, []),ClassInfo(2, S, [s]),ClassInfo(3, O, [])}, {
//│ Def(2, even, [x%5], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(38),
//│ 1, 
//│ case x%5 of
//│   O => let x%6 = True()
//│     in x%6
//│   S => let x%7 = x%5.s
//│     in case x%7 of
//│       S => let x%68 = x%7.s
//│         in let* (x%58) = odd$D%1$S%0(x%68)
//│           in x%58
//│       O => let x%1 = False()
//│         in x%1
//│ )
//│ Def(6, foo, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%19,x%20) = mk$P%0(10)
//│   in if x%20
//│     true => let* (x%35,x%36) = mk$D%0$P%0(x%19)
//│       in if x%36
//│         true => let* (x%53,x%54) = mk$D%0$D%0$P%0(x%35)
//│           in if x%54
//│             true => let* (x%71,x%72) = mk$D%0$D%0$D%0$P%0(x%53)
//│               in if x%72
//│                 true => let* (x%86,x%87) = mk$D%0$D%0$D%0$D%0$P%0(x%71)
//│                   in if x%87
//│                     true => let* (x%104,x%105) = mk$D%0$D%0$D%0$D%0$D%0$P%0(x%86)
//│                       in if x%105
//│                         true => let* (x%118,x%119) = mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%104)
//│                           in if x%119
//│                             true => let* (x%128,x%129) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%118)
//│                               in if x%129
//│                                 true => let* (x%142,x%143) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%128)
//│                                   in if x%143
//│                                     true => let* (x%160,x%161) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%142)
//│                                       in if x%161
//│                                         true => let* (x%174,x%175) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%160)
//│                                           in if x%175
//│                                             true => let* (x%188,x%189) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%174)
//│                                               in if x%189
//│                                                 true => let* (x%202,x%203) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%188)
//│                                                   in if x%203
//│                                                     true => let* (x%216,x%217) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%202)
//│                                                       in if x%217
//│                                                         true => let* (x%230,x%231) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%216)
//│                                                           in if x%231
//│                                                             true => let* (x%240,x%241) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%230)
//│                                                               in if x%241
//│                                                                 true => let* (x%254,x%255) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%240)
//│                                                                   in if x%255
//│                                                                     true => let* (x%268,x%269) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%254)
//│                                                                       in if x%269
//│                                                                         true => let* (x%282,x%283) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%268)
//│                                                                           in if x%283
//│                                                                             true => let* (x%284) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0(x%282)
//│                                                                               in jump foo$M%0(x%284)
//│                                                                             false => let* (x%285) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                                               in jump foo$M%0(x%285)
//│                                                                         false => let* (x%271) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                                           in let x%294 = x%271.s
//│                                                                             in jump foo$M%0$D%30$S%0(x%294)
//│                                                                     false => let* (x%257) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                                       in let x%280 = x%257.s
//│                                                                         in jump foo$M%0$D%28$S%0(x%280)
//│                                                                 false => let* (x%243) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                                   in let x%266 = x%243.s
//│                                                                     in jump foo$M%0$D%26$S%0(x%266)
//│                                                             false => let* (x%233) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                               in let x%252 = x%233.s
//│                                                                 in jump foo$M%0$D%24$S%0(x%252)
//│                                                         false => let* (x%219) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                           in let x%238 = x%219.s
//│                                                             in jump foo$M%0$D%22$S%0(x%238)
//│                                                     false => let* (x%205) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                       in let x%224 = x%205.s
//│                                                         in jump foo$M%0$D%20$S%0(x%224)
//│                                                 false => let* (x%191) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                   in let x%210 = x%191.s
//│                                                     in jump foo$M%0$D%18$S%0(x%210)
//│                                             false => let* (x%177) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                               in let x%196 = x%177.s
//│                                                 in jump foo$M%0$D%16$S%0(x%196)
//│                                         false => let* (x%163) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                           in let x%182 = x%163.s
//│                                             in jump foo$M%0$D%14$S%0(x%182)
//│                                     false => let* (x%145) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                       in let x%168 = x%145.s
//│                                         in jump foo$M%0$D%12$S%0(x%168)
//│                                 false => let* (x%131) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                   in let x%154 = x%131.s
//│                                     in jump foo$M%0$D%10$S%0(x%154)
//│                             false => let* (x%121) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                               in let x%140 = x%121.s
//│                                 in jump foo$M%0$D%8$S%0(x%140)
//│                         false => let* (x%107) = mk$D%0$D%0$D%0$D%0$D%0$D%1()
//│                           in let x%126 = x%107.s
//│                             in jump foo$M%0$D%6$S%0(x%126)
//│                     false => let* (x%89) = mk$D%0$D%0$D%0$D%0$D%1()
//│                       in let x%112 = x%89.s
//│                         in jump foo$M%0$D%4$S%0(x%112)
//│                 false => let* (x%74) = mk$D%0$D%0$D%0$D%1()
//│                   in let x%98 = x%74.s
//│                     in jump foo$M%0$D%2$S%0(x%98)
//│             false => let* (x%56) = mk$D%0$D%0$D%1()
//│               in let x%83 = x%56.s
//│                 in jump foo$M%0$D%0$S%0(x%83)
//│         false => let* (x%38) = mk$D%0$D%1()
//│           in let x%84 = x%38.s
//│             in jump foo$M%0$D%0$S%0(x%84)
//│     false => let x%1 = False()
//│       in x%1
//│ )
//│ Def(7, mk$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%10 = >(n%0,0)
//│   in n%0,x%10
//│ )
//│ Def(10, @join foo$M%0, [x%16], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [[Some(IMix(ICtor(S)))],[Some(ICtor(S))]],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ case x%16 of
//│   S => let x%67 = x%16.s
//│     in let* (x%47) = odd$D%1$S%0(x%67)
//│       in x%47
//│   O => let x%1 = False()
//│     in x%1
//│ )
//│ Def(13, mk$D%0$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%11 = -(n%0,1)
//│   in let* (x%23,x%24) = mk$P%0(x%11)
//│     in x%23,x%24
//│ )
//│ Def(15, mk$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let x%14 = O()
//│   in let x%13 = S(x%14)
//│     in x%13
//│ )
//│ Def(24, mk$D%0$D%0$P%0, [x%23], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%31,x%32) = mk$D%0$P%0(x%23)
//│   in x%31,x%32
//│ )
//│ Def(26, mk$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%34) = mk$D%0$D%1()
//│   in let x%13 = S(x%34)
//│     in x%13
//│ )
//│ Def(36, odd$D%1$S%0, [x%0_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(38),
//│ 1, 
//│ let* (x%3) = even(x%0_s)
//│   in x%3
//│ )
//│ Def(40, mk$D%0$D%0$D%0$P%0, [x%31], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%60,x%61) = mk$D%0$D%0$P%0(x%31)
//│   in x%60,x%61
//│ )
//│ Def(42, mk$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%63) = mk$D%0$D%0$D%1()
//│   in let x%13 = S(x%63)
//│     in x%13
//│ )
//│ Def(46, foo$M%0$D%0$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(50, mk$D%0$D%0$D%0$D%0$P%0, [x%60], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%79,x%80) = mk$D%0$D%0$D%0$P%0(x%60)
//│   in x%79,x%80
//│ )
//│ Def(52, mk$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%82) = mk$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%82)
//│     in x%13
//│ )
//│ Def(56, foo$M%0$D%2$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(60, mk$D%0$D%0$D%0$D%0$D%0$P%0, [x%79], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%94,x%95) = mk$D%0$D%0$D%0$D%0$P%0(x%79)
//│   in x%94,x%95
//│ )
//│ Def(62, mk$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%97) = mk$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%97)
//│     in x%13
//│ )
//│ Def(66, foo$M%0$D%4$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(67, mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%94], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%100,x%101) = mk$D%0$D%0$D%0$D%0$D%0$P%0(x%94)
//│   in x%100,x%101
//│ )
//│ Def(69, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%103) = mk$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%103)
//│     in x%13
//│ )
//│ Def(76, foo$M%0$D%6$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(80, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%100], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%122,x%123) = mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%100)
//│   in x%122,x%123
//│ )
//│ Def(82, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%125) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%125)
//│     in x%13
//│ )
//│ Def(86, foo$M%0$D%8$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(90, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%122], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%132,x%133) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%122)
//│   in x%132,x%133
//│ )
//│ Def(92, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%135) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%135)
//│     in x%13
//│ )
//│ Def(96, foo$M%0$D%10$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(100, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%132], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%150,x%151) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%132)
//│   in x%150,x%151
//│ )
//│ Def(102, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%153) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%153)
//│     in x%13
//│ )
//│ Def(106, foo$M%0$D%12$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(107, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%150], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%156,x%157) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%150)
//│   in x%156,x%157
//│ )
//│ Def(109, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%159) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%159)
//│     in x%13
//│ )
//│ Def(116, foo$M%0$D%14$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(120, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%156], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%178,x%179) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%156)
//│   in x%178,x%179
//│ )
//│ Def(122, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%181) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%181)
//│     in x%13
//│ )
//│ Def(126, foo$M%0$D%16$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(130, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%178], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%184,x%185) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%178)
//│   in x%184,x%185
//│ )
//│ Def(132, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%187) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%187)
//│     in x%13
//│ )
//│ Def(136, foo$M%0$D%18$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(140, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%184], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%206,x%207) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%184)
//│   in x%206,x%207
//│ )
//│ Def(142, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%209) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%209)
//│     in x%13
//│ )
//│ Def(146, foo$M%0$D%20$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(147, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%206], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%212,x%213) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%206)
//│   in x%212,x%213
//│ )
//│ Def(149, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%215) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%215)
//│     in x%13
//│ )
//│ Def(156, foo$M%0$D%22$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(160, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%212], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%234,x%235) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%212)
//│   in x%234,x%235
//│ )
//│ Def(162, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%237) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%237)
//│     in x%13
//│ )
//│ Def(166, foo$M%0$D%24$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(170, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%234], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%248,x%249) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%234)
//│   in x%248,x%249
//│ )
//│ Def(172, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%251) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%251)
//│     in x%13
//│ )
//│ Def(176, foo$M%0$D%26$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(180, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%248], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%262,x%263) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%248)
//│   in x%262,x%263
//│ )
//│ Def(182, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%265) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%265)
//│     in x%13
//│ )
//│ Def(186, foo$M%0$D%28$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(190, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%262], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%272,x%273) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%262)
//│   in x%272,x%273
//│ )
//│ Def(191, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0, [x%272], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(S)))],
//│ Rec: Some(5),
//│ 1, 
//│ let* (x%286,x%287) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%272)
//│   in if x%287
//│     true => let* (x%288) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0(x%286)
//│       in let x%13 = S(x%288)
//│         in x%13
//│     false => let* (x%289) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│       in let x%13 = S(x%289)
//│         in x%13
//│ )
//│ Def(192, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%275) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%275)
//│     in x%13
//│ )
//│ Def(196, foo$M%0$D%30$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ },
//│ let* (x%18) = foo()
//│   in x%18)
//│ 
//│ Optimized ------------------------------
//│ GOProgram({ClassInfo(0, True, []),ClassInfo(1, False, []),ClassInfo(2, S, [s]),ClassInfo(3, O, [])}, {
//│ Def(2, even, [x%5], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(41),
//│ 1, 
//│ case x%5 of
//│   O => let x%6 = True()
//│     in x%6
//│   S => let x%7 = x%5.s
//│     in case x%7 of
//│       S => let x%68 = x%7.s
//│         in let* (x%58) = odd$D%1$S%0(x%68)
//│           in x%58
//│       O => let x%1 = False()
//│         in x%1
//│ )
//│ Def(6, foo, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%19,x%20) = mk$P%0(10)
//│   in if x%20
//│     true => let* (x%35,x%36) = mk$D%0$P%0(x%19)
//│       in if x%36
//│         true => let* (x%53,x%54) = mk$D%0$D%0$P%0(x%35)
//│           in if x%54
//│             true => let* (x%71,x%72) = mk$D%0$D%0$D%0$P%0(x%53)
//│               in if x%72
//│                 true => let* (x%86,x%87) = mk$D%0$D%0$D%0$D%0$P%0(x%71)
//│                   in if x%87
//│                     true => let* (x%104,x%105) = mk$D%0$D%0$D%0$D%0$D%0$P%0(x%86)
//│                       in if x%105
//│                         true => let* (x%118,x%119) = mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%104)
//│                           in if x%119
//│                             true => let* (x%128,x%129) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%118)
//│                               in if x%129
//│                                 true => let* (x%142,x%143) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%128)
//│                                   in if x%143
//│                                     true => let* (x%160,x%161) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%142)
//│                                       in if x%161
//│                                         true => let* (x%174,x%175) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%160)
//│                                           in if x%175
//│                                             true => let* (x%188,x%189) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%174)
//│                                               in if x%189
//│                                                 true => let* (x%202,x%203) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%188)
//│                                                   in if x%203
//│                                                     true => let* (x%216,x%217) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%202)
//│                                                       in if x%217
//│                                                         true => let* (x%230,x%231) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%216)
//│                                                           in if x%231
//│                                                             true => let* (x%240,x%241) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%230)
//│                                                               in if x%241
//│                                                                 true => let* (x%254,x%255) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%240)
//│                                                                   in if x%255
//│                                                                     true => let* (x%268,x%269) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%254)
//│                                                                       in if x%269
//│                                                                         true => let* (x%282,x%283) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%268)
//│                                                                           in if x%283
//│                                                                             true => let* (x%296,x%297) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%282)
//│                                                                               in if x%297
//│                                                                                 true => let* (x%298) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0(x%296)
//│                                                                                   in jump foo$M%0(x%298)
//│                                                                                 false => let* (x%299) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                                                   in jump foo$M%0(x%299)
//│                                                                             false => let* (x%285) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                                               in let x%308 = x%285.s
//│                                                                                 in jump foo$M%0$D%32$S%0(x%308)
//│                                                                         false => let* (x%271) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                                           in let x%294 = x%271.s
//│                                                                             in jump foo$M%0$D%30$S%0(x%294)
//│                                                                     false => let* (x%257) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                                       in let x%280 = x%257.s
//│                                                                         in jump foo$M%0$D%28$S%0(x%280)
//│                                                                 false => let* (x%243) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                                   in let x%266 = x%243.s
//│                                                                     in jump foo$M%0$D%26$S%0(x%266)
//│                                                             false => let* (x%233) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                               in let x%252 = x%233.s
//│                                                                 in jump foo$M%0$D%24$S%0(x%252)
//│                                                         false => let* (x%219) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                           in let x%238 = x%219.s
//│                                                             in jump foo$M%0$D%22$S%0(x%238)
//│                                                     false => let* (x%205) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                       in let x%224 = x%205.s
//│                                                         in jump foo$M%0$D%20$S%0(x%224)
//│                                                 false => let* (x%191) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                                   in let x%210 = x%191.s
//│                                                     in jump foo$M%0$D%18$S%0(x%210)
//│                                             false => let* (x%177) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                               in let x%196 = x%177.s
//│                                                 in jump foo$M%0$D%16$S%0(x%196)
//│                                         false => let* (x%163) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                           in let x%182 = x%163.s
//│                                             in jump foo$M%0$D%14$S%0(x%182)
//│                                     false => let* (x%145) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                       in let x%168 = x%145.s
//│                                         in jump foo$M%0$D%12$S%0(x%168)
//│                                 false => let* (x%131) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                                   in let x%154 = x%131.s
//│                                     in jump foo$M%0$D%10$S%0(x%154)
//│                             false => let* (x%121) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│                               in let x%140 = x%121.s
//│                                 in jump foo$M%0$D%8$S%0(x%140)
//│                         false => let* (x%107) = mk$D%0$D%0$D%0$D%0$D%0$D%1()
//│                           in let x%126 = x%107.s
//│                             in jump foo$M%0$D%6$S%0(x%126)
//│                     false => let* (x%89) = mk$D%0$D%0$D%0$D%0$D%1()
//│                       in let x%112 = x%89.s
//│                         in jump foo$M%0$D%4$S%0(x%112)
//│                 false => let* (x%74) = mk$D%0$D%0$D%0$D%1()
//│                   in let x%98 = x%74.s
//│                     in jump foo$M%0$D%2$S%0(x%98)
//│             false => let* (x%56) = mk$D%0$D%0$D%1()
//│               in let x%83 = x%56.s
//│                 in jump foo$M%0$D%0$S%0(x%83)
//│         false => let* (x%38) = mk$D%0$D%1()
//│           in let x%84 = x%38.s
//│             in jump foo$M%0$D%0$S%0(x%84)
//│     false => let x%1 = False()
//│       in x%1
//│ )
//│ Def(7, mk$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%10 = >(n%0,0)
//│   in n%0,x%10
//│ )
//│ Def(10, @join foo$M%0, [x%16], [{EDestruct,EDirect,ESelect(s)}],
//│ S: None,
//│ I: [[Some(ICtor(S))],[Some(IMix(ICtor(S)))]],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ case x%16 of
//│   S => let x%67 = x%16.s
//│     in let* (x%47) = odd$D%1$S%0(x%67)
//│       in x%47
//│   O => let x%1 = False()
//│     in x%1
//│ )
//│ Def(13, mk$D%0$P%0, [n%0], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let x%11 = -(n%0,1)
//│   in let* (x%23,x%24) = mk$P%0(x%11)
//│     in x%23,x%24
//│ )
//│ Def(15, mk$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let x%14 = O()
//│   in let x%13 = S(x%14)
//│     in x%13
//│ )
//│ Def(24, mk$D%0$D%0$P%0, [x%23], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%31,x%32) = mk$D%0$P%0(x%23)
//│   in x%31,x%32
//│ )
//│ Def(26, mk$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%34) = mk$D%0$D%1()
//│   in let x%13 = S(x%34)
//│     in x%13
//│ )
//│ Def(36, odd$D%1$S%0, [x%0_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: Some(41),
//│ 1, 
//│ let* (x%3) = even(x%0_s)
//│   in x%3
//│ )
//│ Def(40, mk$D%0$D%0$D%0$P%0, [x%31], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%60,x%61) = mk$D%0$D%0$P%0(x%31)
//│   in x%60,x%61
//│ )
//│ Def(42, mk$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%63) = mk$D%0$D%0$D%1()
//│   in let x%13 = S(x%63)
//│     in x%13
//│ )
//│ Def(46, foo$M%0$D%0$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(50, mk$D%0$D%0$D%0$D%0$P%0, [x%60], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%79,x%80) = mk$D%0$D%0$D%0$P%0(x%60)
//│   in x%79,x%80
//│ )
//│ Def(52, mk$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%82) = mk$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%82)
//│     in x%13
//│ )
//│ Def(56, foo$M%0$D%2$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(60, mk$D%0$D%0$D%0$D%0$D%0$P%0, [x%79], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%94,x%95) = mk$D%0$D%0$D%0$D%0$P%0(x%79)
//│   in x%94,x%95
//│ )
//│ Def(62, mk$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%97) = mk$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%97)
//│     in x%13
//│ )
//│ Def(66, foo$M%0$D%4$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(67, mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%94], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%100,x%101) = mk$D%0$D%0$D%0$D%0$D%0$P%0(x%94)
//│   in x%100,x%101
//│ )
//│ Def(69, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%103) = mk$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%103)
//│     in x%13
//│ )
//│ Def(76, foo$M%0$D%6$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(80, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%100], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%122,x%123) = mk$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%100)
//│   in x%122,x%123
//│ )
//│ Def(82, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%125) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%125)
//│     in x%13
//│ )
//│ Def(86, foo$M%0$D%8$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(90, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%122], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%132,x%133) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%122)
//│   in x%132,x%133
//│ )
//│ Def(92, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%135) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%135)
//│     in x%13
//│ )
//│ Def(96, foo$M%0$D%10$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(100, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%132], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%150,x%151) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%132)
//│   in x%150,x%151
//│ )
//│ Def(102, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%153) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%153)
//│     in x%13
//│ )
//│ Def(106, foo$M%0$D%12$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(107, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%150], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%156,x%157) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%150)
//│   in x%156,x%157
//│ )
//│ Def(109, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%159) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%159)
//│     in x%13
//│ )
//│ Def(116, foo$M%0$D%14$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(120, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%156], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%178,x%179) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%156)
//│   in x%178,x%179
//│ )
//│ Def(122, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%181) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%181)
//│     in x%13
//│ )
//│ Def(126, foo$M%0$D%16$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(130, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%178], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%184,x%185) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%178)
//│   in x%184,x%185
//│ )
//│ Def(132, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%187) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%187)
//│     in x%13
//│ )
//│ Def(136, foo$M%0$D%18$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(140, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%184], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%206,x%207) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%184)
//│   in x%206,x%207
//│ )
//│ Def(142, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%209) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%209)
//│     in x%13
//│ )
//│ Def(146, foo$M%0$D%20$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(147, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%206], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%212,x%213) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%206)
//│   in x%212,x%213
//│ )
//│ Def(149, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%215) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%215)
//│     in x%13
//│ )
//│ Def(156, foo$M%0$D%22$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(160, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%212], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%234,x%235) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%212)
//│   in x%234,x%235
//│ )
//│ Def(162, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%237) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%237)
//│     in x%13
//│ )
//│ Def(166, foo$M%0$D%24$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(170, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%234], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%248,x%249) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%234)
//│   in x%248,x%249
//│ )
//│ Def(172, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%251) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%251)
//│     in x%13
//│ )
//│ Def(176, foo$M%0$D%26$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(180, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%248], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%262,x%263) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%248)
//│   in x%262,x%263
//│ )
//│ Def(182, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%265) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%265)
//│     in x%13
//│ )
//│ Def(186, foo$M%0$D%28$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(190, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%262], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%272,x%273) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%262)
//│   in x%272,x%273
//│ )
//│ Def(192, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%275) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%275)
//│     in x%13
//│ )
//│ Def(196, foo$M%0$D%30$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ Def(200, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0, [x%272], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [None,None],
//│ Rec: None,
//│ 2, 
//│ let* (x%286,x%287) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%272)
//│   in x%286,x%287
//│ )
//│ Def(201, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0, [x%286], [{EDirect}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(S)))],
//│ Rec: Some(12),
//│ 1, 
//│ let* (x%300,x%301) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$P%0(x%286)
//│   in if x%301
//│     true => let* (x%302) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0(x%300)
//│       in let x%13 = S(x%302)
//│         in x%13
//│     false => let* (x%303) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│       in let x%13 = S(x%303)
//│         in x%13
//│ )
//│ Def(202, mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1, [], [],
//│ S: None,
//│ I: [],
//│ R: [Some(ICtor(S))],
//│ Rec: None,
//│ 1, 
//│ let* (x%289) = mk$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%0$D%1()
//│   in let x%13 = S(x%289)
//│     in x%13
//│ )
//│ Def(206, foo$M%0$D%32$S%0, [x%16_s], [{EDirect,EIndirectDestruct,ESelect(s)}],
//│ S: None,
//│ I: [],
//│ R: [Some(IMix(ICtor(False),ICtor(True)))],
//│ Rec: None,
//│ 1, 
//│ let* (x%47) = odd$D%1$S%0(x%16_s)
//│   in x%47
//│ )
//│ },
//│ let* (x%18) = foo()
//│   in x%18)
//│ 
//│ 
//│ Interpreted ------------------------------
//│ False()
//│ 
//│ 
//│ Fuel used: 20
//│ GraphOpt failed: Fuel exhausted
//│ mlscript.compiler.optimizer.GraphOptimizingError$.apply(GraphOptimizer.scala:15)
//│ mlscript.compiler.DiffTestCompiler.postProcess(Test.scala:66)
//│ mlscript.DiffTests.rec$1(DiffTests.scala:438)
//│ mlscript.DiffTests.$anonfun$new$3(DiffTests.scala:1067)
//│ org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)
//│ org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)
//│ org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
//│ org.scalatest.Transformer.apply(Transformer.scala:22)
//│ org.scalatest.Transformer.apply(Transformer.scala:20)
//│ org.scalatest.funsuite.AnyFunSuiteLike$$anon$1.apply(AnyFunSuiteLike.scala:226)
//│ org.scalatest.TestSuite.withFixture(TestSuite.scala:196)
//│ org.scalatest.TestSuite.withFixture$(TestSuite.scala:195)
//│ mlscript.DiffTests.org$scalatest$concurrent$TimeLimitedTests$$super$withFixture(DiffTests.scala:47)
//│ org.scalatest.concurrent.TimeLimitedTests.$anonfun$withFixture$3(TimeLimitedTests.scala:154)
//│ org.scalatest.enablers.Timed$$anon$1.timeoutAfter(Timed.scala:127)
//│ org.scalatest.concurrent.TimeLimits$.failAfterImpl(TimeLimits.scala:282)
//│ org.scalatest.concurrent.TimeLimitedTests.withFixture(TimeLimitedTests.scala:153)
//│ org.scalatest.concurrent.TimeLimitedTests.withFixture$(TimeLimitedTests.scala:150)
//│ mlscript.DiffTests.withFixture(DiffTests.scala:47)
//│ org.scalatest.funsuite.AnyFunSuiteLike.invokeWithFixture$1(AnyFunSuiteLike.scala:224)
//│ org.scalatest.funsuite.AnyFunSuiteLike.$anonfun$runTest$1(AnyFunSuiteLike.scala:236)
//│ org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)
//│ org.scalatest.funsuite.AnyFunSuiteLike.runTest(AnyFunSuiteLike.scala:236)
//│ org.scalatest.funsuite.AnyFunSuiteLike.runTest$(AnyFunSuiteLike.scala:218)
//│ mlscript.DiffTests.org$scalatest$OneInstancePerTest$$super$runTest(DiffTests.scala:47)
//│ org.scalatest.OneInstancePerTest.runTest(OneInstancePerTest.scala:131)
//│ org.scalatest.OneInstancePerTest.runTest$(OneInstancePerTest.scala:123)
//│ mlscript.DiffTests.org$scalatest$ParallelTestExecution$$super$runTest(DiffTests.scala:47)
//│ org.scalatest.ParallelTestExecution.runTest(ParallelTestExecution.scala:164)
//│ org.scalatest.ParallelTestExecution.runTest$(ParallelTestExecution.scala:148)
//│ mlscript.DiffTests.runTest(DiffTests.scala:47)
//│ org.scalatest.OneInstancePerTest.runTests(OneInstancePerTest.scala:181)
//│ org.scalatest.OneInstancePerTest.runTests$(OneInstancePerTest.scala:172)
//│ mlscript.DiffTests.org$scalatest$ParallelTestExecution$$super$runTests(DiffTests.scala:47)
//│ org.scalatest.ParallelTestExecution.runTests(ParallelTestExecution.scala:97)
//│ org.scalatest.ParallelTestExecution.runTests$(ParallelTestExecution.scala:79)
//│ mlscript.DiffTests.runTests(DiffTests.scala:47)
//│ org.scalatest.Suite.run(Suite.scala:1114)
//│ org.scalatest.Suite.run$(Suite.scala:1096)
//│ org.scalatest.funsuite.AnyFunSuite.org$scalatest$funsuite$AnyFunSuiteLike$$super$run(AnyFunSuite.scala:1563)
//│ org.scalatest.funsuite.AnyFunSuiteLike.$anonfun$run$1(AnyFunSuiteLike.scala:273)
//│ org.scalatest.SuperEngine.runImpl(Engine.scala:535)
//│ org.scalatest.funsuite.AnyFunSuiteLike.run(AnyFunSuiteLike.scala:273)
//│ org.scalatest.funsuite.AnyFunSuiteLike.run$(AnyFunSuiteLike.scala:272)
//│ mlscript.DiffTests.org$scalatest$ParallelTestExecution$$super$run(DiffTests.scala:47)
//│ org.scalatest.ParallelTestExecution.run(ParallelTestExecution.scala:261)
//│ org.scalatest.ParallelTestExecution.run$(ParallelTestExecution.scala:258)
//│ mlscript.DiffTests.run(DiffTests.scala:47)
//│ org.scalatest.tools.DistributedTestRunnerSuite.run(DistributedTestRunnerSuite.scala:22)
//│ org.scalatest.tools.SuiteRunner.run(SuiteRunner.scala:47)
//│ java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
//│ java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
//│ java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
//│ java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
//│ java.base/java.lang.Thread.run(Thread.java:840)

